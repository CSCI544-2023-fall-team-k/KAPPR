{
  "Version": "1.0",
  "FreebaseVersion": "2015-08-09",
  "Questions": [
    {
      "QuestionId": "WebQTest-6",
      "RawQuestion": "where is jamarcus russell from?",
      "ProcessedQuestion": "where is jamarcus russell from",
      "Parses": [
        {
          "ParseId": "WebQTest-6.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1676743) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1676743 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jamarcus russell",
          "TopicEntityName": "JaMarcus Russell",
          "TopicEntityMid": "m.0cjcdj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.058cm",
              "EntityName": "Mobile"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-7",
      "RawQuestion": "where was george washington carver from?",
      "ProcessedQuestion": "where was george washington carver from",
      "Parses": [
        {
          "ParseId": "WebQTest-7.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296898) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296898 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george washington carver",
          "TopicEntityName": "George Washington Carver",
          "TopicEntityMid": "m.03djm",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xhsh",
              "EntityName": "Diamond"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-19",
      "RawQuestion": "what is my timezone in louisiana?",
      "ProcessedQuestion": "what is my timezone in louisiana",
      "Parses": [
        {
          "ParseId": "WebQTest-19.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1588 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "louisiana",
          "TopicEntityName": "Louisiana",
          "TopicEntityMid": "m.04ly1",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-20",
      "RawQuestion": "what did st augustine do?",
      "ProcessedQuestion": "what did st augustine do",
      "Parses": [
        {
          "ParseId": "WebQTest-20.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8018) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8018 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "augustine",
          "TopicEntityName": "Augustine of Hippo",
          "TopicEntityMid": "m.0w6w",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-23",
      "RawQuestion": "what town was martin luther king assassinated in?",
      "ProcessedQuestion": "what town was martin luther king assassinated in",
      "Parses": [
        {
          "ParseId": "WebQTest-23.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-24",
      "RawQuestion": "where did edgar allan poe died?",
      "ProcessedQuestion": "where did edgar allan poe died",
      "Parses": [
        {
          "ParseId": "WebQTest-24.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16867) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16867 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "edgar allan poe",
          "TopicEntityName": "Edgar Allan Poe",
          "TopicEntityMid": "m.02lt8",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.094jv",
              "EntityName": "Baltimore"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-33",
      "RawQuestion": "what timezone is sweden?",
      "ProcessedQuestion": "what timezone is sweden",
      "Parses": [
        {
          "ParseId": "WebQTest-33.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "sweden",
          "TopicEntityName": "Sweden",
          "TopicEntityMid": "m.0d0vqn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02llzg",
              "EntityName": "Central European Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-35",
      "RawQuestion": "what county is frederick md in?",
      "ProcessedQuestion": "what county is frederick md in",
      "Parses": [
        {
          "ParseId": "WebQTest-35.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q472675) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q472675 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "frederick md",
          "TopicEntityName": "Frederick",
          "TopicEntityMid": "m.0dhml",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc07",
              "EntityName": "Frederick County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-35.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dhml)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dhml ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "frederick md",
          "TopicEntityName": "Frederick",
          "TopicEntityMid": "m.0dhml",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc07",
              "EntityName": "Frederick County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-37",
      "RawQuestion": "what timezone is utah in?",
      "ProcessedQuestion": "what timezone is utah in",
      "Parses": [
        {
          "ParseId": "WebQTest-37.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q829) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q829 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "utah",
          "TopicEntityName": "Utah",
          "TopicEntityMid": "m.07srw",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-43",
      "RawQuestion": "what did george clemenceau do?",
      "ProcessedQuestion": "what did george clemenceau do",
      "Parses": [
        {
          "ParseId": "WebQTest-43.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q171730) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q171730 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "george clemenceau",
          "TopicEntityName": "Georges Clémenceau",
          "TopicEntityMid": "m.0hff8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h668d",
              "EntityName": "Publisher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-45",
      "RawQuestion": "where was rihanna born and raised?",
      "ProcessedQuestion": "where was rihanna born and raised",
      "Parses": [
        {
          "ParseId": "WebQTest-45.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36844) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36844 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "rihanna",
          "TopicEntityName": "Rihanna",
          "TopicEntityMid": "m.06mt91",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p5kp",
              "EntityName": "Saint Michael Parish"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-46",
      "RawQuestion": "what year did president william henry harrison take office?",
      "ProcessedQuestion": "what year did president william henry harrison take office",
      "Parses": [
        {
          "ParseId": "WebQTest-46.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11869) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11869 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "william henry harrison",
          "TopicEntityName": "William Henry Harrison",
          "TopicEntityMid": "m.0835q",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1841-03-04",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-47",
      "RawQuestion": "where george lopez was born?",
      "ProcessedQuestion": "where george lopez was born",
      "Parses": [
        {
          "ParseId": "WebQTest-47.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q73035) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q73035 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george lopez",
          "TopicEntityName": "George Lopez",
          "TopicEntityMid": "m.02xfj0",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kfz0",
              "EntityName": "Mission Hills"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-52",
      "RawQuestion": "what did george orwell died of?",
      "ProcessedQuestion": "what did george orwell died of",
      "Parses": [
        {
          "ParseId": "WebQTest-52.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3335) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3335 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "george orwell",
          "TopicEntityName": "George Orwell",
          "TopicEntityMid": "m.034bs",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-55",
      "RawQuestion": "who is michael buble?",
      "ProcessedQuestion": "who is michael buble",
      "Parses": [
        {
          "ParseId": "WebQTest-55.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q153694) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q153694 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "michael buble",
          "TopicEntityName": "Michael Bublé",
          "TopicEntityMid": "m.02xkkq",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-56",
      "RawQuestion": "what county is kansas city kansas?",
      "ProcessedQuestion": "what county is kansas city kansas",
      "Parses": [
        {
          "ParseId": "WebQTest-56.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q486472) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q486472 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "kansas city kansas",
          "TopicEntityName": "Kansas City",
          "TopicEntityMid": "m.0tcj6",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnyr",
              "EntityName": "Wyandotte County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-56.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tcj6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tcj6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "kansas city kansas",
          "TopicEntityName": "Kansas City",
          "TopicEntityMid": "m.0tcj6",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnyr",
              "EntityName": "Wyandotte County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-56.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04fdkj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04fdkj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "kansas city kansas",
          "TopicEntityName": "Kansas Speedway",
          "TopicEntityMid": "m.04fdkj",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnyr",
              "EntityName": "Wyandotte County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-58",
      "RawQuestion": "who did jackie robinson first play for?",
      "ProcessedQuestion": "who did jackie robinson first play for",
      "Parses": [
        {
          "ParseId": "WebQTest-58.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221048) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221048 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "jackie robinson",
          "TopicEntityName": "Jackie Robinson",
          "TopicEntityMid": "m.0443c",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fbtm7",
              "EntityName": "UCLA Bruins football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-60",
      "RawQuestion": "where did eleanor roosevelt die?",
      "ProcessedQuestion": "where did eleanor roosevelt die",
      "Parses": [
        {
          "ParseId": "WebQTest-60.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83396) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83396 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "eleanor roosevelt",
          "TopicEntityName": "Eleanor Roosevelt",
          "TopicEntityMid": "m.02n9k",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc56",
              "EntityName": "Manhattan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-67",
      "RawQuestion": "what kind of cancer did carl wilson have?",
      "ProcessedQuestion": "what kind of cancer did carl wilson have",
      "Parses": [
        {
          "ParseId": "WebQTest-67.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q504920) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q504920 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "carl wilson",
          "TopicEntityName": "Carl Wilson",
          "TopicEntityMid": "m.01n9vwg",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p3w",
              "EntityName": "Lung cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09969",
              "EntityName": "Brain tumor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-69",
      "RawQuestion": "what county is brentwood tennessee in?",
      "ProcessedQuestion": "what county is brentwood tennessee in",
      "Parses": [
        {
          "ParseId": "WebQTest-69.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3096621) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3096621 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "brentwood tennessee",
          "TopicEntityName": "Brentwood",
          "TopicEntityMid": "m.0_xcq",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0msrq",
              "EntityName": "Williamson County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-69.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_xcq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_xcq ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "brentwood tennessee",
          "TopicEntityName": "Brentwood",
          "TopicEntityMid": "m.0_xcq",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0msrq",
              "EntityName": "Williamson County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-75",
      "RawQuestion": "what disease did patrick swayze died from?",
      "ProcessedQuestion": "what disease did patrick swayze died from",
      "Parses": [
        {
          "ParseId": "WebQTest-75.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49004) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49004 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "patrick swayze",
          "TopicEntityName": "Patrick Swayze",
          "TopicEntityMid": "m.02h3tp",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_qc_",
              "EntityName": "Pancreatic cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-79",
      "RawQuestion": "what country did buddha come from?",
      "ProcessedQuestion": "what country did buddha come from",
      "Parses": [
        {
          "ParseId": "WebQTest-79.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9441) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9441 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "buddha",
          "TopicEntityName": "Gautama Buddha",
          "TopicEntityMid": "m.015k7",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016zwt",
              "EntityName": "Nepal"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-80",
      "RawQuestion": "what county is greeley colorado in?",
      "ProcessedQuestion": "what county is greeley colorado in",
      "Parses": [
        {
          "ParseId": "WebQTest-80.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q94274) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q94274 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "greeley colorado",
          "TopicEntityName": "Greeley",
          "TopicEntityMid": "m.0rczx",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n_ps",
              "EntityName": "Weld County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-80.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rczx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rczx ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "greeley colorado",
          "TopicEntityName": "Greeley",
          "TopicEntityMid": "m.0rczx",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n_ps",
              "EntityName": "Weld County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-82",
      "RawQuestion": "what did peter tchaikovsky do?",
      "ProcessedQuestion": "what did peter tchaikovsky do",
      "Parses": [
        {
          "ParseId": "WebQTest-82.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7315) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7315 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "peter tchaikovsky",
          "TopicEntityName": "Pyotr Ilyich Tchaikovsky",
          "TopicEntityMid": "m.063tn",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nhv",
              "EntityName": "Librettist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-84",
      "RawQuestion": "what type of music did john lennon sing?",
      "ProcessedQuestion": "what type of music did john lennon sing",
      "Parses": [
        {
          "ParseId": "WebQTest-84.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1203 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "john lennon",
          "TopicEntityName": "John Lennon",
          "TopicEntityMid": "m.01vsl3_",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_kn",
              "EntityName": "Soft rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ckfl9",
              "EntityName": "Experimental music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05w3f",
              "EntityName": "Psychedelic rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08jyyk",
              "EntityName": "Experimental rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cx7f",
              "EntityName": "Art rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-86",
      "RawQuestion": "which country does greenland belong to?",
      "ProcessedQuestion": "which country does greenland belong to",
      "Parses": [
        {
          "ParseId": "WebQTest-86.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4148644) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4148644 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "greenland",
          "TopicEntityName": "Greenland",
          "TopicEntityMid": "m.035v3",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k6nt",
              "EntityName": "Denmark"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-87",
      "RawQuestion": "what the zip code for seattle washington?",
      "ProcessedQuestion": "what the zip code for seattle washington",
      "Parses": [
        {
          "ParseId": "WebQTest-87.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5083) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5083 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "seattle washington",
          "TopicEntityName": "Seattle",
          "TopicEntityMid": "m.0d9jr",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020b572",
              "EntityName": "98109"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020r3kv",
              "EntityName": "98131"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021g5dm",
              "EntityName": "98122"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021ghmz",
              "EntityName": "98166"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021ghs6",
              "EntityName": "98168"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021gkmr",
              "EntityName": "98198"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021gykc",
              "EntityName": "98155"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hbk1",
              "EntityName": "98188"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hbty",
              "EntityName": "98105"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hbzb",
              "EntityName": "98112"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hc0f",
              "EntityName": "98103"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hc2t",
              "EntityName": "98104"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hc4m",
              "EntityName": "98115"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hc9v",
              "EntityName": "98101"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hcmf",
              "EntityName": "98102"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hcn7",
              "EntityName": "98116"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hcpd",
              "EntityName": "98108"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hcw9",
              "EntityName": "98121"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hcx9",
              "EntityName": "98144"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hd2k",
              "EntityName": "98107"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hdy8",
              "EntityName": "98125"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hfsp",
              "EntityName": "98117"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hfvn",
              "EntityName": "98133"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hgpc",
              "EntityName": "98134"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hh6h",
              "EntityName": "98199"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hjjq",
              "EntityName": "98119"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hkxk",
              "EntityName": "98136"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hmgb",
              "EntityName": "98106"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hnt8",
              "EntityName": "98118"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021hqp9",
              "EntityName": "98126"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021j58x",
              "EntityName": "98154"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021j5jr",
              "EntityName": "98164"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021j82v",
              "EntityName": "98161"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021jn8d",
              "EntityName": "98178"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021jq79",
              "EntityName": "98113"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021jtyl",
              "EntityName": "98177"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wrtkc",
              "EntityName": "98195"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dyr4r",
              "EntityName": "98146"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dyr54",
              "EntityName": "98148"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dyr6h",
              "EntityName": "98174"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bdr2t",
              "EntityName": "98185"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npw_4",
              "EntityName": "98190"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npw_l",
              "EntityName": "98184"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npw_t",
              "EntityName": "98181"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npwzq",
              "EntityName": "98194"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npwzy",
              "EntityName": "98191"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx00",
              "EntityName": "98175"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx07",
              "EntityName": "98171"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx0g",
              "EntityName": "98170"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx0p",
              "EntityName": "98165"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx0x",
              "EntityName": "98160"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx1_",
              "EntityName": "98138"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx13",
              "EntityName": "98158"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx1b",
              "EntityName": "98145"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx1k",
              "EntityName": "98141"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx1s",
              "EntityName": "98139"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx26",
              "EntityName": "98132"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx2f",
              "EntityName": "98129"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx2n",
              "EntityName": "98127"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx2w",
              "EntityName": "98124"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx32",
              "EntityName": "98114"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07npx3j",
              "EntityName": "98111"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sm_9r",
              "EntityName": "98119-4114"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-90",
      "RawQuestion": "who played on the jeffersons?",
      "ProcessedQuestion": "who played on the jeffersons",
      "Parses": [
        {
          "ParseId": "WebQTest-90.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q153227) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q153227 wdt:P161 ?y . ?y wdt:P161 ?x . } ",
          "PotentialTopicEntityMention": "the jeffersons",
          "TopicEntityName": "The Jeffersons",
          "TopicEntityMid": "m.02f8jf",
          "InferentialChain": [
            "tv.tv_program.regular_cast",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_yyp",
              "EntityName": "Sherman Hemsley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_z06",
              "EntityName": "Isabel Sanford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0279gxy",
              "EntityName": "Damon Evans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0279gyz",
              "EntityName": "Berlinda Tolbert"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03h436",
              "EntityName": "Roxie Roker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03k25c",
              "EntityName": "Zara Cully"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03zwg4",
              "EntityName": "Marla Gibbs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06b_nc",
              "EntityName": "Franklin Cover"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c6b4y",
              "EntityName": "Paul Benedict"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0clm34",
              "EntityName": "Mike Evans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gydmc",
              "EntityName": "Jay Hammer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-94",
      "RawQuestion": "what did randy savage died of?",
      "ProcessedQuestion": "what did randy savage died of",
      "Parses": [
        {
          "ParseId": "WebQTest-94.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q59635) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q59635 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "randy savage",
          "TopicEntityName": "Randy Savage",
          "TopicEntityMid": "m.02p7_z",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-96",
      "RawQuestion": "where did richard nixon die?",
      "ProcessedQuestion": "where did richard nixon die",
      "Parses": [
        {
          "ParseId": "WebQTest-96.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9588 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "richard nixon",
          "TopicEntityName": "Richard Nixon",
          "TopicEntityMid": "m.06c97",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-103",
      "RawQuestion": "what basketball teams has shaq played for?",
      "ProcessedQuestion": "what basketball teams has shaq played for",
      "Parses": [
        {
          "ParseId": "WebQTest-103.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q169452) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q169452 wdt:P54 ?y . ?y wdt:P54 ?x . ?x wdt:P641 wd:Q5372 . } ",
          "PotentialTopicEntityMention": "shaq",
          "TopicEntityName": "Shaquille O'Neal",
          "TopicEntityMid": "m.012xdf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.018w8",
              "EntityName": "Basketball",
              "SourceNodeIndex": 1,
              "NodePredicate": "sports.sports_team.sport",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026dqjm",
              "EntityName": "LSU Tigers men's basketball"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwjj",
              "EntityName": "Boston Celtics"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm2v",
              "EntityName": "Miami Heat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm4b",
              "EntityName": "Orlando Magic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm7n",
              "EntityName": "Cleveland Cavaliers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jml5",
              "EntityName": "Phoenix Suns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-104",
      "RawQuestion": "where is jay leno from?",
      "ProcessedQuestion": "where is jay leno from",
      "Parses": [
        {
          "ParseId": "WebQTest-104.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q218718) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q218718 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jay leno",
          "TopicEntityName": "Jay Leno",
          "TopicEntityMid": "m.046lt",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yc84",
              "EntityName": "New Rochelle"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-106",
      "RawQuestion": "who did armie hammer play in the social network?",
      "ProcessedQuestion": "who did armie hammer play in the social network",
      "Parses": [
        {
          "ParseId": "WebQTest-106.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q185888) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q185888 wdt:P161 ?y . ?y wdt:P453 ?x . ?y wdt:P161 wd:Q374273 . } ",
          "PotentialTopicEntityMention": "social network",
          "TopicEntityName": "The Social Network",
          "TopicEntityMid": "m.07s846j",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03y9941",
              "EntityName": "Armie Hammer",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09tb_f3",
              "EntityName": "Tyler Winklevoss"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09tbj8d",
              "EntityName": "Cameron Winklevoss"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-107",
      "RawQuestion": "what was thomas jefferson role in the declaration of independence?",
      "ProcessedQuestion": "what was thomas jefferson role in the declaration of independence",
      "Parses": [
        {
          "ParseId": "WebQTest-107.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11812 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "thomas jefferson",
          "TopicEntityName": "Thomas Jefferson",
          "TopicEntityMid": "m.07cbs",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6pd1",
              "EntityName": "Archaeologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g0vx",
              "EntityName": "Farmer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mn6",
              "EntityName": "Architect"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-110",
      "RawQuestion": "who does peyton manning play football for?",
      "ProcessedQuestion": "who does peyton manning play football for",
      "Parses": [
        {
          "ParseId": "WebQTest-110.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7539) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7539 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "peyton manning",
          "TopicEntityName": "Peyton Manning",
          "TopicEntityMid": "m.027jv8",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0289q",
              "EntityName": "Denver Broncos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-112",
      "RawQuestion": "what was robert burns?",
      "ProcessedQuestion": "what was robert burns",
      "Parses": [
        {
          "ParseId": "WebQTest-112.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81960) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81960 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "robert burns",
          "TopicEntityName": "Robert Burns",
          "TopicEntityMid": "m.09482",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0knj1",
              "EntityName": "Bard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-121",
      "RawQuestion": "what team did david beckham play for in 2011?",
      "ProcessedQuestion": "what team did david beckham play for in 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-121.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k2yr",
              "EntityName": "LA Galaxy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-122",
      "RawQuestion": "where did francisco coronado come from?",
      "ProcessedQuestion": "where did francisco coronado come from",
      "Parses": [
        {
          "ParseId": "WebQTest-122.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q271974) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q271974 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "francisco coronado",
          "TopicEntityName": "Francisco Vázquez de Coronado",
          "TopicEntityMid": "m.0jgb2",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b283h",
              "EntityName": "Salamanca"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-125",
      "RawQuestion": "what are abraham sons names?",
      "ProcessedQuestion": "what are abraham sons names",
      "Parses": [
        {
          "ParseId": "WebQTest-125.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9181) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9181 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "abraham",
          "TopicEntityName": "Abraham",
          "TopicEntityMid": "m.0pwb",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ghr4",
              "EntityName": "Ishmael"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pv75j",
              "EntityName": "Ishbak"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w6dpm",
              "EntityName": "Shuah"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03xqw",
              "EntityName": "Isaac"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08flgy",
              "EntityName": "Zimran"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b__3p",
              "EntityName": "Jokshan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c05cp",
              "EntityName": "Medan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ch5jk5",
              "EntityName": "Midian"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-126",
      "RawQuestion": "who wrote the jana gana mana?",
      "ProcessedQuestion": "who wrote the jana gana mana",
      "Parses": [
        {
          "ParseId": "WebQTest-126.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83099) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83099 wdt:P86 ?x . } ",
          "PotentialTopicEntityMention": "jana gana mana",
          "TopicEntityName": "Jana Gana Mana",
          "TopicEntityMid": "m.0fl44",
          "InferentialChain": [
            "music.composition.composer"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vx721",
              "EntityName": "Ram Singh Thakur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d0mbj",
              "EntityName": "Rabindranath Tagore"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-129",
      "RawQuestion": "what was lucille ball?",
      "ProcessedQuestion": "what was lucille ball",
      "Parses": [
        {
          "ParseId": "WebQTest-129.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209662) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209662 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "lucille ball",
          "TopicEntityName": "Lucille Ball",
          "TopicEntityMid": "m.04nw9",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-131",
      "RawQuestion": "who inspired obama?",
      "ProcessedQuestion": "who inspired obama",
      "Parses": [
        {
          "ParseId": "WebQTest-131.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018q7p",
              "EntityName": "Saul Alinsky"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d1nj",
              "EntityName": "Reinhold Niebuhr"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ct6p",
              "EntityName": "Nipsey Russell"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-133",
      "RawQuestion": "where did dolly parton grow up?",
      "ProcessedQuestion": "where did dolly parton grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-133.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180453) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180453 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "dolly parton",
          "TopicEntityName": "Dolly Parton",
          "TopicEntityMid": "m.02f1c",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_wrs",
              "EntityName": "Sevierville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-134",
      "RawQuestion": "what type of books did agatha christie wrote?",
      "ProcessedQuestion": "what type of books did agatha christie wrote",
      "Parses": [
        {
          "ParseId": "WebQTest-134.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35064) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35064 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "agatha christie",
          "TopicEntityName": "Agatha Christie",
          "TopicEntityMid": "m.0ldd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hv44_",
              "EntityName": "Playwright"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-154",
      "RawQuestion": "what instruments did louis armstrong play?",
      "ProcessedQuestion": "what instruments did louis armstrong play",
      "Parses": [
        {
          "ParseId": "WebQTest-154.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020w2",
              "EntityName": "Cornet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-156",
      "RawQuestion": "what time zone am i in california?",
      "ProcessedQuestion": "what time zone am i in california",
      "Parses": [
        {
          "ParseId": "WebQTest-156.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q99) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q99 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "california",
          "TopicEntityName": "California",
          "TopicEntityMid": "m.01n7q",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-159",
      "RawQuestion": "what time in hilo hawaii?",
      "ProcessedQuestion": "what time in hilo hawaii",
      "Parses": [
        {
          "ParseId": "WebQTest-159.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q216258) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q216258 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "hilo hawaii",
          "TopicEntityName": "Hilo",
          "TopicEntityMid": "m.0r_ch",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-164",
      "RawQuestion": "what did stephen hawking become famous for?",
      "ProcessedQuestion": "what did stephen hawking become famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-164.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17714) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17714 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "stephen hawking",
          "TopicEntityName": "Stephen Hawking",
          "TopicEntityMid": "m.01tdnyh",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fly",
              "EntityName": "Professor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h65p0",
              "EntityName": "Astrophysicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h666v",
              "EntityName": "Science writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qsdk0",
              "EntityName": "Cosmologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-166",
      "RawQuestion": "what was dr seuss education?",
      "ProcessedQuestion": "what was dr seuss education",
      "Parses": [
        {
          "ParseId": "WebQTest-166.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q298685) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q298685 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "dr seuss",
          "TopicEntityName": "Theodore Lesieg",
          "TopicEntityMid": "m.02g3w",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bqy",
              "EntityName": "Dartmouth College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tgn",
              "EntityName": "University of Oxford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ym1n",
              "EntityName": "Lincoln College, Oxford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-167",
      "RawQuestion": "where did queensland get its name from?",
      "ProcessedQuestion": "where did queensland get its name from",
      "Parses": [
        {
          "ParseId": "WebQTest-167.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36074) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36074 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "queensland",
          "TopicEntityName": "Queensland",
          "TopicEntityMid": "m.0g39h",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cw10",
              "EntityName": "Queen Victoria"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-174",
      "RawQuestion": "what team does colin kaepernick play for?",
      "ProcessedQuestion": "what team does colin kaepernick play for",
      "Parses": [
        {
          "ParseId": "WebQTest-174.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q82496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q82496 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "colin kaepernick",
          "TopicEntityName": "Colin Kaepernick",
          "TopicEntityMid": "m.03cm6b3",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rny",
              "EntityName": "San Francisco 49ers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-177",
      "RawQuestion": "where was theodore roosevelt buried?",
      "ProcessedQuestion": "where was theodore roosevelt buried",
      "Parses": [
        {
          "ParseId": "WebQTest-177.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33866) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33866 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "theodore roosevelt",
          "TopicEntityName": "Theodore Roosevelt",
          "TopicEntityMid": "m.07hyk",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05230qz",
              "EntityName": "Youngs Memorial Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-178",
      "RawQuestion": "who was the leader of the us during wwii?",
      "ProcessedQuestion": "who was the leader of the us during wwii",
      "Parses": [
        {
          "ParseId": "WebQTest-178.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date range join. Original comment: F nested"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE {   wd:Q362 wdt:P580 ?start ;              wdt:P582 ?end .   ?x wdt:P39  ?y .   ?y wdt:P39 wd:Q11696 ; # President of the United States      wdt:P580  ?from ;      wdt:P582  ?to .   FILTER (?from < ?end)   FILTER (?to > ?start) }",
          "PotentialTopicEntityMention": "wwii",
          "TopicEntityName": "World War II",
          "TopicEntityMid": "m.081pw",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yy8",
              "EntityName": "Franklin D. Roosevelt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09bg4l",
              "EntityName": "Harry S. Truman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-180",
      "RawQuestion": "where the missouri river ends?",
      "ProcessedQuestion": "where the missouri river ends",
      "Parses": [
        {
          "ParseId": "WebQTest-180.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5419) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5419 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "missouri river",
          "TopicEntityName": "Missouri River",
          "TopicEntityMid": "m.04ykz",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04yf_",
              "EntityName": "Mississippi River"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-187",
      "RawQuestion": "what did stephen hawking study?",
      "ProcessedQuestion": "what did stephen hawking study",
      "Parses": [
        {
          "ParseId": "WebQTest-187.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17714) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17714 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "stephen hawking",
          "TopicEntityName": "Stephen Hawking",
          "TopicEntityMid": "m.01tdnyh",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qjt",
              "EntityName": "Physics"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-188",
      "RawQuestion": "where did bristol palin go to school?",
      "ProcessedQuestion": "where did bristol palin go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-188.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2190766) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2190766 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "bristol palin",
          "TopicEntityName": "Bristol Palin",
          "TopicEntityMid": "m.04jg1kh",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqd7",
              "EntityName": "Juneau-Douglas High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jdv0r",
              "EntityName": "Wasilla High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08r1_d",
              "EntityName": "West Anchorage High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-190",
      "RawQuestion": "what did dr. seuss do?",
      "ProcessedQuestion": "what did dr. seuss do",
      "Parses": [
        {
          "ParseId": "WebQTest-190.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q298685) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q298685 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "dr . seuss",
          "TopicEntityName": "Theodore Lesieg",
          "TopicEntityMid": "m.02g3w",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015h31",
              "EntityName": "Animator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0196pc",
              "EntityName": "Cartoonist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020xn5",
              "EntityName": "Illustrator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hz6vv",
              "EntityName": "Visual Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-193",
      "RawQuestion": "what school did ben roethlisberger go to?",
      "ProcessedQuestion": "what school did ben roethlisberger go to",
      "Parses": [
        {
          "ParseId": "WebQTest-193.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q537679) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q537679 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "ben roethlisberger",
          "TopicEntityName": "Ben Roethlisberger",
          "TopicEntityMid": "m.033t8w",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01r3y2",
              "EntityName": "Miami University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-200",
      "RawQuestion": "where was the vietnam war location?",
      "ProcessedQuestion": "where was the vietnam war location",
      "Parses": [
        {
          "ParseId": "WebQTest-200.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8740) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8740 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "vietnam war",
          "TopicEntityName": "Vietnam War",
          "TopicEntityMid": "m.07_nf",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01crd5",
              "EntityName": "Vietnam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xbgx",
              "EntityName": "Cambodia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hhv",
              "EntityName": "Laos"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.073q1",
              "EntityName": "Southeast Asia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g8bw",
              "EntityName": "South Vietnam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g970",
              "EntityName": "North Vietnam"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-205",
      "RawQuestion": "what school did sir ernest rutherford go to?",
      "ProcessedQuestion": "what school did sir ernest rutherford go to",
      "Parses": [
        {
          "ParseId": "WebQTest-205.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9123) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9123 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "sir ernest rutherford",
          "TopicEntityName": "Ernest Rutherford",
          "TopicEntityMid": "m.02m7r",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013tch",
              "EntityName": "Nelson College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02722n",
              "EntityName": "University of New Zealand"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tg4",
              "EntityName": "University of Cambridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tk7",
              "EntityName": "Trinity College, Cambridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07xpm",
              "EntityName": "University of Canterbury"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-206",
      "RawQuestion": "what position does brandon roy play?",
      "ProcessedQuestion": "what position does brandon roy play",
      "Parses": [
        {
          "ParseId": "WebQTest-206.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313485) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313485 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "brandon roy",
          "TopicEntityName": "Brandon Roy",
          "TopicEntityMid": "m.0cf_p_",
          "InferentialChain": [
            "basketball.basketball_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sf_r",
              "EntityName": "Point guard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03558l",
              "EntityName": "Shooting guard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0355dz",
              "EntityName": "Small forward"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-210",
      "RawQuestion": "where is tyrese gibson from?",
      "ProcessedQuestion": "where is tyrese gibson from",
      "Parses": [
        {
          "ParseId": "WebQTest-210.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311232) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311232 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tyrese gibson",
          "TopicEntityName": "Tyrese Gibson",
          "TopicEntityMid": "m.01l1b90",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027sp2",
              "EntityName": "Watts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-215",
      "RawQuestion": "where was elvis costello born?",
      "ProcessedQuestion": "where was elvis costello born",
      "Parses": [
        {
          "ParseId": "WebQTest-215.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q206939) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q206939 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "elvis costello",
          "TopicEntityName": "Elvis Costello",
          "TopicEntityMid": "m.02vr7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbrp",
              "EntityName": "Paddington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-221",
      "RawQuestion": "who does jeremy lin play for?",
      "ProcessedQuestion": "who does jeremy lin play for",
      "Parses": [
        {
          "ParseId": "WebQTest-221.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q309590) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q309590 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jeremy lin",
          "TopicEntityName": "Jeremy Lin",
          "TopicEntityMid": "m.09k72lh",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-226",
      "RawQuestion": "who is jimmy savile?",
      "ProcessedQuestion": "who is jimmy savile",
      "Parses": [
        {
          "ParseId": "WebQTest-226.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q713479) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q713479 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jimmy savile",
          "TopicEntityName": "Jimmy Savile",
          "TopicEntityMid": "m.01wg0w",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dsz",
              "EntityName": "Disc jockey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08z956",
              "EntityName": "Radio personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-235",
      "RawQuestion": "what is charlie chaplin famous for?",
      "ProcessedQuestion": "what is charlie chaplin famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-235.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q882) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q882 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "charlie chaplin",
          "TopicEntityName": "Charlie Chaplin",
          "TopicEntityMid": "m.01lc5",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05hj__k",
              "EntityName": "Film Editor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-237",
      "RawQuestion": "what did fred durst do?",
      "ProcessedQuestion": "what did fred durst do",
      "Parses": [
        {
          "ParseId": "WebQTest-237.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44707) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44707 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "fred durst",
          "TopicEntityName": "Fred Durst",
          "TopicEntityMid": "m.01q7cb_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039v1",
              "EntityName": "Guitarist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hpcdn2",
              "EntityName": "Rapper"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-243",
      "RawQuestion": "where did george w bush live as a child?",
      "ProcessedQuestion": "where did george w bush live as a child",
      "Parses": [
        {
          "ParseId": "WebQTest-243.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george w bush",
          "TopicEntityName": "George W. Bush",
          "TopicEntityMid": "m.09b6zr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2nf",
              "EntityName": "New Haven"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-249",
      "RawQuestion": "what was the cause of death for bruce lee?",
      "ProcessedQuestion": "what was the cause of death for bruce lee",
      "Parses": [
        {
          "ParseId": "WebQTest-249.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16397) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16397 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "bruce lee",
          "TopicEntityName": "Bruce Lee",
          "TopicEntityMid": "m.099d4",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0219bz",
              "EntityName": "Cerebral edema"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-252",
      "RawQuestion": "where was benjamin franklin educated?",
      "ProcessedQuestion": "where was benjamin franklin educated",
      "Parses": [
        {
          "ParseId": "WebQTest-252.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "benjamin franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kj7g",
              "EntityName": "Boston Latin School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-255",
      "RawQuestion": "where obama went to school?",
      "ProcessedQuestion": "where obama went to school",
      "Parses": [
        {
          "ParseId": "WebQTest-255.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-261",
      "RawQuestion": "what is cindy sherman known for?",
      "ProcessedQuestion": "what is cindy sherman known for",
      "Parses": [
        {
          "ParseId": "WebQTest-261.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229455) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229455 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "cindy sherman",
          "TopicEntityName": "Cindy Sherman",
          "TopicEntityMid": "m.074g02",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hz6vv",
              "EntityName": "Visual Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lgw7",
              "EntityName": "Photographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-267",
      "RawQuestion": "where was martin luther king jr raised?",
      "ProcessedQuestion": "where was martin luther king jr raised",
      "Parses": [
        {
          "ParseId": "WebQTest-267.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013yq",
              "EntityName": "Atlanta"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-271",
      "RawQuestion": "where did mitt romney's parents come from?",
      "ProcessedQuestion": "where did mitt romney 's parents come from",
      "Parses": [
        {
          "ParseId": "WebQTest-271.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "mitt romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dtg",
              "EntityName": "Detroit"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-286",
      "RawQuestion": "what school did karl benz go to?",
      "ProcessedQuestion": "what school did karl benz go to",
      "Parses": [
        {
          "ParseId": "WebQTest-286.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40224) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40224 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "karl benz",
          "TopicEntityName": "Karl Benz",
          "TopicEntityMid": "m.049xg",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fhr05",
              "EntityName": "Karlsruhe Institute of Technology"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-289",
      "RawQuestion": "when do world war ii end?",
      "ProcessedQuestion": "when do world war ii end",
      "Parses": [
        {
          "ParseId": "WebQTest-289.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q362) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q362 wdt:P582 ?x . } ",
          "PotentialTopicEntityMention": "world war",
          "TopicEntityName": "World War II",
          "TopicEntityMid": "m.081pw",
          "InferentialChain": [
            "time.event.end_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1945-09-02",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-291",
      "RawQuestion": "where did morgan freeman graduate?",
      "ProcessedQuestion": "where did morgan freeman graduate",
      "Parses": [
        {
          "ParseId": "WebQTest-291.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48337) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48337 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "morgan freeman",
          "TopicEntityName": "Morgan Freeman",
          "TopicEntityMid": "m.055c8",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06kknt",
              "EntityName": "Los Angeles City College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zw3n07",
              "EntityName": "Pasadena Playhouse"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-294",
      "RawQuestion": "who was carolus linnaeus?",
      "ProcessedQuestion": "who was carolus linnaeus",
      "Parses": [
        {
          "ParseId": "WebQTest-294.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1043) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1043 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "carolus linnaeus",
          "TopicEntityName": "Carl Linnaeus",
          "TopicEntityMid": "m.01lwd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p1f",
              "EntityName": "Botanist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07lqg0",
              "EntityName": "Biologist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-297",
      "RawQuestion": "what time zone is anaheim california?",
      "ProcessedQuestion": "what time zone is anaheim california",
      "Parses": [
        {
          "ParseId": "WebQTest-297.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49247) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49247 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "anaheim california",
          "TopicEntityName": "Anaheim",
          "TopicEntityMid": "m.0k9p4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-300",
      "RawQuestion": "who is sir francis bacon?",
      "ProcessedQuestion": "who is sir francis bacon",
      "Parses": [
        {
          "ParseId": "WebQTest-300.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37388) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37388 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "francis bacon",
          "TopicEntityName": "Francis Bacon",
          "TopicEntityMid": "m.030dr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.125_hzb47",
              "EntityName": "Spy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-301",
      "RawQuestion": "what were amelia earhart's achievements?",
      "ProcessedQuestion": "what were amelia earhart 's achievements",
      "Parses": [
        {
          "ParseId": "WebQTest-301.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3355) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3355 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "amelia earhart",
          "TopicEntityName": "Amelia Earhart",
          "TopicEntityMid": "m.0lngf",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hltv",
              "EntityName": "Pilot"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-304",
      "RawQuestion": "what is jamie oliver children names?",
      "ProcessedQuestion": "what is jamie oliver children names",
      "Parses": [
        {
          "ParseId": "WebQTest-304.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190051) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190051 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "jamie oliver",
          "TopicEntityName": "Jamie Oliver",
          "TopicEntityMid": "m.01myph",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b7m2p0",
              "EntityName": "Petal Blossom Rainbow Oliver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b7m2p7",
              "EntityName": "Daisy Boo Pamela Oliver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b7m2pg",
              "EntityName": "Poppy Honey Rosie Oliver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gyd_td",
              "EntityName": "Buddy Bear Maurice Oliver"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-305",
      "RawQuestion": "where does bradley walsh live?",
      "ProcessedQuestion": "where does bradley walsh live",
      "Parses": [
        {
          "ParseId": "WebQTest-305.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4955063) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4955063 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "bradley walsh",
          "TopicEntityName": "Bradley Walsh",
          "TopicEntityMid": "m.05h48b",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h7h6",
              "EntityName": "Toronto"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-313",
      "RawQuestion": "who does albert pujols play for 2012?",
      "ProcessedQuestion": "who does albert pujols play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTest-313.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q148726) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q148726 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "albert pujols",
          "TopicEntityName": "Albert Pujols",
          "TopicEntityMid": "m.035gcb",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04wmvz",
              "EntityName": "Los Angeles Angels of Anaheim"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f3wm2",
              "EntityName": "Scottsdale Scorpions"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-315",
      "RawQuestion": "where was country singer george jones born?",
      "ProcessedQuestion": "where was country singer george jones born",
      "Parses": [
        {
          "ParseId": "WebQTest-315.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q508202) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q508202 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george jones",
          "TopicEntityName": "George Jones",
          "TopicEntityMid": "m.01hb9p",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f9hl3",
              "EntityName": "Saratoga"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-316",
      "RawQuestion": "what did shakespeare become famous for?",
      "ProcessedQuestion": "what did shakespeare become famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-316.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025352",
              "EntityName": "Lyricist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hv44_",
              "EntityName": "Playwright"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-326",
      "RawQuestion": "what did gerald r ford die from?",
      "ProcessedQuestion": "what did gerald r ford die from",
      "Parses": [
        {
          "ParseId": "WebQTest-326.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9582 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "gerald r ford",
          "TopicEntityName": "Gerald Ford",
          "TopicEntityMid": "m.0c_md_",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k6hp",
              "EntityName": "Cardiovascular disease"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-337",
      "RawQuestion": "who is mary mcleod bethune for kids?",
      "ProcessedQuestion": "who is mary mcleod bethune for kids",
      "Parses": [
        {
          "ParseId": "WebQTest-337.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q291068) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q291068 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "mary mcleod bethune",
          "TopicEntityName": "Mary McLeod Bethune",
          "TopicEntityMid": "m.025rv7p",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.121bkpjb",
              "EntityName": "Educator"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-339",
      "RawQuestion": "what nationality is mother teresa?",
      "ProcessedQuestion": "what nationality is mother teresa",
      "Parses": [
        {
          "ParseId": "WebQTest-339.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30547) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30547 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "mother teresa",
          "TopicEntityName": "Mother Teresa",
          "TopicEntityMid": "m.01yv6p",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rk0",
              "EntityName": "India"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kyr",
              "EntityName": "Ottoman Empire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-340",
      "RawQuestion": "who is richard pryor son?",
      "ProcessedQuestion": "who is richard pryor son",
      "Parses": [
        {
          "ParseId": "WebQTest-340.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294912) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294912 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "richard pryor",
          "TopicEntityName": "Richard Pryor",
          "TopicEntityMid": "m.01hmk9",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2sc1",
              "EntityName": "Franklin Pryor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2scn",
              "EntityName": "Richard Pryor Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2scv",
              "EntityName": "Steven Pryor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-344",
      "RawQuestion": "what county is west st paul in?",
      "ProcessedQuestion": "what county is west st paul in",
      "Parses": [
        {
          "ParseId": "WebQTest-344.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2036838) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2036838 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "west st paul",
          "TopicEntityName": "West St. Paul",
          "TopicEntityMid": "m.0vz77",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nhr5",
              "EntityName": "Dakota County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-344.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0vz77)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0vz77 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "west st paul",
          "TopicEntityName": "West St. Paul",
          "TopicEntityMid": "m.0vz77",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nhr5",
              "EntityName": "Dakota County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-352",
      "RawQuestion": "what did albert speer design?",
      "ProcessedQuestion": "what did albert speer design",
      "Parses": [
        {
          "ParseId": "WebQTest-352.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q60045) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q60045 wdt:P800 ?x . } ",
          "PotentialTopicEntityMention": "albert speer",
          "TopicEntityName": "Albert Speer",
          "TopicEntityMid": "m.0l4t",
          "InferentialChain": [
            "architecture.architect.structures_designed"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03js7d",
              "EntityName": "Olympiastadion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04j99j",
              "EntityName": "Reich Chancellery"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06cwrf",
              "EntityName": "Deutsches Stadion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ft3z",
              "EntityName": "Volkshalle"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-353",
      "RawQuestion": "who does jordan palmer play for?",
      "ProcessedQuestion": "who does jordan palmer play for",
      "Parses": [
        {
          "ParseId": "WebQTest-353.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6276871) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6276871 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jordan palmer",
          "TopicEntityName": "Jordan Palmer",
          "TopicEntityMid": "m.0d9wsx",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTest-360",
      "RawQuestion": "where did emperor hirohito live?",
      "ProcessedQuestion": "where did emperor hirohito live",
      "Parses": [
        {
          "ParseId": "WebQTest-360.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? birthplace doesn't seem appropriate for an emperor"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34479) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34479 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "emperor hirohito",
          "TopicEntityName": "Hirohito",
          "TopicEntityMid": "m.02sm8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03xm9l",
              "EntityName": "Aoyama, Minato, Tokyo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-367",
      "RawQuestion": "what makes elvis presley famous?",
      "ProcessedQuestion": "what makes elvis presley famous",
      "Parses": [
        {
          "ParseId": "WebQTest-367.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q303 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "elvis presley",
          "TopicEntityName": "Elvis Presley",
          "TopicEntityMid": "m.02jq1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.099md",
              "EntityName": "Soldier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-377",
      "RawQuestion": "what school did michael jordan attend?",
      "ProcessedQuestion": "what school did michael jordan attend",
      "Parses": [
        {
          "ParseId": "WebQTest-377.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41421 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "michael jordan",
          "TopicEntityName": "Michael Jordan",
          "TopicEntityMid": "m.054c1",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qymj",
              "EntityName": "Emsley A. Laney High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bx8pn",
              "EntityName": "University of North Carolina at Chapel Hill"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-379",
      "RawQuestion": "what year does hitler die?",
      "ProcessedQuestion": "what year does hitler die",
      "Parses": [
        {
          "ParseId": "WebQTest-379.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P570 ?x . } ",
          "PotentialTopicEntityMention": "hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.date_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1945-04-30",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-384",
      "RawQuestion": "what was robert burns famous for?",
      "ProcessedQuestion": "what was robert burns famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-384.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81960) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81960 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "robert burns",
          "TopicEntityName": "Robert Burns",
          "TopicEntityMid": "m.09482",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0knj1",
              "EntityName": "Bard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-385",
      "RawQuestion": "when did william mckinley died?",
      "ProcessedQuestion": "when did william mckinley died",
      "Parses": [
        {
          "ParseId": "WebQTest-385.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35041) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35041 wdt:P570 ?x . } ",
          "PotentialTopicEntityMention": "william mckinley",
          "TopicEntityName": "William McKinley",
          "TopicEntityMid": "m.083p7",
          "InferentialChain": [
            "people.deceased_person.date_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1901-09-14",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-389",
      "RawQuestion": "what type of music did claude debussy play?",
      "ProcessedQuestion": "what type of music did claude debussy play",
      "Parses": [
        {
          "ParseId": "WebQTest-389.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4700) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4700 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "claude debussy",
          "TopicEntityName": "Claude Debussy",
          "TopicEntityMid": "m.01vvy",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014m9r",
              "EntityName": "Incidental music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wqlc",
              "EntityName": "20th-century classical music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021dvj",
              "EntityName": "Ballet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q6jz",
              "EntityName": "Art song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6n1",
              "EntityName": "Ballet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h4v9d",
              "EntityName": "French opera"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-392",
      "RawQuestion": "what team is hank baskett on 2010?",
      "ProcessedQuestion": "what team is hank baskett on 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-392.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1433425) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1433425 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "hank baskett",
          "TopicEntityName": "Hank Baskett",
          "TopicEntityMid": "m.0d81yf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wnh",
              "EntityName": "Indianapolis Colts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051q5",
              "EntityName": "Minnesota Vikings"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-405",
      "RawQuestion": "who fought the battle of gettysburg?",
      "ProcessedQuestion": "who fought the battle of gettysburg",
      "Parses": [
        {
          "ParseId": "WebQTest-405.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33132) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33132 wdt:P710 ?x . } ",
          "PotentialTopicEntityMention": "battle of gettysburg",
          "TopicEntityName": "Battle of Gettysburg",
          "TopicEntityMid": "m.01jnm",
          "InferentialChain": [
            "base.culturalevent.event.entity_involved"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012pml",
              "EntityName": "George Meade"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fp48",
              "EntityName": "Union"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06f5j",
              "EntityName": "Robert E. Lee"
            }
          ]
        },
        {
          "ParseId": "WebQTest-405.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jnm ns:military.military_conflict.combatants ?y .\n?y ns:military.military_combatant_group.combatants ?x .\n}\n",
          "PotentialTopicEntityMention": "battle of gettysburg",
          "TopicEntityName": "Battle of Gettysburg",
          "TopicEntityMid": "m.01jnm",
          "InferentialChain": [
            "military.military_conflict.combatants",
            "military.military_combatant_group.combatants"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fp48",
              "EntityName": "Union"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTest-405.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jnm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jnm ns:military.military_conflict.commanders ?y .\n?y ns:military.military_command.military_combatant ?x .\n}\n",
          "PotentialTopicEntityMention": "battle of gettysburg",
          "TopicEntityName": "Battle of Gettysburg",
          "TopicEntityMid": "m.01jnm",
          "InferentialChain": [
            "military.military_conflict.commanders",
            "military.military_command.military_combatant"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-408",
      "RawQuestion": "who was the first president of the afl?",
      "ProcessedQuestion": "who was the first president of the afl",
      "Parses": [
        {
          "ParseId": "WebQTest-408.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464508) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464508 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "afl",
          "TopicEntityName": "American Football League",
          "TopicEntityMid": "m.0ysy",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wtr5",
              "EntityName": "Lamar Hunt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035yc3",
              "EntityName": "Bud Adams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-409",
      "RawQuestion": "where did giuliana rancic grow up?",
      "ProcessedQuestion": "where did giuliana rancic grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-409.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1281335) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1281335 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "giuliana rancic",
          "TopicEntityName": "Giuliana Rancic",
          "TopicEntityMid": "m.0b0tw3",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fhsz",
              "EntityName": "Naples"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-414",
      "RawQuestion": "who does brian dawkins play for 2011?",
      "ProcessedQuestion": "who does brian dawkins play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-414.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q641601) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q641601 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "brian dawkins",
          "TopicEntityName": "Brian Dawkins",
          "TopicEntityMid": "m.04m4p5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0289q",
              "EntityName": "Denver Broncos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-419",
      "RawQuestion": "what country did magellan represent?",
      "ProcessedQuestion": "what country did magellan represent",
      "Parses": [
        {
          "ParseId": "WebQTest-419.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1496 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "magellan",
          "TopicEntityName": "Ferdinand Magellan",
          "TopicEntityMid": "m.033ky",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0285m87",
              "EntityName": "Kingdom of Portugal"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-427",
      "RawQuestion": "what is the zip code for midland tx?",
      "ProcessedQuestion": "what is the zip code for midland tx",
      "Parses": [
        {
          "ParseId": "WebQTest-427.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128321) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128321 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "midland tx",
          "TopicEntityName": "Midland",
          "TopicEntityMid": "m.013n2h",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020zz8q",
              "EntityName": "79702"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0215s_p",
              "EntityName": "79705"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0215t0_",
              "EntityName": "79701"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0215t3_",
              "EntityName": "79707"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0215t88",
              "EntityName": "79703"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0215t9t",
              "EntityName": "79706"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq9l_",
              "EntityName": "79711"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq9ls",
              "EntityName": "79712"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq9m6",
              "EntityName": "79710"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq9mf",
              "EntityName": "79708"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq9mn",
              "EntityName": "79704"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-436",
      "RawQuestion": "what is the nigeria time?",
      "ProcessedQuestion": "what is the nigeria time",
      "Parses": [
        {
          "ParseId": "WebQTest-436.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1033) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1033 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "nigeria",
          "TopicEntityName": "Nigeria",
          "TopicEntityMid": "m.05cgv",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gsrsm",
              "EntityName": "West Africa Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-437",
      "RawQuestion": "where did they find jenni rivera's body?",
      "ProcessedQuestion": "where did they find jenni rivera 's body",
      "Parses": [
        {
          "ParseId": "WebQTest-437.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? place where jenni rivera 's body found"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q714185) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q714185 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jenni rivera",
          "TopicEntityName": "Jenni Rivera",
          "TopicEntityMid": "m.01v5vfj",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nycl8h",
              "EntityName": "Iturbide"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-438",
      "RawQuestion": "what university did romney graduated from?",
      "ProcessedQuestion": "what university did romney graduated from",
      "Parses": [
        {
          "ParseId": "WebQTest-438.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? undergraduate or higher degree?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1765120 . } ",
          "PotentialTopicEntityMention": "romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.014mlp",
              "EntityName": "Bachelor of Arts",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2tk",
              "EntityName": "Brigham Young University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-439",
      "RawQuestion": "where is the time zone line in south dakota?",
      "ProcessedQuestion": "where is the time zone line in south dakota",
      "Parses": [
        {
          "ParseId": "WebQTest-439.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1211) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1211 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "south dakota",
          "TopicEntityName": "South Dakota",
          "TopicEntityMid": "m.06mz5",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-441",
      "RawQuestion": "what killed john bonham?",
      "ProcessedQuestion": "what killed john bonham",
      "Parses": [
        {
          "ParseId": "WebQTest-441.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q485490) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q485490 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "john bonham",
          "TopicEntityName": "John Bonham",
          "TopicEntityMid": "m.015pvx",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023l3k_",
              "EntityName": "Inhalation of vomit"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-443",
      "RawQuestion": "what county is texarkana arkansas in?",
      "ProcessedQuestion": "what county is texarkana arkansas in",
      "Parses": [
        {
          "ParseId": "WebQTest-443.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q79438) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q79438 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "texarkana arkansas",
          "TopicEntityName": "Texarkana, Arkansas",
          "TopicEntityMid": "m.0d9z_y",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p2xk",
              "EntityName": "Miller County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-443.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0d9z_y)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0d9z_y ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "texarkana arkansas",
          "TopicEntityName": "Texarkana, Arkansas",
          "TopicEntityMid": "m.0d9z_y",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p2xk",
              "EntityName": "Miller County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-446",
      "RawQuestion": "what music period did beethoven live in?",
      "ProcessedQuestion": "what music period did beethoven live in",
      "Parses": [
        {
          "ParseId": "WebQTest-446.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q255) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q255 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "beethoven",
          "TopicEntityName": "Ludwig van Beethoven",
          "TopicEntityMid": "m.04k15",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-454",
      "RawQuestion": "where did hank marvin come from?",
      "ProcessedQuestion": "where did hank marvin come from",
      "Parses": [
        {
          "ParseId": "WebQTest-454.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q365478) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q365478 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "hank marvin",
          "TopicEntityName": "Hank Marvin",
          "TopicEntityMid": "m.01x2fx0",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j7ng",
              "EntityName": "Newcastle upon Tyne"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-459",
      "RawQuestion": "where did jovan belcher kill himself?",
      "ProcessedQuestion": "where did jovan belcher kill himself",
      "Parses": [
        {
          "ParseId": "WebQTest-459.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q275279) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q275279 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jovan belcher",
          "TopicEntityName": "Jovan Belcher",
          "TopicEntityMid": "m.055d_1d",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f_d",
              "EntityName": "Kansas City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-461",
      "RawQuestion": "where did clay matthews go to school?",
      "ProcessedQuestion": "where did clay matthews go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-461.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q390698) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q390698 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "clay matthews",
          "TopicEntityName": "Clay Matthews III",
          "TopicEntityMid": "m.04zy7pw",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065y4w7",
              "EntityName": "University of Southern California"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06w97y",
              "EntityName": "Agoura High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-462",
      "RawQuestion": "what time is it in texas houston right now?",
      "ProcessedQuestion": "what time is it in texas houston right now",
      "Parses": [
        {
          "ParseId": "WebQTest-462.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16555) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16555 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "houston",
          "TopicEntityName": "Houston",
          "TopicEntityMid": "m.03l2n",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-468",
      "RawQuestion": "where did venus williams come from?",
      "ProcessedQuestion": "where did venus williams come from",
      "Parses": [
        {
          "ParseId": "WebQTest-468.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11578) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11578 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "venus williams",
          "TopicEntityName": "Venus Williams",
          "TopicEntityMid": "m.016cff",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r0ls",
              "EntityName": "Lynwood"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-472",
      "RawQuestion": "what team did ronaldo play for in 2003?",
      "ProcessedQuestion": "what team did ronaldo play for in 2003",
      "Parses": [
        {
          "ParseId": "WebQTest-472.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q529207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q529207 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2003-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2003-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldo",
          "TopicEntityName": "Ronaldo",
          "TopicEntityMid": "m.0hhqw",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2003-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2003-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2003-01-01",
            "End": "2003-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2003"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-473",
      "RawQuestion": "where does robin williams live 2011?",
      "ProcessedQuestion": "where does robin williams live 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-473.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "need from/to"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83338) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83338 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "robin williams",
          "TopicEntityName": "Robin Williams",
          "TopicEntityMid": "m.0dzf_",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6lp",
              "EntityName": "San Francisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vg8x",
              "EntityName": "Bloomfield Hills"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-474",
      "RawQuestion": "who played jacob black in twilight?",
      "ProcessedQuestion": "who played jacob black in twilight",
      "Parses": [
        {
          "ParseId": "WebQTest-474.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q160071) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q160071 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q716835 . } ",
          "PotentialTopicEntityMention": "twilight",
          "TopicEntityName": "Twilight",
          "TopicEntityMid": "m.03nm_fh",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02qd_td",
              "EntityName": "Jacob Black",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ldhs",
              "EntityName": "Taylor Lautner"
            }
          ]
        },
        {
          "ParseId": "WebQTest-474.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02qd_td)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02qd_td ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n}\n",
          "PotentialTopicEntityMention": "jacob black",
          "TopicEntityName": "Jacob Black",
          "TopicEntityMid": "m.02qd_td",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ldhs",
              "EntityName": "Taylor Lautner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-480",
      "RawQuestion": "where does name pennsylvania come from?",
      "ProcessedQuestion": "where does name pennsylvania come from",
      "Parses": [
        {
          "ParseId": "WebQTest-480.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1400) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1400 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "pennsylvania",
          "TopicEntityName": "Pennsylvania",
          "TopicEntityMid": "m.05tbn",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03br25",
              "EntityName": "William Penn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-489",
      "RawQuestion": "who plays stephanie plum in one for the money?",
      "ProcessedQuestion": "who plays stephanie plum in one for the money",
      "Parses": [
        {
          "ParseId": "WebQTest-489.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q602501) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q602501 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q7608372 . } ",
          "PotentialTopicEntityMention": "one for the money",
          "TopicEntityName": "One for the Money",
          "TopicEntityMid": "m.0g5sxb4",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.098by5",
              "EntityName": "Stephanie Plum",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025b5y",
              "EntityName": "Katherine Heigl"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-492",
      "RawQuestion": "where was st. lucy born?",
      "ProcessedQuestion": "where was st. lucy born",
      "Parses": [
        {
          "ParseId": "WebQTest-492.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q183240) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q183240 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "st . lucy",
          "TopicEntityName": "Saint Lucy",
          "TopicEntityMid": "m.01r0zd",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.071bn",
              "EntityName": "Syracuse"
            }
          ]
        },
        {
          "ParseId": "WebQTest-492.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01r0zd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01r0zd ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "st . lucy",
          "TopicEntityName": "Saint Lucy",
          "TopicEntityMid": "m.01r0zd",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.071bn",
              "EntityName": "Syracuse"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-500",
      "RawQuestion": "what is the zip code for trenton?",
      "ProcessedQuestion": "what is the zip code for trenton",
      "Parses": [
        {
          "ParseId": "WebQTest-500.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25330) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25330 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "trenton",
          "TopicEntityName": "Trenton",
          "TopicEntityMid": "m.0fvxz",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206ng_",
              "EntityName": "08628"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206njw",
              "EntityName": "08618"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206nlg",
              "EntityName": "08638"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qfx",
              "EntityName": "08610"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qgw",
              "EntityName": "08619"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qlh",
              "EntityName": "08620"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qq6",
              "EntityName": "08691"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qr2",
              "EntityName": "08611"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075l8",
              "EntityName": "08609"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075s5",
              "EntityName": "08608"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075z3",
              "EntityName": "08629"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqlk",
              "EntityName": "08625"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqmy",
              "EntityName": "08641"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqnj",
              "EntityName": "08690"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtm_",
              "EntityName": "08695"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtn6",
              "EntityName": "08666"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnf",
              "EntityName": "08650"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnn",
              "EntityName": "08647"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnw",
              "EntityName": "08646"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtp2",
              "EntityName": "08645"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtp9",
              "EntityName": "08607"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpj",
              "EntityName": "08606"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpr",
              "EntityName": "08605"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpz",
              "EntityName": "08604"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtq5",
              "EntityName": "08603"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtqd",
              "EntityName": "08602"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtqm",
              "EntityName": "08601"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-506",
      "RawQuestion": "what the time zone in england?",
      "ProcessedQuestion": "what the time zone in england",
      "Parses": [
        {
          "ParseId": "WebQTest-506.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q21) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q21 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "england",
          "TopicEntityName": "England",
          "TopicEntityMid": "m.02jx1",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-512",
      "RawQuestion": "who were mary shelley?",
      "ProcessedQuestion": "who were mary shelley",
      "Parses": [
        {
          "ParseId": "WebQTest-512.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q47152) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q47152 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "mary shelley",
          "TopicEntityName": "Mary Shelley",
          "TopicEntityMid": "m.04_by",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6676",
              "EntityName": "Editor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nsx",
              "EntityName": "Biographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hv44_",
              "EntityName": "Playwright"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvk_g",
              "EntityName": "Travel writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f1hr",
              "EntityName": "Essayist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-515",
      "RawQuestion": "where was teddy roosevelt's house?",
      "ProcessedQuestion": "where was teddy roosevelt 's house",
      "Parses": [
        {
          "ParseId": "WebQTest-515.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33866) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33866 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "teddy roosevelt",
          "TopicEntityName": "Theodore Roosevelt",
          "TopicEntityMid": "m.07hyk",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rh6k",
              "EntityName": "Washington, D.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-519",
      "RawQuestion": "what timezone is nashville tn?",
      "ProcessedQuestion": "what timezone is nashville tn",
      "Parses": [
        {
          "ParseId": "WebQTest-519.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23197) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23197 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "nashville tn",
          "TopicEntityName": "Nashville",
          "TopicEntityMid": "m.05jbn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-522",
      "RawQuestion": "where did adolf hitler die?",
      "ProcessedQuestion": "where did adolf hitler die",
      "Parses": [
        {
          "ParseId": "WebQTest-522.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "adolf hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0156q",
              "EntityName": "Berlin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-524",
      "RawQuestion": "where was the first gulf war fought?",
      "ProcessedQuestion": "where was the first gulf war fought",
      "Parses": [
        {
          "ParseId": "WebQTest-524.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37643) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37643 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "gulf war",
          "TopicEntityName": "Gulf War",
          "TopicEntityMid": "m.018w0j",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z215",
              "EntityName": "Saudi Arabia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03spz",
              "EntityName": "Israel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047yc",
              "EntityName": "Kuwait"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0661z",
              "EntityName": "Persian Gulf"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cvmv",
              "EntityName": "Arabian Peninsula"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d05q4",
              "EntityName": "Iraq"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-529",
      "RawQuestion": "where did paula deen go to school?",
      "ProcessedQuestion": "where did paula deen go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-529.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3071037) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3071037 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "paula deen",
          "TopicEntityName": "Paula Deen",
          "TopicEntityMid": "m.05dpch",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0610np",
              "EntityName": "Albany High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-530",
      "RawQuestion": "where does robert irvine come from?",
      "ProcessedQuestion": "where does robert irvine come from",
      "Parses": [
        {
          "ParseId": "WebQTest-530.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13603754) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13603754 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "robert irvine",
          "TopicEntityName": "Robert Irvine",
          "TopicEntityMid": "m.0272y2y",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jgvy",
              "EntityName": "Salisbury"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-531",
      "RawQuestion": "what style of music does michael jackson perform?",
      "ProcessedQuestion": "what style of music does michael jackson perform",
      "Parses": [
        {
          "ParseId": "WebQTest-531.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021_z5",
              "EntityName": "New jack swing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sc50",
              "EntityName": "Contemporary R&B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026z9",
              "EntityName": "Disco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bqnt",
              "EntityName": "Motown Sound"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lkt",
              "EntityName": "Electronic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lnbg",
              "EntityName": "Dance-pop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vjzr",
              "EntityName": "Adult contemporary music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x8m",
              "EntityName": "Funk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03c34yl",
              "EntityName": "Post-disco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06j6l",
              "EntityName": "Rhythm and blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggx5q",
              "EntityName": "Dance music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gywn",
              "EntityName": "Soul music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-533",
      "RawQuestion": "what does julian lennon do?",
      "ProcessedQuestion": "what does julian lennon do",
      "Parses": [
        {
          "ParseId": "WebQTest-533.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q357974) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q357974 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "julian lennon",
          "TopicEntityName": "Julian Lennon",
          "TopicEntityMid": "m.01k4jy3",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016z4k",
              "EntityName": "Singer-songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039v1",
              "EntityName": "Guitarist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz3r",
              "EntityName": "Record producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lgw7",
              "EntityName": "Photographer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-542",
      "RawQuestion": "where did alex chilton die?",
      "ProcessedQuestion": "where did alex chilton die",
      "Parses": [
        {
          "ParseId": "WebQTest-542.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q206693) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q206693 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "alex chilton",
          "TopicEntityName": "Alex Chilton",
          "TopicEntityMid": "m.024bwn",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2tj",
              "EntityName": "New Orleans"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-559",
      "RawQuestion": "what instrument did robin gibb play?",
      "ProcessedQuestion": "what instrument did robin gibb play",
      "Parses": [
        {
          "ParseId": "WebQTest-559.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188482) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188482 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "robin gibb",
          "TopicEntityName": "Robin Gibb",
          "TopicEntityMid": "m.0137hn",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07y_7",
              "EntityName": "Violin"
            }
          ]
        },
        {
          "ParseId": "WebQTest-559.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0137hn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0137hn ns:music.group_member.membership ?y .\n?y ns:music.group_membership.role ?x .\n?x ns:common.topic.notable_types ns:m.0kpv25 .\n}\n",
          "PotentialTopicEntityMention": "robin gibb",
          "TopicEntityName": "Robin Gibb",
          "TopicEntityMid": "m.0137hn",
          "InferentialChain": [
            "music.group_member.membership",
            "music.group_membership.role"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpv25",
              "EntityName": "Musical instrument",
              "SourceNodeIndex": 1,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0290ngj",
              "EntityName": "Vocals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qjg",
              "EntityName": "Harmonica"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07y_7",
              "EntityName": "Violin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cfdd",
              "EntityName": "Drum machine"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-562",
      "RawQuestion": "where are the texas rangers playing?",
      "ProcessedQuestion": "where are the texas rangers playing",
      "Parses": [
        {
          "ParseId": "WebQTest-562.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q329816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q329816 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "texas rangers",
          "TopicEntityName": "Texas Rangers",
          "TopicEntityMid": "m.07l8x",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wmlm",
              "EntityName": "Rangers Ballpark in Arlington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-567",
      "RawQuestion": "what is the zip code for nogales az?",
      "ProcessedQuestion": "what is the zip code for nogales az",
      "Parses": [
        {
          "ParseId": "WebQTest-567.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q79783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q79783 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "nogales",
          "TopicEntityName": "Nogales",
          "TopicEntityMid": "m.0qqw9",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z5r29",
              "EntityName": "85621"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq6b_",
              "EntityName": "85662"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq6d9",
              "EntityName": "85628"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-568",
      "RawQuestion": "when did michael vick start playing for the eagles?",
      "ProcessedQuestion": "when did michael vick start playing for the eagles",
      "Parses": [
        {
          "ParseId": "WebQTest-568.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505431) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505431 wdt:P54 ?y . ?y wdt:P580 ?x . ?y wdt:P54 wd:Q219714 . } ",
          "PotentialTopicEntityMention": "michael vick",
          "TopicEntityName": "Michael Vick",
          "TopicEntityMid": "m.027f42",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05tg3",
              "EntityName": "Philadelphia Eagles",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.team",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2009",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-570",
      "RawQuestion": "what is william taft famous for?",
      "ProcessedQuestion": "what is william taft famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-570.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35648) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35648 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "william taft",
          "TopicEntityName": "William Howard Taft",
          "TopicEntityMid": "m.083pr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5lg",
              "EntityName": "Judge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dl08",
              "EntityName": "Jurist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-572",
      "RawQuestion": "where did robin cook die?",
      "ProcessedQuestion": "where did robin cook die",
      "Parses": [
        {
          "ParseId": "WebQTest-572.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311214) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311214 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "robin cook",
          "TopicEntityName": "Robin Cook",
          "TopicEntityMid": "m.019jy5",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012d9h",
              "EntityName": "Inverness"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-573",
      "RawQuestion": "where did melba beals live?",
      "ProcessedQuestion": "where did melba beals live",
      "Parses": [
        {
          "ParseId": "WebQTest-573.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6811671) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6811671 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "melba beals",
          "TopicEntityName": "Melba Pattillo Beals",
          "TopicEntityMid": "m.08s1bb",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vbk",
              "EntityName": "Arkansas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-581",
      "RawQuestion": "where was anne boleyn executed?",
      "ProcessedQuestion": "where was anne boleyn executed",
      "Parses": [
        {
          "ParseId": "WebQTest-581.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q80823) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q80823 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "anne boleyn",
          "TopicEntityName": "Anne Boleyn",
          "TopicEntityMid": "m.09sxn",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqn",
              "EntityName": "Tower of London"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-582",
      "RawQuestion": "what did galileo do to become famous?",
      "ProcessedQuestion": "what did galileo do to become famous",
      "Parses": [
        {
          "ParseId": "WebQTest-582.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q307) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q307 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "galileo",
          "TopicEntityName": "Galileo Galilei",
          "TopicEntityMid": "m.034ks",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rxky",
              "EntityName": "Astrologer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-583",
      "RawQuestion": "what school did martin luther king jr received his doctorate degree from?",
      "ProcessedQuestion": "what school did martin luther king jr received his doctorate degree from",
      "Parses": [
        {
          "ParseId": "WebQTest-583.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q752297 . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04zx3q1",
              "EntityName": "PhD",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gl5_",
              "EntityName": "Boston University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-584",
      "RawQuestion": "where buddha come from?",
      "ProcessedQuestion": "where buddha come from",
      "Parses": [
        {
          "ParseId": "WebQTest-584.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9441) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9441 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "buddha",
          "TopicEntityName": "Gautama Buddha",
          "TopicEntityMid": "m.015k7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06_86x",
              "EntityName": "Kapilavastu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-592",
      "RawQuestion": "when did shays rebellion start?",
      "ProcessedQuestion": "when did shays rebellion start",
      "Parses": [
        {
          "ParseId": "WebQTest-592.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q392601) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q392601 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "shays rebellion",
          "TopicEntityName": "Shays' Rebellion",
          "TopicEntityMid": "m.0x284",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1786",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-597",
      "RawQuestion": "what style of music does john mayer play?",
      "ProcessedQuestion": "what style of music does john mayer play",
      "Parses": [
        {
          "ParseId": "WebQTest-597.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215215) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215215 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "john mayer",
          "TopicEntityName": "John Mayer",
          "TopicEntityMid": "m.01s21dg",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01243b",
              "EntityName": "Indie rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016clz",
              "EntityName": "Alternative rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016jny",
              "EntityName": "Folk rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lyv",
              "EntityName": "Country"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027pgn0",
              "EntityName": "Soul rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_kn",
              "EntityName": "Soft rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qdgx",
              "EntityName": "Blue-eyed soul"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w4v",
              "EntityName": "Folk music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09qxq7",
              "EntityName": "Acoustic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gywn",
              "EntityName": "Soul music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mhfr",
              "EntityName": "Country rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-604",
      "RawQuestion": "what kind of music did jimi hendrix play?",
      "ProcessedQuestion": "what kind of music did jimi hendrix play",
      "Parses": [
        {
          "ParseId": "WebQTest-604.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5928) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5928 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "jimi hendrix",
          "TopicEntityName": "Jimi Hendrix",
          "TopicEntityMid": "m.01vsy3q",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l96k",
              "EntityName": "Acid rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03lty",
              "EntityName": "Heavy metal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05w3f",
              "EntityName": "Psychedelic rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06j6l",
              "EntityName": "Rhythm and blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08jyyk",
              "EntityName": "Experimental rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09nwwf",
              "EntityName": "Funk rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cgxt",
              "EntityName": "Psychedelia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dl5d",
              "EntityName": "Progressive rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xhtw",
              "EntityName": "Hard rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-605",
      "RawQuestion": "what degrees did obama get in college?",
      "ProcessedQuestion": "what degrees did obama get in college",
      "Parses": [
        {
          "ParseId": "WebQTest-605.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013zdg",
              "EntityName": "Juris Doctor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014mlp",
              "EntityName": "Bachelor of Arts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-611",
      "RawQuestion": "where was st peter killed?",
      "ProcessedQuestion": "where was st peter killed",
      "Parses": [
        {
          "ParseId": "WebQTest-611.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5685093) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5685093 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "st peter",
          "TopicEntityName": "Saint Peter",
          "TopicEntityMid": "m.071wp",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06c62",
              "EntityName": "Rome"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-614",
      "RawQuestion": "when did the battle of alamo start?",
      "ProcessedQuestion": "when did the battle of alamo start",
      "Parses": [
        {
          "ParseId": "WebQTest-614.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q235344) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q235344 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "battle of alamo",
          "TopicEntityName": "Battle of the Alamo",
          "TopicEntityMid": "m.02hztm",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1836-02-23",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-615",
      "RawQuestion": "what were the names of henry viii's three children?",
      "ProcessedQuestion": "what were the names of henry viii 's three children",
      "Parses": [
        {
          "ParseId": "WebQTest-615.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38370 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "henry viii",
          "TopicEntityName": "Henry VIII of England",
          "TopicEntityMid": "m.03p77",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rg_",
              "EntityName": "Elizabeth I of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02s82",
              "EntityName": "Edward VI of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sx6f",
              "EntityName": "Henry FitzRoy, 1st Duke of Richmond and Somerset"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056j9",
              "EntityName": "Mary I of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hn9rc9",
              "EntityName": "Henry, Duke of Cornwall"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-617",
      "RawQuestion": "where did tim tebow grow up?",
      "ProcessedQuestion": "where did tim tebow grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-617.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q517467) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q517467 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tim tebow",
          "TopicEntityName": "Tim Tebow",
          "TopicEntityMid": "m.0g7km1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dvzy",
              "EntityName": "Makati"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-620",
      "RawQuestion": "where did kennedy's inaugural address take place?",
      "ProcessedQuestion": "where did kennedy 's inaugural address take place",
      "Parses": [
        {
          "ParseId": "WebQTest-620.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Entity Linking. Original comment: F need longer chain"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { \twd:Q6013770 wdt:P276 ?x . }",
          "PotentialTopicEntityMention": "kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07vth",
              "EntityName": "United States Capitol"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rh6k",
              "EntityName": "Washington, D.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-627",
      "RawQuestion": "what nationality is taylor lautner jacob black?",
      "ProcessedQuestion": "what nationality is taylor lautner jacob black",
      "Parses": [
        {
          "ParseId": "WebQTest-627.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23359) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23359 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "taylor lautner",
          "TopicEntityName": "Taylor Lautner",
          "TopicEntityMid": "m.07ldhs",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-629",
      "RawQuestion": "what company does nike own?",
      "ProcessedQuestion": "what company does nike own",
      "Parses": [
        {
          "ParseId": "WebQTest-629.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q483915) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q483915 wdt:P355 ?y . ?y wdt:P355 ?x . } ",
          "PotentialTopicEntityMention": "nike",
          "TopicEntityName": "Nike, Inc.",
          "TopicEntityMid": "m.0lwkh",
          "InferentialChain": [
            "organization.organization.child",
            "organization.organization_relationship.child"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_yyy0j",
              "EntityName": "Nike Brand Kitchen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0140d2",
              "EntityName": "Converse"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05j1g6",
              "EntityName": "Umbro"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08qt1l",
              "EntityName": "Hurley International"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l_qsh",
              "EntityName": "NIKE Deutschland GmbH"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l_qsq",
              "EntityName": "NIKE Mexico Holdings LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l_qsy",
              "EntityName": "NIKE Vietnam Co"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_6y0",
              "EntityName": "Cole Haan Co Store"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_82n",
              "EntityName": "NIKE Flight"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_8xp",
              "EntityName": "Umbro Sportwear Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_933",
              "EntityName": "Yugen Kaisha Hurley Japan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_ptr",
              "EntityName": "Converse Footwear Technical Service (Zhongshan) Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m_qf6",
              "EntityName": "Hurley999 UK Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m04cp",
              "EntityName": "BRS NIKE Taiwan Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m0mrr",
              "EntityName": "Converse Trading Co B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m12g4",
              "EntityName": "Bragano Trading S.r.l."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m12pm",
              "EntityName": "Converse Canada Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m1knm",
              "EntityName": "Converse Hong Kong Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m1m2f",
              "EntityName": "PT Hurley Indonesia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m2_gr",
              "EntityName": "NIKE 360 Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m2_gz",
              "EntityName": "NIKE SALES (MALAYSIA) SDN. BHD."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m3gg9",
              "EntityName": "NIKE Chile B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m3ggj",
              "EntityName": "NIKE Tailwind"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m3gw1",
              "EntityName": "Savier Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m3ydc",
              "EntityName": "NIKE GmbH"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m3ydl",
              "EntityName": "NIKE Poland Sp.zo.o"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m4dd7",
              "EntityName": "NIKE Huarache"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m5tqw",
              "EntityName": "NIKE Finland OY"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m5vf0",
              "EntityName": "Umbro Schweiz Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m67_9",
              "EntityName": "Converse Sporting Goods (China) Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m7733",
              "EntityName": "NIKE India Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m773b",
              "EntityName": "NIKE Servicios de Mexico S. de R.L. de C.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m77sg",
              "EntityName": "Twin Dragons Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m7p_d",
              "EntityName": "NIKE Licenciamentos do Brasil Ltda"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m7p_w",
              "EntityName": "NIKE UK Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m84_6",
              "EntityName": "NIKE BH B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m84_f",
              "EntityName": "NIKE International Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m84_n",
              "EntityName": "NIKE Sports (China) Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m8lqy",
              "EntityName": "Converse Netherlands B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m8m24",
              "EntityName": "Exeter Hong Kong Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m8n9d",
              "EntityName": "PT NIKE Indonesia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m9l86",
              "EntityName": "NIKE Argentina Srl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09m9lj7",
              "EntityName": "PMG International Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mb0fr",
              "EntityName": "Cole Haan Hong Kong Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mb2c9",
              "EntityName": "Umbro Worldwide Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mbk23",
              "EntityName": "NIKE de Chile Ltda"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mc11v",
              "EntityName": "Umbro HK Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mchdq",
              "EntityName": "NIKE European Operations Netherlands B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mcj4c",
              "EntityName": "Umbro Licensing Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mcybt",
              "EntityName": "Converse Canada Corp"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdfnq",
              "EntityName": "NIKE (Suzhou) Sports Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdfny",
              "EntityName": "NIKE Hellas EPE"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdfp4",
              "EntityName": "NIKE Retail LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdxf_",
              "EntityName": "Manchester United Merchandising Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdxp6",
              "EntityName": "NIKE Cortez"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mdygz",
              "EntityName": "Umbro Asia Sourcing Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mg9yx",
              "EntityName": "NIKE Africa Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mgs5z",
              "EntityName": "Exeter Brands Group LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mgsym",
              "EntityName": "NIKE Asia Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mh80r",
              "EntityName": "NIKE Group Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mh80z",
              "EntityName": "NIKE Retail B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mj4t7",
              "EntityName": "American NIKE SL"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mj55s",
              "EntityName": "Cole Haan Japan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mj74b",
              "EntityName": "Umbro.com"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mk4jh",
              "EntityName": "NIKE (UK) Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mk4jq",
              "EntityName": "NIKE Russia LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09ml2ln",
              "EntityName": "NIKE Laser Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09ml2lw",
              "EntityName": "NIKE TN Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mm1kl",
              "EntityName": "Umbro Finance Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mmhhw",
              "EntityName": "NIKE Denmark ApS"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mmhj2",
              "EntityName": "NIKE Max LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mmhj9",
              "EntityName": "NIKE Vapor Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mmzcd",
              "EntityName": "NIKE Japan Corp"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnf8p",
              "EntityName": "NIKE Canada Corp"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnf8x",
              "EntityName": "NIKE Italy S.R.L."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnf93",
              "EntityName": "NIKE Suzhou Holding HK Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnx33",
              "EntityName": "NIKE Europe Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnx3b",
              "EntityName": "NIKE Zoom LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mnxz3",
              "EntityName": "Umbro JV Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mpfwh",
              "EntityName": "NIKE Global Trading PTE. LTD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mpfwq",
              "EntityName": "NIKE Philippines Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mpxh9",
              "EntityName": "Futbol Club Barcelona SL"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mpy3t",
              "EntityName": "NIKE France SAS."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mqvs1",
              "EntityName": "NIKE (Switzerland) GmbH"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mqvs8",
              "EntityName": "NIKE Holding LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mqvsh",
              "EntityName": "NIKE Retail Poland sp. z o. o."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09ms8bg",
              "EntityName": "Hurley 999 SL"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mt6xj",
              "EntityName": "NIKE Canada Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mt6xr",
              "EntityName": "NIKE Sweden AB"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mtq62",
              "EntityName": "NIKE (Thailand) Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mtq69",
              "EntityName": "NIKE Hong Kong Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mtq6j",
              "EntityName": "NIKE Retail Services Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mv4rv",
              "EntityName": "NIKE Finance Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mv5h1",
              "EntityName": "Umbro Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mx070",
              "EntityName": "NIKE China Holding HK Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxgzn",
              "EntityName": "NIKE International Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxgzw",
              "EntityName": "NIKE Sourcing India Private Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxykn",
              "EntityName": "NIKE do Brasil Comercio e Participacoes Ltda"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxykw",
              "EntityName": "NIKE New Zealand Co"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxyl2",
              "EntityName": "NIKE Vision Timing & Techlab LP"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxzbb",
              "EntityName": "Triax Insurance Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mxzcf",
              "EntityName": "Umbro International JV"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09myf89",
              "EntityName": "Umbro International Holdings Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n05q3",
              "EntityName": "NIKE Australia Pty. Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n05qb",
              "EntityName": "NIKE International LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n05qk",
              "EntityName": "NIKE South Africa Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n0nbn",
              "EntityName": "NIKE Galaxy Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n12q_",
              "EntityName": "Hurley Australia Pty Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n1kjv",
              "EntityName": "Juventus Merchandising S.r.l."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n20nr",
              "EntityName": "NIKE Jump Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2h_r",
              "EntityName": "Umbro International Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2hc5",
              "EntityName": "NIKE Dunk Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2hcl",
              "EntityName": "NIKE NZ Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2hct",
              "EntityName": "NIKE Waffle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2z87",
              "EntityName": "NIKE Lavadome"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n2z8g",
              "EntityName": "NIKE Trading Co B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n3f3q",
              "EntityName": "NIKE IHM Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n3fsz",
              "EntityName": "Twin Dragons Global Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n3w10",
              "EntityName": "Converse Hong Kong Holding Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n4brj",
              "EntityName": "NIKE de Mexico S de R.L. de C.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n4brr",
              "EntityName": "NIKE Logistics Yugen Kaisha"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n4brz",
              "EntityName": "NIKE USA Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n4sfr",
              "EntityName": "Converse (Asia Pacific) Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n5867",
              "EntityName": "NIKE Australia Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n586g",
              "EntityName": "NIKE International Holding Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n586p",
              "EntityName": "NIKE South Africa Holdings LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n65_6",
              "EntityName": "NIKE Sports Korea Co Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n65z_",
              "EntityName": "NIKE Israel Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n65zs",
              "EntityName": "NIKE CA LLC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n6p3w",
              "EntityName": "NIKE Global Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n6p42",
              "EntityName": "NIKE Offshore Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n6pt6",
              "EntityName": "USISL Inc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n73w1",
              "EntityName": "NIKE Global Services PTE. LTD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n73w8",
              "EntityName": "NIKE Pegasus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n80p_",
              "EntityName": "Hurley International Holding B.V."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n9ftf",
              "EntityName": "NIKE India Private Ltd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09n9ftn",
              "EntityName": "NIKE SINGAPORE PTE LTD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b4zbb",
              "EntityName": "Nike Vision"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bq0k3",
              "EntityName": "Cole Haan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cnsqj1",
              "EntityName": "Nike Golf"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-633",
      "RawQuestion": "what is claire danes famous for?",
      "ProcessedQuestion": "what is claire danes famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-633.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q867813) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q867813 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "claire danes",
          "TopicEntityName": "Claire Danes",
          "TopicEntityMid": "m.01gq0b",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-634",
      "RawQuestion": "what county is san antonio in?",
      "ProcessedQuestion": "what county is san antonio in",
      "Parses": [
        {
          "ParseId": "WebQTest-634.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q975) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q975 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "san antonio",
          "TopicEntityName": "San Antonio",
          "TopicEntityMid": "m.0f2w0",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ms5v",
              "EntityName": "Comal County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-634.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2w0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2w0 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "san antonio",
          "TopicEntityName": "San Antonio",
          "TopicEntityMid": "m.0f2w0",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mqr8",
              "EntityName": "Medina County"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ms5v",
              "EntityName": "Comal County"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mskq",
              "EntityName": "Bexar County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-636",
      "RawQuestion": "what timezone is the state of michigan and?",
      "ProcessedQuestion": "what timezone is the state of michigan and",
      "Parses": [
        {
          "ParseId": "WebQTest-636.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1166) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1166 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "michigan",
          "TopicEntityName": "Michigan",
          "TopicEntityMid": "m.04rrx",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-639",
      "RawQuestion": "what year did the bulls get rodman?",
      "ProcessedQuestion": "what year did the bulls get rodman",
      "Parses": [
        {
          "ParseId": "WebQTest-639.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q201608) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q201608 wdt:P54 ?y . ?y wdt:P580 ?x . ?y wdt:P54 wd:Q128109 . } ",
          "PotentialTopicEntityMention": "rodman",
          "TopicEntityName": "Dennis Rodman",
          "TopicEntityMid": "m.01ztgm",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0jm74",
              "EntityName": "Chicago Bulls",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.team",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1995",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-640",
      "RawQuestion": "who was saint paul the apostle?",
      "ProcessedQuestion": "who was saint paul the apostle",
      "Parses": [
        {
          "ParseId": "WebQTest-640.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9200) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9200 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "saint paul the apostle",
          "TopicEntityName": "Paul the Apostle",
          "TopicEntityMid": "m.060nc",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_m1q",
              "EntityName": "Tentmaker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066dv",
              "EntityName": "Prophet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2pm",
              "EntityName": "Missionary"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-646",
      "RawQuestion": "where did mary bell live?",
      "ProcessedQuestion": "where did mary bell live",
      "Parses": [
        {
          "ParseId": "WebQTest-646.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q241076) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q241076 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "mary bell",
          "TopicEntityName": "Mary Bell",
          "TopicEntityMid": "m.01j324",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j7ng",
              "EntityName": "Newcastle upon Tyne"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-652",
      "RawQuestion": "what kind of hispanic is selena gomez?",
      "ProcessedQuestion": "what kind of hispanic is selena gomez",
      "Parses": [
        {
          "ParseId": "WebQTest-652.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P172 ?x . } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.ethnicity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09k5jvk",
              "EntityName": "Mexicans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xnvg",
              "EntityName": "Italian American"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-655",
      "RawQuestion": "what is the zip code for wyoming michigan?",
      "ProcessedQuestion": "what is the zip code for wyoming michigan",
      "Parses": [
        {
          "ParseId": "WebQTest-655.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1022953) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1022953 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "wyoming",
          "TopicEntityName": "Wyoming",
          "TopicEntityMid": "m.0v9xs",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_xtr9",
              "EntityName": "49509"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_xv47",
              "EntityName": "49519"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-657",
      "RawQuestion": "where did martin luther king got shot at?",
      "ProcessedQuestion": "where did martin luther king got shot at",
      "Parses": [
        {
          "ParseId": "WebQTest-657.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-658",
      "RawQuestion": "who wrote the gospel according to john?",
      "ProcessedQuestion": "who wrote the gospel according to john",
      "Parses": [
        {
          "ParseId": "WebQTest-658.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36766) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36766 wdt:P50 ?x . } ",
          "PotentialTopicEntityMention": "gospel according to john",
          "TopicEntityName": "Gospel of John",
          "TopicEntityMid": "m.038vs",
          "InferentialChain": [
            "book.written_work.author"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.046_b",
              "EntityName": "John the Evangelist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-661",
      "RawQuestion": "who did nasri play for before arsenal?",
      "ProcessedQuestion": "who did nasri play for before arsenal",
      "Parses": [
        {
          "ParseId": "WebQTest-661.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date comparison. Original comment: F cannot handle before query"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { filter(?x != wd:Q9617) wd:Q1920 wdt:P54 ?z . #Samir Nasri ?z wdt:P54 wd:Q9617  . #arsenal ?z wdt:P580 ?from . wd:Q1920 wdt:P54 ?y . #Samir Nasri ?y wdt:P54 ?x . ?y  wdt:P582 ?to . FILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0) } ORDER BY Desc(xsd:datetime(?from)) LIMIT 1",
          "PotentialTopicEntityMention": "nasri",
          "TopicEntityName": "Samir Nasri",
          "TopicEntityMid": "m.0f2dbm",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gys2",
              "EntityName": "Olympique de Marseille"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-669",
      "RawQuestion": "what did dr josef mengele do?",
      "ProcessedQuestion": "what did dr josef mengele do",
      "Parses": [
        {
          "ParseId": "WebQTest-669.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q57109) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q57109 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "dr josef mengele",
          "TopicEntityName": "Josef Mengele",
          "TopicEntityMid": "m.0lhsd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-675",
      "RawQuestion": "what county is st james city fl in?",
      "ProcessedQuestion": "what county is st james city fl in",
      "Parses": [
        {
          "ParseId": "WebQTest-675.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2189154) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2189154 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "st james city",
          "TopicEntityName": "St. James City",
          "TopicEntityMid": "m.0rmlp",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrjb",
              "EntityName": "Lee County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-675.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rmlp)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rmlp ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "st james city",
          "TopicEntityName": "St. James City",
          "TopicEntityMid": "m.0rmlp",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrjb",
              "EntityName": "Lee County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-680",
      "RawQuestion": "what team did aguero play for?",
      "ProcessedQuestion": "what team did aguero play for",
      "Parses": [
        {
          "ParseId": "WebQTest-680.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? answering as if they typed \"teams\" and don't care about getting the current team also"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q119562) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q119562 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "aguero",
          "TopicEntityName": "Sergio Agüero",
          "TopicEntityMid": "m.099vgz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01634x",
              "EntityName": "Manchester City F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047yd6",
              "EntityName": "Club Atlético Independiente"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lg7v",
              "EntityName": "Atlético Madrid"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-685",
      "RawQuestion": "where does chef ina garten live?",
      "ProcessedQuestion": "where does chef ina garten live",
      "Parses": [
        {
          "ParseId": "WebQTest-685.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q273371) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q273371 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ina garten",
          "TopicEntityName": "Ina Garten",
          "TopicEntityMid": "m.0315fl",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr3d",
              "EntityName": "Brooklyn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-690",
      "RawQuestion": "what did scott joplin play?",
      "ProcessedQuestion": "what did scott joplin play",
      "Parses": [
        {
          "ParseId": "WebQTest-690.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q191499) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q191499 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "scott joplin",
          "TopicEntityName": "Scott Joplin",
          "TopicEntityMid": "m.07b69",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ch55",
              "EntityName": "Jazz piano"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-691",
      "RawQuestion": "what school did miley cyrus?",
      "ProcessedQuestion": "what school did miley cyrus",
      "Parses": [
        {
          "ParseId": "WebQTest-691.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4235) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4235 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "miley cyrus",
          "TopicEntityName": "Miley Cyrus",
          "TopicEntityMid": "m.0bdxs5",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d_s7d",
              "EntityName": "Heritage Elementary School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-701",
      "RawQuestion": "what team is reggie bush on 2011?",
      "ProcessedQuestion": "what team is reggie bush on 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-701.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q555271) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q555271 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "reggie bush",
          "TopicEntityName": "Reggie Bush",
          "TopicEntityMid": "m.05cb70",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04vn5",
              "EntityName": "Miami Dolphins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g3v",
              "EntityName": "New Orleans Saints"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-704",
      "RawQuestion": "who is thor heyerdahl?",
      "ProcessedQuestion": "who is thor heyerdahl",
      "Parses": [
        {
          "ParseId": "WebQTest-704.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q133622) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q133622 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "thor heyerdahl",
          "TopicEntityName": "Thor Heyerdahl",
          "TopicEntityMid": "m.09fcm",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.029lh1",
              "EntityName": "Adventurer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xlj97",
              "EntityName": "Ethnographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dgd_",
              "EntityName": "Cinematographer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-706",
      "RawQuestion": "where did troy aikman play football?",
      "ProcessedQuestion": "where did troy aikman play football",
      "Parses": [
        {
          "ParseId": "WebQTest-706.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q525002) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q525002 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "troy aikman",
          "TopicEntityName": "Troy Aikman",
          "TopicEntityMid": "m.0dr5g9",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02896",
              "EntityName": "Dallas Cowboys"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-709",
      "RawQuestion": "what did general robert e lee die from?",
      "ProcessedQuestion": "what did general robert e lee die from",
      "Parses": [
        {
          "ParseId": "WebQTest-709.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165557) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165557 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "robert e lee",
          "TopicEntityName": "Robert E. Lee",
          "TopicEntityMid": "m.06f5j",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-713",
      "RawQuestion": "what county is st. louis park in?",
      "ProcessedQuestion": "what county is st. louis park in",
      "Parses": [
        {
          "ParseId": "WebQTest-713.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q988741) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q988741 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "st . louis park",
          "TopicEntityName": "St. Louis Park",
          "TopicEntityMid": "m.0xdhj",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nhmw",
              "EntityName": "Hennepin County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-713.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xdhj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xdhj ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "st . louis park",
          "TopicEntityName": "St. Louis Park",
          "TopicEntityMid": "m.0xdhj",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nhmw",
              "EntityName": "Hennepin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-717",
      "RawQuestion": "what timezone is tucson arizona in right now?",
      "ProcessedQuestion": "what timezone is tucson arizona in right now",
      "Parses": [
        {
          "ParseId": "WebQTest-717.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q18575) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q18575 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "tucson arizona",
          "TopicEntityName": "Tucson",
          "TopicEntityMid": "m.0fr0t",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-718",
      "RawQuestion": "when was lucy lawless born?",
      "ProcessedQuestion": "when was lucy lawless born",
      "Parses": [
        {
          "ParseId": "WebQTest-718.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q133112) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q133112 wdt:P569 ?x . } ",
          "PotentialTopicEntityMention": "lucy lawless",
          "TopicEntityName": "Lucy Lawless",
          "TopicEntityMid": "m.01r9md",
          "InferentialChain": [
            "people.person.date_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1968-03-29",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-721",
      "RawQuestion": "what kind of leukemia did jill clayburgh have?",
      "ProcessedQuestion": "what kind of leukemia did jill clayburgh have",
      "Parses": [
        {
          "ParseId": "WebQTest-721.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230665) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230665 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "jill clayburgh",
          "TopicEntityName": "Jill Clayburgh",
          "TopicEntityMid": "m.01gw8b",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bg7m",
              "EntityName": "B-cell chronic lymphocytic leukemia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04psf",
              "EntityName": "Leukemia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-724",
      "RawQuestion": "where was marilyn monroe found dead?",
      "ProcessedQuestion": "where was marilyn monroe found dead",
      "Parses": [
        {
          "ParseId": "WebQTest-724.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4616 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "marilyn monroe",
          "TopicEntityName": "Marilyn Monroe",
          "TopicEntityMid": "m.04wqr",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yq4f",
              "EntityName": "Brentwood"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-730",
      "RawQuestion": "what record label is kelly clarkson signed with?",
      "ProcessedQuestion": "what record label is kelly clarkson signed with",
      "Parses": [
        {
          "ParseId": "WebQTest-730.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q483507) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q483507 wdt:P264 ?x . } ",
          "PotentialTopicEntityMention": "kelly clarkson",
          "TopicEntityName": "Kelly Clarkson",
          "TopicEntityMid": "m.025ldg",
          "InferentialChain": [
            "music.artist.label"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0181dw",
              "EntityName": "RCA Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03mp8k",
              "EntityName": "Sony BMG"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043g7l",
              "EntityName": "Sony Music Entertainment"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rpfr83",
              "EntityName": "19 Recordings"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-731",
      "RawQuestion": "where does tim roth come from?",
      "ProcessedQuestion": "where does tim roth come from",
      "Parses": [
        {
          "ParseId": "WebQTest-731.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q203804) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q203804 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tim roth",
          "TopicEntityName": "Tim Roth",
          "TopicEntityMid": "m.021yzs",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n9h9",
              "EntityName": "Dulwich"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-742",
      "RawQuestion": "where did the gettysburg address?",
      "ProcessedQuestion": "where did the gettysburg address",
      "Parses": [
        {
          "ParseId": "WebQTest-742.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? exact address?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q214524) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q214524 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "gettysburg address",
          "TopicEntityName": "Gettysburg Address",
          "TopicEntityMid": "m.037yx",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzs0",
              "EntityName": "Gettysburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-744",
      "RawQuestion": "who was tupac signed to?",
      "ProcessedQuestion": "who was tupac signed to",
      "Parses": [
        {
          "ParseId": "WebQTest-744.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6107) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6107 wdt:P264 ?x . } ",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": [
            "music.artist.label"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n2m6",
              "EntityName": "Death Row Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01trtc",
              "EntityName": "Interscope Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.076702",
              "EntityName": "Amaru Entertainment"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-745",
      "RawQuestion": "what was augustus caesar famous for?",
      "ProcessedQuestion": "what was augustus caesar famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-745.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1405) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1405 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "augustus caesar",
          "TopicEntityName": "Augustus",
          "TopicEntityMid": "m.0ngg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g14w",
              "EntityName": "Roman emperor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-748",
      "RawQuestion": "what is the zip code for schenectady new york?",
      "ProcessedQuestion": "what is the zip code for schenectady new york",
      "Parses": [
        {
          "ParseId": "WebQTest-748.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q331380) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q331380 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "schenectady new york",
          "TopicEntityName": "Schenectady",
          "TopicEntityMid": "m.0fdpd",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020g9r_",
              "EntityName": "12306"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020g9r0",
              "EntityName": "12305"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020g9sv",
              "EntityName": "12308"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020g9vb",
              "EntityName": "12309"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020g9yp",
              "EntityName": "12302"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kxqvh",
              "EntityName": "12345"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv1_1",
              "EntityName": "12304"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv1_v",
              "EntityName": "12307"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv1zn",
              "EntityName": "12303"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrp8x",
              "EntityName": "12325"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrp93",
              "EntityName": "12301"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-753",
      "RawQuestion": "what position did stanley matthews play?",
      "ProcessedQuestion": "what position did stanley matthews play",
      "Parses": [
        {
          "ParseId": "WebQTest-753.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q216140) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q216140 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "stanley matthews",
          "TopicEntityName": "Sir Stanley Matthews",
          "TopicEntityMid": "m.013s6x",
          "InferentialChain": [
            "soccer.football_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nzb8",
              "EntityName": "Midfielder"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sdk9v",
              "EntityName": "Forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qh1vd",
              "EntityName": "Outside forward"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-761",
      "RawQuestion": "what is san francisco zip code?",
      "ProcessedQuestion": "what is san francisco zip code",
      "Parses": [
        {
          "ParseId": "WebQTest-761.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q62) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q62 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "san francisco",
          "TopicEntityName": "San Francisco",
          "TopicEntityMid": "m.0d6lp",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn_8s",
              "EntityName": "94119"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0_v",
              "EntityName": "94108"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn01v",
              "EntityName": "94133"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn02t",
              "EntityName": "94103"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn03_",
              "EntityName": "94107"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn064",
              "EntityName": "94114"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0dr",
              "EntityName": "94104"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0g6",
              "EntityName": "94118"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0jc",
              "EntityName": "94102"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0k5",
              "EntityName": "94122"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0qt",
              "EntityName": "94110"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0rn",
              "EntityName": "94123"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn0z_",
              "EntityName": "94124"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn119",
              "EntityName": "94115"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn15r",
              "EntityName": "94101"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn177",
              "EntityName": "94121"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn18q",
              "EntityName": "94117"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn1kn",
              "EntityName": "94111"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn1px",
              "EntityName": "94131"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn2b4",
              "EntityName": "94112"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn37j",
              "EntityName": "94105"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn4sl",
              "EntityName": "94146"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn6d7",
              "EntityName": "94132"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zn6fx",
              "EntityName": "94127"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zncnw",
              "EntityName": "94128"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01znt3g",
              "EntityName": "94118-3208"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01znttd",
              "EntityName": "94116"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zp0ds",
              "EntityName": "94134"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.022r0__",
              "EntityName": "94109"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqw2g",
              "EntityName": "94102-4733"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqwhk",
              "EntityName": "94158"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnjvp",
              "EntityName": "94129"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnjw2",
              "EntityName": "94130"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq03w",
              "EntityName": "94199"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq042",
              "EntityName": "94188"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq049",
              "EntityName": "94177"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq04j",
              "EntityName": "94172"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq04r",
              "EntityName": "94171"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq04z",
              "EntityName": "94164"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq055",
              "EntityName": "94163"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq05d",
              "EntityName": "94162"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq05m",
              "EntityName": "94161"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq05v",
              "EntityName": "94160"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq061",
              "EntityName": "94159"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq068",
              "EntityName": "94156"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq06h",
              "EntityName": "94154"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq06q",
              "EntityName": "94153"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq06y",
              "EntityName": "94151"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq074",
              "EntityName": "94147"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq07c",
              "EntityName": "94145"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq07l",
              "EntityName": "94144"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq07t",
              "EntityName": "94143"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq080",
              "EntityName": "94142"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq087",
              "EntityName": "94141"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq08g",
              "EntityName": "94140"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq08p",
              "EntityName": "94139"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq08x",
              "EntityName": "94137"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq093",
              "EntityName": "94126"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq09b",
              "EntityName": "94125"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq09k",
              "EntityName": "94120"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gtjrnv",
              "EntityName": "94117-2212"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wrh466",
              "EntityName": "94107-7621"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-768",
      "RawQuestion": "who owns volkswagen car company?",
      "ProcessedQuestion": "who owns volkswagen car company",
      "Parses": [
        {
          "ParseId": "WebQTest-768.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q246) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q246 wdt:P749 ?y . ?y wdt:P749 ?x . } ",
          "PotentialTopicEntityMention": "volkswagen",
          "TopicEntityName": "Volkswagen Passenger Cars",
          "TopicEntityMid": "m.07ywl",
          "InferentialChain": [
            "organization.organization.parent",
            "organization.organization_relationship.parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07_zt",
              "EntityName": "Volkswagen Group"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-770",
      "RawQuestion": "what did steve mcnair died from?",
      "ProcessedQuestion": "what did steve mcnair died from",
      "Parses": [
        {
          "ParseId": "WebQTest-770.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q167818) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q167818 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "steve mcnair",
          "TopicEntityName": "Steve McNair",
          "TopicEntityMid": "m.02zmx0",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qnd1b",
              "EntityName": "Ballistic trauma"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-772",
      "RawQuestion": "who plays roxanne in ghost rider?",
      "ProcessedQuestion": "who plays roxanne in ghost rider",
      "Parses": [
        {
          "ParseId": "WebQTest-772.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41754) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41754 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q7372377 . } ",
          "PotentialTopicEntityMention": "ghost rider",
          "TopicEntityName": "Ghost Rider",
          "TopicEntityMid": "m.06yykb",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02ph41w",
              "EntityName": "Roxanne Simpson",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026ths5",
              "EntityName": "Raquel Alessi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_x5t",
              "EntityName": "Eva Mendes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-778",
      "RawQuestion": "what was jesse owens education?",
      "ProcessedQuestion": "what was jesse owens education",
      "Parses": [
        {
          "ParseId": "WebQTest-778.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q52651) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q52651 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jesse owens",
          "TopicEntityName": "Jesse Owens",
          "TopicEntityMid": "m.0cmr3",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05krk",
              "EntityName": "Ohio State University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fcddh",
              "EntityName": "East Technical High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-779",
      "RawQuestion": "where does carlos santana live?",
      "ProcessedQuestion": "where does carlos santana live",
      "Parses": [
        {
          "ParseId": "WebQTest-779.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q819016) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q819016 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "carlos santana",
          "TopicEntityName": "Carlos Santana",
          "TopicEntityMid": "m.01304j",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01btyw",
              "EntityName": "Jalisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6lp",
              "EntityName": "San Francisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pswc",
              "EntityName": "Tijuana"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-780",
      "RawQuestion": "what is the new movie john carter about?",
      "ProcessedQuestion": "what is the new movie john carter about",
      "Parses": [
        {
          "ParseId": "WebQTest-780.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q235347) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q235347 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "movie john carter",
          "TopicEntityName": "John Carter",
          "TopicEntityMid": "m.03whyr",
          "InferentialChain": [
            "film.film.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01hmnh",
              "EntityName": "Fantasy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kdv5l",
              "EntityName": "Action Film"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03k9fj",
              "EntityName": "Adventure Film"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06n90",
              "EntityName": "Science Fiction"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-783",
      "RawQuestion": "what county is houston tx in?",
      "ProcessedQuestion": "what county is houston tx in",
      "Parses": [
        {
          "ParseId": "WebQTest-783.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16555) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16555 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "houston",
          "TopicEntityName": "Houston",
          "TopicEntityMid": "m.03l2n",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fxwx",
              "EntityName": "Montgomery County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-784",
      "RawQuestion": "where do the seattle seahawks play?",
      "ProcessedQuestion": "where do the seattle seahawks play",
      "Parses": [
        {
          "ParseId": "WebQTest-784.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221878) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221878 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "seattle seahawks",
          "TopicEntityName": "Seattle Seahawks",
          "TopicEntityMid": "m.070xg",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01db_j",
              "EntityName": "CenturyLink Field"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-790",
      "RawQuestion": "where did richard arkwright grow up?",
      "ProcessedQuestion": "where did richard arkwright grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-790.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294153) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294153 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "richard arkwright",
          "TopicEntityName": "Richard Arkwright",
          "TopicEntityMid": "m.01tglh",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m7dd",
              "EntityName": "Preston, Lancashire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-792",
      "RawQuestion": "when did roth ira originate?",
      "ProcessedQuestion": "when did roth ira originate",
      "Parses": [
        {
          "ParseId": "WebQTest-792.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7370386) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7370386 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "roth ira",
          "TopicEntityName": "Roth IRA",
          "TopicEntityMid": "m.023_lp",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023xsb",
              "EntityName": "William V. Roth, Jr."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-796",
      "RawQuestion": "what did thomas malthus do?",
      "ProcessedQuestion": "what did thomas malthus do",
      "Parses": [
        {
          "ParseId": "WebQTest-796.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13526) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13526 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "thomas malthus",
          "TopicEntityName": "Thomas Robert Malthus",
          "TopicEntityMid": "m.07r3d",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03l_bhv",
              "EntityName": "Demographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0frz0",
              "EntityName": "Economist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-797",
      "RawQuestion": "what is the zip code for newark california?",
      "ProcessedQuestion": "what is the zip code for newark california",
      "Parses": [
        {
          "ParseId": "WebQTest-797.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q850812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q850812 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "newark california",
          "TopicEntityName": "Newark",
          "TopicEntityMid": "m.0qx_6",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zjg6s",
              "EntityName": "94560"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-805",
      "RawQuestion": "where do john lennon die?",
      "ProcessedQuestion": "where do john lennon die",
      "Parses": [
        {
          "ParseId": "WebQTest-805.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1203 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "john lennon",
          "TopicEntityName": "John Lennon",
          "TopicEntityMid": "m.01vsl3_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-809",
      "RawQuestion": "what is the current time in bangalore india?",
      "ProcessedQuestion": "what is the current time in bangalore india",
      "Parses": [
        {
          "ParseId": "WebQTest-809.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1355) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1355 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "bangalore",
          "TopicEntityName": "Bangalore",
          "TopicEntityMid": "m.09c17",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k8gd",
              "EntityName": "India Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-819",
      "RawQuestion": "where was bin laden found and killed?",
      "ProcessedQuestion": "where was bin laden found and killed",
      "Parses": [
        {
          "ParseId": "WebQTest-819.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1317 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "bin laden",
          "TopicEntityName": "Osama bin Laden",
          "TopicEntityMid": "m.05mg9",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011hs1",
              "EntityName": "Abbottabad"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-821",
      "RawQuestion": "what did pamela courson die from?",
      "ProcessedQuestion": "what did pamela courson die from",
      "Parses": [
        {
          "ParseId": "WebQTest-821.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q428967) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q428967 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "pamela courson",
          "TopicEntityName": "Pamela Courson",
          "TopicEntityMid": "m.07ms9g",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf_6",
              "EntityName": "Drug overdose"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kp1qn",
              "EntityName": "Heroin overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-825",
      "RawQuestion": "who does nolan ryan play for?",
      "ProcessedQuestion": "who does nolan ryan play for",
      "Parses": [
        {
          "ParseId": "WebQTest-825.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q721948) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q721948 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "nolan ryan",
          "TopicEntityName": "Nolan Ryan",
          "TopicEntityMid": "m.0hctb",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m1n",
              "EntityName": "Houston Astros"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kmnv1",
              "EntityName": "California Angels"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-827",
      "RawQuestion": "what country does justin bieber come from?",
      "ProcessedQuestion": "what country does justin bieber come from",
      "Parses": [
        {
          "ParseId": "WebQTest-827.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34086) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34086 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "justin bieber",
          "TopicEntityName": "Justin Bieber",
          "TopicEntityMid": "m.06w2sn5",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d060g",
              "EntityName": "Canada"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-829",
      "RawQuestion": "who was frida kahlo influenced by?",
      "ProcessedQuestion": "who was frida kahlo influenced by",
      "Parses": [
        {
          "ParseId": "WebQTest-829.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5588 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "frida kahlo",
          "TopicEntityName": "Frida Kahlo",
          "TopicEntityMid": "m.015k04",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0q2c2",
              "EntityName": "Diego Rivera"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-830",
      "RawQuestion": "where is taylor swift from?",
      "ProcessedQuestion": "where is taylor swift from",
      "Parses": [
        {
          "ParseId": "WebQTest-830.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26876) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26876 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "taylor swift",
          "TopicEntityName": "Taylor Swift",
          "TopicEntityMid": "m.0dl567",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zlgm",
              "EntityName": "Reading"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-834",
      "RawQuestion": "where did the battle of waterloo occur?",
      "ProcessedQuestion": "where did the battle of waterloo occur",
      "Parses": [
        {
          "ParseId": "WebQTest-834.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48314) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48314 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "waterloo",
          "TopicEntityName": "Battle of Waterloo",
          "TopicEntityMid": "m.01dcm",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017qwy",
              "EntityName": "Waterloo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-838",
      "RawQuestion": "what team does cristiano ronaldo play for 2011?",
      "ProcessedQuestion": "what team does cristiano ronaldo play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-838.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-843",
      "RawQuestion": "where did theodor schwann study?",
      "ProcessedQuestion": "where did theodor schwann study",
      "Parses": [
        {
          "ParseId": "WebQTest-843.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76745) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76745 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "theodor schwann",
          "TopicEntityName": "Theodor Schwann",
          "TopicEntityMid": "m.040000",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01stzp",
              "EntityName": "Humboldt University of Berlin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03563j",
              "EntityName": "University of Würzburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m7yh",
              "EntityName": "University of Bonn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-849",
      "RawQuestion": "what country sponsored ferdinand magellan?",
      "ProcessedQuestion": "what country sponsored ferdinand magellan",
      "Parses": [
        {
          "ParseId": "WebQTest-849.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1496 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "ferdinand magellan",
          "TopicEntityName": "Ferdinand Magellan",
          "TopicEntityMid": "m.033ky",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0285m87",
              "EntityName": "Kingdom of Portugal"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-850",
      "RawQuestion": "what did vera ellen die from?",
      "ProcessedQuestion": "what did vera ellen die from",
      "Parses": [
        {
          "ParseId": "WebQTest-850.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q253934) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q253934 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "vera ellen",
          "TopicEntityName": "Vera-Ellen",
          "TopicEntityMid": "m.022sm6",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-862",
      "RawQuestion": "where did louis sachar grow up?",
      "ProcessedQuestion": "where did louis sachar grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-862.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q553137) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q553137 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "louis sachar",
          "TopicEntityName": "Louis Sachar",
          "TopicEntityMid": "m.01bq8d",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y277",
              "EntityName": "East Meadow"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-870",
      "RawQuestion": "where does the celtics practice?",
      "ProcessedQuestion": "where does the celtics practice",
      "Parses": [
        {
          "ParseId": "WebQTest-870.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131371) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131371 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "celtics",
          "TopicEntityName": "Boston Celtics",
          "TopicEntityMid": "m.0bwjj",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqj2",
              "EntityName": "TD Garden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tbsj",
              "EntityName": "XL Center"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-872",
      "RawQuestion": "where bin laden got killed?",
      "ProcessedQuestion": "where bin laden got killed",
      "Parses": [
        {
          "ParseId": "WebQTest-872.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1317 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "bin laden",
          "TopicEntityName": "Osama bin Laden",
          "TopicEntityMid": "m.05mg9",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011hs1",
              "EntityName": "Abbottabad"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-875",
      "RawQuestion": "where did hugo chavez go to school?",
      "ProcessedQuestion": "where did hugo chavez go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-875.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8440) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8440 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "hugo chavez",
          "TopicEntityName": "Hugo Chávez",
          "TopicEntityMid": "m.0d1b_",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0467r_n",
              "EntityName": "Julian Pino School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0467s09",
              "EntityName": "Daniel Florencio O'Leary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fc47",
              "EntityName": "Simón Bolívar University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08fk_z",
              "EntityName": "Bolivarian Military University of Venezuela"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-877",
      "RawQuestion": "what is the name of sonia gandhi daughter?",
      "ProcessedQuestion": "what is the name of sonia gandhi daughter",
      "Parses": [
        {
          "ParseId": "WebQTest-877.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q163225) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q163225 wdt:P40 ?x . ?x wdt:P21 wd:Q43445 . } ",
          "PotentialTopicEntityMention": "sonia gandhi",
          "TopicEntityName": "Sonia Gandhi",
          "TopicEntityMid": "m.016rwt",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02zsn",
              "EntityName": "Female",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02n207",
              "EntityName": "Priyanka Gandhi"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-879",
      "RawQuestion": "where was mary todd lincoln from?",
      "ProcessedQuestion": "where was mary todd lincoln from",
      "Parses": [
        {
          "ParseId": "WebQTest-879.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215062) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215062 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "mary todd lincoln",
          "TopicEntityName": "Mary Todd Lincoln",
          "TopicEntityMid": "m.01ypl0",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9y6",
              "EntityName": "Lexington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-880",
      "RawQuestion": "where did charles darwin die?",
      "ProcessedQuestion": "where did charles darwin die",
      "Parses": [
        {
          "ParseId": "WebQTest-880.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1035) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1035 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "charles darwin",
          "TopicEntityName": "Charles Darwin",
          "TopicEntityMid": "m.01lwx",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_675",
              "EntityName": "Down House"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-882",
      "RawQuestion": "when did the big earthquake hit san francisco?",
      "ProcessedQuestion": "when did the big earthquake hit san francisco",
      "Parses": [
        {
          "ParseId": "WebQTest-882.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211386) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211386 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "big earthquake",
          "TopicEntityName": "1906 San Francisco earthquake",
          "TopicEntityMid": "m.01f6rm",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1906-04-18",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-884",
      "RawQuestion": "where was jesus after he died on the cross?",
      "ProcessedQuestion": "where was jesus after he died on the cross",
      "Parses": [
        {
          "ParseId": "WebQTest-884.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? kind of like \"place of death\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q302) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q302 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jesus",
          "TopicEntityName": "Jesus Christ",
          "TopicEntityMid": "m.045m1_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065sh7",
              "EntityName": "Judea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-885",
      "RawQuestion": "who is sir james dyson?",
      "ProcessedQuestion": "who is sir james dyson",
      "Parses": [
        {
          "ParseId": "WebQTest-885.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1346101) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1346101 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "sir james dyson",
          "TopicEntityName": "James Dyson",
          "TopicEntityMid": "m.0209vm",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c979",
              "EntityName": "Designer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgy6",
              "EntityName": "Industrial designer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09j9h",
              "EntityName": "Engineer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-887",
      "RawQuestion": "what high school did maya angelou go to?",
      "ProcessedQuestion": "what high school did maya angelou go to",
      "Parses": [
        {
          "ParseId": "WebQTest-887.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q19526) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q19526 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q9826 . } ",
          "PotentialTopicEntityMention": "maya angelou",
          "TopicEntityName": "Maya Angelou",
          "TopicEntityMid": "m.01q9b9",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0bpgx",
              "EntityName": "High school",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kldk",
              "EntityName": "George Washington High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-891",
      "RawQuestion": "who was the leader of the first communist party of china?",
      "ProcessedQuestion": "who was the leader of the first communist party of china",
      "Parses": [
        {
          "ParseId": "WebQTest-891.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17427) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17427 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "communist party of china",
          "TopicEntityName": "Communist Party of China",
          "TopicEntityMid": "m.02189",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d42c",
              "EntityName": "Li Dazhao"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xzm",
              "EntityName": "Mao Zedong"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dbk8",
              "EntityName": "Zhou Enlai"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n10q",
              "EntityName": "Chen Duxiu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-892",
      "RawQuestion": "what did miles davis died of?",
      "ProcessedQuestion": "what did miles davis died of",
      "Parses": [
        {
          "ParseId": "WebQTest-892.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93341) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93341 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "miles davis",
          "TopicEntityName": "Miles Davis",
          "TopicEntityMid": "m.053yx",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019dmc",
              "EntityName": "Respiratory failure"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y0js",
              "EntityName": "Stroke"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-893",
      "RawQuestion": "what is the zip code for azle texas?",
      "ProcessedQuestion": "what is the zip code for azle texas",
      "Parses": [
        {
          "ParseId": "WebQTest-893.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q793929) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q793929 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "azle texas",
          "TopicEntityName": "Azle",
          "TopicEntityMid": "m.013n59",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020zj8h",
              "EntityName": "76020"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdl8",
              "EntityName": "76098"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-898",
      "RawQuestion": "what county is st paul nc in?",
      "ProcessedQuestion": "what county is st paul nc in",
      "Parses": [
        {
          "ParseId": "WebQTest-898.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q651403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q651403 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "st paul nc",
          "TopicEntityName": "St. Pauls",
          "TopicEntityMid": "m.0yk9v",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n3s6",
              "EntityName": "Robeson County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-900",
      "RawQuestion": "where did nat turner 1831 rebellion occur?",
      "ProcessedQuestion": "where did nat turner 1831 rebellion occur",
      "Parses": [
        {
          "ParseId": "WebQTest-900.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6967898) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6967898 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "nat turner 1831 rebellion",
          "TopicEntityName": "Nat Turner's slave rebellion",
          "TopicEntityMid": "m.0h5d0t",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mn21",
              "EntityName": "Southampton County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-908",
      "RawQuestion": "what awards gary paulsen won?",
      "ProcessedQuestion": "what awards gary paulsen won",
      "Parses": [
        {
          "ParseId": "WebQTest-908.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q718463) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q718463 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "gary paulsen",
          "TopicEntityName": "Gary Paulsen",
          "TopicEntityMid": "m.04fpcx",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cd7p",
              "EntityName": "John Newbery Medal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027x4ws",
              "EntityName": "Dorothy Canfield Fisher Children's Book Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0463dxd",
              "EntityName": "Margaret Edwards Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p1pmd",
              "EntityName": "Spur Award for Best Juvenile Fiction"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p1pmh",
              "EntityName": "Spur Award for Best Juvenile Nonfiction"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09kkqzd",
              "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0djddy",
              "EntityName": "Regina Medal"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-910",
      "RawQuestion": "where did alexander graham bell die?",
      "ProcessedQuestion": "where did alexander graham bell die",
      "Parses": [
        {
          "ParseId": "WebQTest-910.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34286) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34286 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "alexander graham bell",
          "TopicEntityName": "Alexander Graham Bell",
          "TopicEntityMid": "m.0k70",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08npx8",
              "EntityName": "Beinn Bhreagh, Nova Scotia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-920",
      "RawQuestion": "what schools did sir isaac newton go to?",
      "ProcessedQuestion": "what schools did sir isaac newton go to",
      "Parses": [
        {
          "ParseId": "WebQTest-920.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q935) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q935 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "sir isaac newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tk7",
              "EntityName": "Trinity College, Cambridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h37f2",
              "EntityName": "The King's School, Grantham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-921",
      "RawQuestion": "what was the cause of death for huell howser?",
      "ProcessedQuestion": "what was the cause of death for huell howser",
      "Parses": [
        {
          "ParseId": "WebQTest-921.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2837916) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2837916 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "huell howser",
          "TopicEntityName": "Huell Howser",
          "TopicEntityMid": "m.02kddt",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m32h",
              "EntityName": "Prostate cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-924",
      "RawQuestion": "what team did messi play for in 2010?",
      "ProcessedQuestion": "what team did messi play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-924.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q615) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q615 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "messi",
          "TopicEntityName": "Lionel Messi",
          "TopicEntityMid": "m.06qjgc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-925",
      "RawQuestion": "what time zone is greensburg indiana?",
      "ProcessedQuestion": "what time zone is greensburg indiana",
      "Parses": [
        {
          "ParseId": "WebQTest-925.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2018766) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2018766 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "greensburg indiana",
          "TopicEntityName": "Greensburg",
          "TopicEntityMid": "m.0skw_",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-929",
      "RawQuestion": "who founded the kkk?",
      "ProcessedQuestion": "who founded the kkk",
      "Parses": [
        {
          "ParseId": "WebQTest-929.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q47131) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q47131 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "kkk",
          "TopicEntityName": "Ku Klux Klan",
          "TopicEntityMid": "m.048qr",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1pl9",
              "EntityName": "John C. Lester"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1ptw",
              "EntityName": "John B. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1py6",
              "EntityName": "James R. Crowe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1pzb",
              "EntityName": "Frank O. McCord"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1q51",
              "EntityName": "Richard R. Reed"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wl1q81",
              "EntityName": "J. Calvin Jones"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-931",
      "RawQuestion": "what jobs did john adams have before he was president?",
      "ProcessedQuestion": "what jobs did john adams have before he was president",
      "Parses": [
        {
          "ParseId": "WebQTest-931.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Before. Original comment: !Manual AnswerAndPartialSparql. Comment: F Before. Original comment: F \"before\""
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { wd:Q11806 wdt:P39 ?p . ?p wdt:P39 wd:Q11696 . ?p wdt:P580 ?from . wd:Q11806 wdt:P39 ?y . ?y wdt:P39 ?x . ?y wdt:P580 ?z . filter(xsd:datetime(?z) - xsd:datetime(?from) < 0)  }",
          "PotentialTopicEntityMention": "john adams",
          "TopicEntityName": "John Adams",
          "TopicEntityMid": "m.03_js",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q_kt_",
              "EntityName": "United States Ambassador to the Netherlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hrvl",
              "EntityName": "United States Ambassador to the United Kingdom"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080v2",
              "EntityName": "Vice President of the United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09ryhrh",
              "EntityName": "Delegate to the Continental Congress"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-932",
      "RawQuestion": "what year did super mario bros 2 come out?",
      "ProcessedQuestion": "what year did super mario bros 2 come out",
      "Parses": [
        {
          "ParseId": "WebQTest-932.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q854479) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q854479 wdt:P577 ?x . } ",
          "PotentialTopicEntityMention": "super mario bros 2",
          "TopicEntityName": "Super Mario Bros. 2",
          "TopicEntityMid": "m.011v_m",
          "InferentialChain": [
            "cvg.computer_videogame.release_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1988-10",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-935",
      "RawQuestion": "where was osama bin laden killed?",
      "ProcessedQuestion": "where was osama bin laden killed",
      "Parses": [
        {
          "ParseId": "WebQTest-935.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1317 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "osama bin laden",
          "TopicEntityName": "Osama bin Laden",
          "TopicEntityMid": "m.05mg9",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011hs1",
              "EntityName": "Abbottabad"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-952",
      "RawQuestion": "what country does alaska belong to?",
      "ProcessedQuestion": "what country does alaska belong to",
      "Parses": [
        {
          "ParseId": "WebQTest-952.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q797) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q797 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "alaska",
          "TopicEntityName": "Alaska",
          "TopicEntityMid": "m.0hjy",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTest-952.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:base.locations.states_and_provences.country ?x .\n}\n",
          "PotentialTopicEntityMention": "alaska",
          "TopicEntityName": "Alaska",
          "TopicEntityMid": "m.0hjy",
          "InferentialChain": [
            "base.locations.states_and_provences.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTest-952.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0hjy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0hjy ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "alaska",
          "TopicEntityName": "Alaska",
          "TopicEntityMid": "m.0hjy",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-953",
      "RawQuestion": "where is kansas city?",
      "ProcessedQuestion": "where is kansas city",
      "Parses": [
        {
          "ParseId": "WebQTest-953.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41819) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41819 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "kansas city",
          "TopicEntityName": "Kansas City",
          "TopicEntityMid": "m.04f_d",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ndpz",
              "EntityName": "Platte County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-959",
      "RawQuestion": "who did brett gardner play for in 2008?",
      "ProcessedQuestion": "who did brett gardner play for in 2008",
      "Parses": [
        {
          "ParseId": "WebQTest-959.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q910782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q910782 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2008-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2008-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "brett gardner",
          "TopicEntityName": "Brett Gardner",
          "TopicEntityMid": "m.02px3wt",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2008-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2008-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2008-01-01",
            "End": "2008-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2008"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cqt41",
              "EntityName": "New York Yankees"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-962",
      "RawQuestion": "what county is san diego ca?",
      "ProcessedQuestion": "what county is san diego ca",
      "Parses": [
        {
          "ParseId": "WebQTest-962.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16552) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16552 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "san diego ca",
          "TopicEntityName": "San Diego",
          "TopicEntityMid": "m.071vr",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2rj",
              "EntityName": "San Diego County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-965",
      "RawQuestion": "where did anne frank go to school?",
      "ProcessedQuestion": "where did anne frank go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-965.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4583) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4583 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "anne frank",
          "TopicEntityName": "Anne Frank",
          "TopicEntityMid": "m.03d9rk",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wf8d8",
              "EntityName": "Montessori Lyceum Amsterdam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.074600n",
              "EntityName": "Jewish Lyceum"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-967",
      "RawQuestion": "what did hitler use to kill himself?",
      "ProcessedQuestion": "what did hitler use to kill himself",
      "Parses": [
        {
          "ParseId": "WebQTest-967.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qnd1b",
              "EntityName": "Ballistic trauma"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06z5s",
              "EntityName": "Suicide"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-970",
      "RawQuestion": "where was caesar when he was stabbed?",
      "ProcessedQuestion": "where was caesar when he was stabbed",
      "Parses": [
        {
          "ParseId": "WebQTest-970.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? need to know that he was stabbed to death"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1048) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1048 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "caesar",
          "TopicEntityName": "Julius Caesar",
          "TopicEntityMid": "m.041wm",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05l4p5",
              "EntityName": "Theatre of Pompey"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-971",
      "RawQuestion": "what style of music did bessie smith perform?",
      "ProcessedQuestion": "what style of music did bessie smith perform",
      "Parses": [
        {
          "ParseId": "WebQTest-971.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93349) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93349 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "bessie smith",
          "TopicEntityName": "Bessie Smith",
          "TopicEntityMid": "m.0dq47",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_d0",
              "EntityName": "Jazz"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-972",
      "RawQuestion": "what team did jackie robinson?",
      "ProcessedQuestion": "what team did jackie robinson",
      "Parses": [
        {
          "ParseId": "WebQTest-972.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? assuming all teams is a fine answer"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221048) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221048 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "jackie robinson",
          "TopicEntityName": "Jackie Robinson",
          "TopicEntityMid": "m.0443c",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_cjl",
              "EntityName": "Kansas City Monarchs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_wkh",
              "EntityName": "Montreal Royals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0413z4v",
              "EntityName": "Los Angeles Bulldogs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05fc8c9",
              "EntityName": "Brooklyn Dodgers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fbtm7",
              "EntityName": "UCLA Bruins football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-973",
      "RawQuestion": "what time zone is chicago in right now?",
      "ProcessedQuestion": "what time zone is chicago in right now",
      "Parses": [
        {
          "ParseId": "WebQTest-973.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1297) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1297 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "chicago",
          "TopicEntityName": "Chicago",
          "TopicEntityMid": "m.01_d4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-976",
      "RawQuestion": "where do the chicago white sox play home games?",
      "ProcessedQuestion": "where do the chicago white sox play home games",
      "Parses": [
        {
          "ParseId": "WebQTest-976.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q335169) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q335169 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "chicago white sox",
          "TopicEntityName": "Chicago White Sox",
          "TopicEntityMid": "m.01slc",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nwdt",
              "EntityName": "Comiskey Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yxpv",
              "EntityName": "U.S. Cellular Field"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-980",
      "RawQuestion": "where did they get the name stanley cup?",
      "ProcessedQuestion": "where did they get the name stanley cup",
      "Parses": [
        {
          "ParseId": "WebQTest-980.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211872) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211872 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "stanley cup",
          "TopicEntityName": "Stanley Cup",
          "TopicEntityMid": "m.0hn79",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q69p",
              "EntityName": "Frederick Stanley, 16th Earl of Derby"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-982",
      "RawQuestion": "what is the zip code of syracuse ny?",
      "ProcessedQuestion": "what is the zip code of syracuse ny",
      "Parses": [
        {
          "ParseId": "WebQTest-982.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128069) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128069 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "syracuse ny",
          "TopicEntityName": "Syracuse",
          "TopicEntityMid": "m.071cn",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbdx",
              "EntityName": "13261"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbfx",
              "EntityName": "13220"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbhg",
              "EntityName": "13211"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbj8",
              "EntityName": "13224"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbl7",
              "EntityName": "13215"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbq8",
              "EntityName": "13203"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020gbtz",
              "EntityName": "13202"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6mg",
              "EntityName": "13204"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6mw",
              "EntityName": "13205"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6n8",
              "EntityName": "13206"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6np",
              "EntityName": "13207"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6p2",
              "EntityName": "13208"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6ph",
              "EntityName": "13209"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6px",
              "EntityName": "13210"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6qh",
              "EntityName": "13212"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6qx",
              "EntityName": "13214"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6rh",
              "EntityName": "13219"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dv6s2",
              "EntityName": "13290"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnm_",
              "EntityName": "13244"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnmb",
              "EntityName": "13252"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnmk",
              "EntityName": "13251"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnms",
              "EntityName": "13250"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnn6",
              "EntityName": "13235"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnnf",
              "EntityName": "13225"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnnn",
              "EntityName": "13221"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnnw",
              "EntityName": "13218"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnp2",
              "EntityName": "13217"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrnp9",
              "EntityName": "13201"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h7bww4",
              "EntityName": "13244-1020"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-988",
      "RawQuestion": "who is jacob latimore?",
      "ProcessedQuestion": "who is jacob latimore",
      "Parses": [
        {
          "ParseId": "WebQTest-988.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3076630) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3076630 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jacob latimore",
          "TopicEntityName": "Jacob Latimore",
          "TopicEntityMid": "m.0521dwp",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-996",
      "RawQuestion": "where do ireland play rugby union?",
      "ProcessedQuestion": "where do ireland play rugby union",
      "Parses": [
        {
          "ParseId": "WebQTest-996.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q599903) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q599903 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "rugby union",
          "TopicEntityName": "Ireland national rugby union team",
          "TopicEntityMid": "m.03t3zk",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05h4fd2",
              "EntityName": "Aviva Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1001",
      "RawQuestion": "what country is nicki minaj from?",
      "ProcessedQuestion": "what country is nicki minaj from",
      "Parses": [
        {
          "ParseId": "WebQTest-1001.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q162202) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q162202 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "nicki minaj",
          "TopicEntityName": "Nicki Minaj",
          "TopicEntityMid": "m.047sxrj",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1014",
      "RawQuestion": "where did kim kardashian come from?",
      "ProcessedQuestion": "where did kim kardashian come from",
      "Parses": [
        {
          "ParseId": "WebQTest-1014.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q186304) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q186304 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "kim kardashian",
          "TopicEntityName": "Kim Kardashian",
          "TopicEntityMid": "m.0261x8t",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1015",
      "RawQuestion": "what town did justin bieber grew up in?",
      "ProcessedQuestion": "what town did justin bieber grew up in",
      "Parses": [
        {
          "ParseId": "WebQTest-1015.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34086) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34086 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "justin bieber",
          "TopicEntityName": "Justin Bieber",
          "TopicEntityMid": "m.06w2sn5",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gc9t",
              "EntityName": "Stratford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d060g",
              "EntityName": "Canada"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1022",
      "RawQuestion": "what country is nike based in?",
      "ProcessedQuestion": "what country is nike based in",
      "Parses": [
        {
          "ParseId": "WebQTest-1022.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q483915) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q483915 wdt:P159 ?y . ?y wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "nike",
          "TopicEntityName": "Nike, Inc.",
          "TopicEntityMid": "m.0lwkh",
          "InferentialChain": [
            "organization.organization.headquarters",
            "location.mailing_address.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1027",
      "RawQuestion": "where do the blackhawks play?",
      "ProcessedQuestion": "where do the blackhawks play",
      "Parses": [
        {
          "ParseId": "WebQTest-1027.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209636) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209636 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "blackhawks",
          "TopicEntityName": "Chicago Blackhawks",
          "TopicEntityMid": "m.0jnlm",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nshs",
              "EntityName": "United Center"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1031",
      "RawQuestion": "what has angelina jolie accomplished?",
      "ProcessedQuestion": "what has angelina jolie accomplished",
      "Parses": [
        {
          "ParseId": "WebQTest-1031.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13909) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13909 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "angelina jolie",
          "TopicEntityName": "Angelina Jolie",
          "TopicEntityMid": "m.0f4vbz",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1035",
      "RawQuestion": "what was f. scott fitzgerald?",
      "ProcessedQuestion": "what was f. scott fitzgerald",
      "Parses": [
        {
          "ParseId": "WebQTest-1035.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93354) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93354 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "f . scott fitzgerald",
          "TopicEntityName": "F. Scott Fitzgerald",
          "TopicEntityMid": "m.02zjd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1038",
      "RawQuestion": "who was wesley snipes?",
      "ProcessedQuestion": "who was wesley snipes",
      "Parses": [
        {
          "ParseId": "WebQTest-1038.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q189694) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q189694 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "wesley snipes",
          "TopicEntityName": "Wesley Snipes",
          "TopicEntityMid": "m.02lymt",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wszfz",
              "EntityName": "Martial Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1039",
      "RawQuestion": "where does sherrod brown live?",
      "ProcessedQuestion": "where does sherrod brown live",
      "Parses": [
        {
          "ParseId": "WebQTest-1039.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q381880) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q381880 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sherrod brown",
          "TopicEntityName": "Sherrod Brown",
          "TopicEntityMid": "m.034s80",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yzw7",
              "EntityName": "Avon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z18v",
              "EntityName": "Mansfield"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1044",
      "RawQuestion": "who did cristiano ronaldo play for in 2010?",
      "ProcessedQuestion": "who did cristiano ronaldo play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-1044.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1045",
      "RawQuestion": "what is the zip code for morgantown wv?",
      "ProcessedQuestion": "what is the zip code for morgantown wv",
      "Parses": [
        {
          "ParseId": "WebQTest-1045.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q653636) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q653636 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "morgantown",
          "TopicEntityName": "Morgantown",
          "TopicEntityMid": "m.010y34",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021l1w6",
              "EntityName": "26505"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dz41r",
              "EntityName": "26501"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dz42b",
              "EntityName": "26508"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9sw",
              "EntityName": "26507"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9t2",
              "EntityName": "26506"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9t9",
              "EntityName": "26504"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9tj",
              "EntityName": "26502"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1046",
      "RawQuestion": "what is jacksonville fl timezone?",
      "ProcessedQuestion": "what is jacksonville fl timezone",
      "Parses": [
        {
          "ParseId": "WebQTest-1046.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16568) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16568 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "jacksonville fl",
          "TopicEntityName": "Jacksonville",
          "TopicEntityMid": "m.0ggh3",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1048",
      "RawQuestion": "who were king henry vii children?",
      "ProcessedQuestion": "who were king henry vii children",
      "Parses": [
        {
          "ParseId": "WebQTest-1048.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q675493) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q675493 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "king henry vii",
          "TopicEntityName": "Henry VII of England",
          "TopicEntityMid": "m.03p6r",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0183g3",
              "EntityName": "Arthur, Prince of Wales"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p4twb",
              "EntityName": "Edward Tudor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p77",
              "EntityName": "Henry VIII of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_p57",
              "EntityName": "Katherine Tudor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04yss8",
              "EntityName": "Elizabeth Tudor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05c8kk",
              "EntityName": "Edmund Tudor, Duke of Somerset"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0btnbg",
              "EntityName": "Edward Tudor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c3yxg0",
              "EntityName": "Roland de Velville"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j83d",
              "EntityName": "Mary Tudor, Queen of France"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8jc",
              "EntityName": "Margaret Tudor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1051",
      "RawQuestion": "when did the san francisco earthquake occur?",
      "ProcessedQuestion": "when did the san francisco earthquake occur",
      "Parses": [
        {
          "ParseId": "WebQTest-1051.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211386) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211386 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "san francisco earthquake",
          "TopicEntityName": "1906 San Francisco earthquake",
          "TopicEntityMid": "m.01f6rm",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1906-04-18",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1052",
      "RawQuestion": "who played damien in the omen 2006?",
      "ProcessedQuestion": "who played damien in the omen 2006",
      "Parses": [
        {
          "ParseId": "WebQTest-1052.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q518863) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q518863 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q166150 . } ",
          "PotentialTopicEntityMention": "the omen 2006",
          "TopicEntityName": "The Omen",
          "TopicEntityMid": "m.07c5kt",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.09s4pt",
              "EntityName": "Damien Thorn",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05h9v7d",
              "EntityName": "Tomas Wooler"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dcshy",
              "EntityName": "Seamus Davey-Fitzpatrick"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1057",
      "RawQuestion": "what concentration camp did anne frank died in?",
      "ProcessedQuestion": "what concentration camp did anne frank died in",
      "Parses": [
        {
          "ParseId": "WebQTest-1057.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4583) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4583 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "anne frank",
          "TopicEntityName": "Anne Frank",
          "TopicEntityMid": "m.03d9rk",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0139dh",
              "EntityName": "Bergen-Belsen concentration camp"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1063",
      "RawQuestion": "where is audrey hepburn from?",
      "ProcessedQuestion": "where is audrey hepburn from",
      "Parses": [
        {
          "ParseId": "WebQTest-1063.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42786) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42786 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "audrey hepburn",
          "TopicEntityName": "Audrey Hepburn",
          "TopicEntityMid": "m.0dqcm",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06nz8h",
              "EntityName": "Ixelles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1067",
      "RawQuestion": "what school did douglas macarthur go to?",
      "ProcessedQuestion": "what school did douglas macarthur go to",
      "Parses": [
        {
          "ParseId": "WebQTest-1067.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127417 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "douglas macarthur",
          "TopicEntityName": "Douglas MacArthur",
          "TopicEntityMid": "m.0c_jc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05chz5",
              "EntityName": "TMI — The Episcopal School of Texas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07x4c",
              "EntityName": "United States Military Academy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1070",
      "RawQuestion": "what are the names of michael jackson's 3 children?",
      "ProcessedQuestion": "what are the names of michael jackson 's 3 children",
      "Parses": [
        {
          "ParseId": "WebQTest-1070.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rm4",
              "EntityName": "Paris-Michael Katherine Jackson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rmb",
              "EntityName": "Michael Joseph Jackson, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qbyj",
              "EntityName": "Prince Michael Jackson II"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1074",
      "RawQuestion": "who is lamar odom playing for this year?",
      "ProcessedQuestion": "who is lamar odom playing for this year",
      "Parses": [
        {
          "ParseId": "WebQTest-1074.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296403 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "lamar odom",
          "TopicEntityName": "Lamar Odom",
          "TopicEntityMid": "m.02_nkp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05s9mb",
              "EntityName": "Saski Baskonia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1080",
      "RawQuestion": "where did abraham and his descendants live?",
      "ProcessedQuestion": "where did abraham and his descendants live",
      "Parses": [
        {
          "ParseId": "WebQTest-1080.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9181) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9181 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "abraham",
          "TopicEntityName": "Abraham",
          "TopicEntityMid": "m.0pwb",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0524v",
              "EntityName": "Mesopotamia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9f2",
              "EntityName": "Canaan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1083",
      "RawQuestion": "where president obama was born?",
      "ProcessedQuestion": "where president obama was born",
      "Parses": [
        {
          "ParseId": "WebQTest-1083.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "president obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh0_",
              "EntityName": "Honolulu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1094",
      "RawQuestion": "who was isaac newton and what did he do?",
      "ProcessedQuestion": "who was isaac newton and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTest-1094.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q935) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q935 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "isaac newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pxg",
              "EntityName": "Chemist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1097",
      "RawQuestion": "where did michelle obama graduated from?",
      "ProcessedQuestion": "where did michelle obama graduated from",
      "Parses": [
        {
          "ParseId": "WebQTest-1097.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13133) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13133 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "michelle obama",
          "TopicEntityName": "Michelle Obama",
          "TopicEntityMid": "m.025s5v9",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zl0",
              "EntityName": "Princeton University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09rs7mx",
              "EntityName": "Whitney M. Young Magnet High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1098",
      "RawQuestion": "what kind of music did franz liszt compose?",
      "ProcessedQuestion": "what kind of music did franz liszt compose",
      "Parses": [
        {
          "ParseId": "WebQTest-1098.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41309) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41309 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "franz liszt",
          "TopicEntityName": "Life of Franz Liszt",
          "TopicEntityMid": "m.0hqgp",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06gk7",
              "EntityName": "Romantic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q6jz",
              "EntityName": "Art song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l8gh",
              "EntityName": "Chamber music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1101",
      "RawQuestion": "who is martin luther king jr facts?",
      "ProcessedQuestion": "who is martin luther king jr facts",
      "Parses": [
        {
          "ParseId": "WebQTest-1101.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010b8yqs",
              "EntityName": "Civil rights activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fhsb",
              "EntityName": "Pastor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0377kt",
              "EntityName": "Minister"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qmpf",
              "EntityName": "Humanitarian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0db79",
              "EntityName": "Clergy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1106",
      "RawQuestion": "what team does david beckham play for in 2012?",
      "ProcessedQuestion": "what team does david beckham play for in 2012",
      "Parses": [
        {
          "ParseId": "WebQTest-1106.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k2yr",
              "EntityName": "LA Galaxy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1109",
      "RawQuestion": "who did tom landry play for?",
      "ProcessedQuestion": "who did tom landry play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1109.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1374361) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1374361 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "tom landry",
          "TopicEntityName": "Tom Landry",
          "TopicEntityMid": "m.019_p3",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0118b5s5",
              "EntityName": "Texas Longhorns football"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05gg4",
              "EntityName": "New York Giants"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07342k",
              "EntityName": "New York Yankees"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1110",
      "RawQuestion": "where was john jay born?",
      "ProcessedQuestion": "where was john jay born",
      "Parses": [
        {
          "ParseId": "WebQTest-1110.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q310847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q310847 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "john jay",
          "TopicEntityName": "John Jay",
          "TopicEntityMid": "m.046cp",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1113",
      "RawQuestion": "where was toussaint l'ouverture born?",
      "ProcessedQuestion": "where was toussaint l'ouverture born",
      "Parses": [
        {
          "ParseId": "WebQTest-1113.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205783 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "toussaint l ' ouverture",
          "TopicEntityName": "Toussaint Louverture",
          "TopicEntityMid": "m.011wgw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01f5d8",
              "EntityName": "Saint-Domingue"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1115",
      "RawQuestion": "what is lawton ok zip code?",
      "ProcessedQuestion": "what is lawton ok zip code",
      "Parses": [
        {
          "ParseId": "WebQTest-1115.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q503336) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q503336 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "lawton ok",
          "TopicEntityName": "Lawton",
          "TopicEntityMid": "m.0z53k",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020qj4c",
              "EntityName": "73505"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020qj5_",
              "EntityName": "73507"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020qj55",
              "EntityName": "73501"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqg4t",
              "EntityName": "73506"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqg50",
              "EntityName": "73502"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1125",
      "RawQuestion": "what area of science did sir isaac newton study?",
      "ProcessedQuestion": "what area of science did sir isaac newton study",
      "Parses": [
        {
          "ParseId": "WebQTest-1125.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q935) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q935 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "sir isaac newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pxg",
              "EntityName": "Chemist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1126",
      "RawQuestion": "what county is san diego in?",
      "ProcessedQuestion": "what county is san diego in",
      "Parses": [
        {
          "ParseId": "WebQTest-1126.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16552) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16552 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "san diego",
          "TopicEntityName": "San Diego",
          "TopicEntityMid": "m.071vr",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2rj",
              "EntityName": "San Diego County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1126.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01n2wc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01n2wc ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "san diego",
          "TopicEntityName": "San Diego International Airport",
          "TopicEntityMid": "m.01n2wc",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2rj",
              "EntityName": "San Diego County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1132",
      "RawQuestion": "what did coretta scott king died from?",
      "ProcessedQuestion": "what did coretta scott king died from",
      "Parses": [
        {
          "ParseId": "WebQTest-1132.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230969 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "coretta scott king",
          "TopicEntityName": "Coretta Scott King",
          "TopicEntityMid": "m.0289jv",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019dmc",
              "EntityName": "Respiratory failure"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1136",
      "RawQuestion": "what religion did adolf hitler follow?",
      "ProcessedQuestion": "what religion did adolf hitler follow",
      "Parses": [
        {
          "ParseId": "WebQTest-1136.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "adolf hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lp8",
              "EntityName": "Christianity"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1142",
      "RawQuestion": "who does ronaldinho play for now 2011?",
      "ProcessedQuestion": "who does ronaldinho play for now 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-1142.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39444 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019lty",
              "EntityName": "Clube de Regatas do Flamengo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1145",
      "RawQuestion": "where did romney graduated college?",
      "ProcessedQuestion": "where did romney graduated college",
      "Parses": [
        {
          "ParseId": "WebQTest-1145.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1765120 . } ",
          "PotentialTopicEntityMention": "romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.014mlp",
              "EntityName": "Bachelor of Arts",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2tk",
              "EntityName": "Brigham Young University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1147",
      "RawQuestion": "what is the zip code for jonesboro ar?",
      "ProcessedQuestion": "what is the zip code for jonesboro ar",
      "Parses": [
        {
          "ParseId": "WebQTest-1147.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q61455) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q61455 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "jonesboro ar",
          "TopicEntityName": "Jonesboro",
          "TopicEntityMid": "m.0qskp",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z4426",
              "EntityName": "72401"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z4433",
              "EntityName": "72404"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z45mm",
              "EntityName": "72403"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqgrr",
              "EntityName": "72402"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1149",
      "RawQuestion": "when was taylor swift fearless tour?",
      "ProcessedQuestion": "when was taylor swift fearless tour",
      "Parses": [
        {
          "ParseId": "WebQTest-1149.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2419130) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2419130 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "fearless tour",
          "TopicEntityName": "Fearless Tour",
          "TopicEntityMid": "m.06w493d",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2009-04-23",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1151",
      "RawQuestion": "where did charles darwin and his wife live?",
      "ProcessedQuestion": "where did charles darwin and his wife live",
      "Parses": [
        {
          "ParseId": "WebQTest-1151.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? not sure about his wife"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1035) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1035 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "charles darwin",
          "TopicEntityName": "Charles Darwin",
          "TopicEntityMid": "m.01lwx",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0235n9",
              "EntityName": "Shrewsbury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030r7l4",
              "EntityName": "Downe, Kent"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jpl",
              "EntityName": "London"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1156",
      "RawQuestion": "what is jamie spears baby name?",
      "ProcessedQuestion": "what is jamie spears baby name",
      "Parses": [
        {
          "ParseId": "WebQTest-1156.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q55497) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q55497 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "jamie spears",
          "TopicEntityName": "Jamie Lynn Spears",
          "TopicEntityMid": "m.0p52s",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07zq7jk",
              "EntityName": "Maddie Briann Aldridge"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1166",
      "RawQuestion": "when did we start war with iraq?",
      "ProcessedQuestion": "when did we start war with iraq",
      "Parses": [
        {
          "ParseId": "WebQTest-1166.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q545449) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q545449 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "war with iraq",
          "TopicEntityName": "Iraq War",
          "TopicEntityMid": "m.0d06vc",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2003-03-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1175",
      "RawQuestion": "what does lauren conrad major in?",
      "ProcessedQuestion": "what does lauren conrad major in",
      "Parses": [
        {
          "ParseId": "WebQTest-1175.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230169) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230169 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "lauren conrad",
          "TopicEntityName": "Lauren Conrad",
          "TopicEntityMid": "m.0dq9wx",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qqd4n",
              "EntityName": "Fashion design"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1176",
      "RawQuestion": "what time zone is pennsylvania in right now?",
      "ProcessedQuestion": "what time zone is pennsylvania in right now",
      "Parses": [
        {
          "ParseId": "WebQTest-1176.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1400) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1400 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "pennsylvania",
          "TopicEntityName": "Pennsylvania",
          "TopicEntityMid": "m.05tbn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1177",
      "RawQuestion": "where did mario lopez go to school?",
      "ProcessedQuestion": "where did mario lopez go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1177.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q372559) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q372559 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "mario lopez",
          "TopicEntityName": "Mario Lopez",
          "TopicEntityMid": "m.02w5q6",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h0sx6",
              "EntityName": "Chula Vista High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1178",
      "RawQuestion": "where is tupac from originally?",
      "ProcessedQuestion": "where is tupac from originally",
      "Parses": [
        {
          "ParseId": "WebQTest-1178.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6107) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6107 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cx_2",
              "EntityName": "East Harlem"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1181",
      "RawQuestion": "what is the current time in kauai hawaii?",
      "ProcessedQuestion": "what is the current time in kauai hawaii",
      "Parses": [
        {
          "ParseId": "WebQTest-1181.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q782 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.03gh4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1181.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaiian Islands",
          "TopicEntityMid": "m.014wxc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1181.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbsn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbsn ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "kauai",
          "TopicEntityName": "Kauai",
          "TopicEntityMid": "m.0jbsn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1181.P3",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lmg4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lmg4 ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "kauai",
          "TopicEntityName": "Kauai County",
          "TopicEntityMid": "m.0lmg4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1181.P4",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.0jbt3",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1183",
      "RawQuestion": "where was farrah fawcett buried?",
      "ProcessedQuestion": "where was farrah fawcett buried",
      "Parses": [
        {
          "ParseId": "WebQTest-1183.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q102341) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q102341 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "farrah fawcett",
          "TopicEntityName": "Farrah Fawcett",
          "TopicEntityMid": "m.01j851",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018mm4",
              "EntityName": "Westwood Village Memorial Park Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1185",
      "RawQuestion": "what inspired steinbeck?",
      "ProcessedQuestion": "what inspired steinbeck",
      "Parses": [
        {
          "ParseId": "WebQTest-1185.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39212) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39212 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "steinbeck",
          "TopicEntityName": "John Steinbeck",
          "TopicEntityMid": "m.04107",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023jy9",
              "EntityName": "Sherwood Anderson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jrh",
              "EntityName": "Thomas Malory"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084w8",
              "EntityName": "William Faulkner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09482",
              "EntityName": "Robert Burns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1192",
      "RawQuestion": "where did george michael go to school?",
      "ProcessedQuestion": "where did george michael go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1192.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q130311) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q130311 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "george michael",
          "TopicEntityName": "George Michael",
          "TopicEntityMid": "m.01vvyfh",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dhpcf",
              "EntityName": "Bushey Meads School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1194",
      "RawQuestion": "what club does cristiano ronaldo play for in 2010?",
      "ProcessedQuestion": "what club does cristiano ronaldo play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-1194.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1195",
      "RawQuestion": "what time zone is in the bahamas?",
      "ProcessedQuestion": "what time zone is in the bahamas",
      "Parses": [
        {
          "ParseId": "WebQTest-1195.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q778) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q778 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "bahamas",
          "TopicEntityName": "Bahamas",
          "TopicEntityMid": "m.0160w",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1198",
      "RawQuestion": "who influenced samuel taylor coleridge?",
      "ProcessedQuestion": "who influenced samuel taylor coleridge",
      "Parses": [
        {
          "ParseId": "WebQTest-1198.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q82409) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q82409 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "samuel taylor coleridge",
          "TopicEntityName": "Samuel Taylor Coleridge",
          "TopicEntityMid": "m.078w2",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015_hb",
              "EntityName": "Giambattista Vico"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015n8",
              "EntityName": "Baruch Spinoza"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017m4j",
              "EntityName": "Thomas Browne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0182w0",
              "EntityName": "Friedrich Wilhelm Joseph Schelling"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gnng",
              "EntityName": "Emanuel Swedenborg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbs",
              "EntityName": "Immanuel Kant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0448r",
              "EntityName": "John Milton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081k8",
              "EntityName": "William Shakespeare"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09482",
              "EntityName": "Robert Burns"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nld",
              "EntityName": "Algernon Charles Swinburne"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1199",
      "RawQuestion": "what does kim kardashian work as?",
      "ProcessedQuestion": "what does kim kardashian work as",
      "Parses": [
        {
          "ParseId": "WebQTest-1199.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q186304) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q186304 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "kim kardashian",
          "TopicEntityName": "Kim Kardashian",
          "TopicEntityMid": "m.0261x8t",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqyhw",
              "EntityName": "Fashion designer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gkb0",
              "EntityName": "Socialite"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1200",
      "RawQuestion": "where did the mississippi river end?",
      "ProcessedQuestion": "where did the mississippi river end",
      "Parses": [
        {
          "ParseId": "WebQTest-1200.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1497) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1497 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "mississippi river",
          "TopicEntityName": "Mississippi River",
          "TopicEntityMid": "m.04yf_",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03f_9",
              "EntityName": "Gulf of Mexico"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1206",
      "RawQuestion": "what was francis bacon contributions?",
      "ProcessedQuestion": "what was francis bacon contributions",
      "Parses": [
        {
          "ParseId": "WebQTest-1206.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37388) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37388 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "francis bacon",
          "TopicEntityName": "Francis Bacon",
          "TopicEntityMid": "m.030dr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.125_hzb47",
              "EntityName": "Spy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1212",
      "RawQuestion": "what did mark zuckerberg study?",
      "ProcessedQuestion": "what did mark zuckerberg study",
      "Parses": [
        {
          "ParseId": "WebQTest-1212.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36215) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36215 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "mark zuckerberg",
          "TopicEntityName": "Mark Zuckerberg",
          "TopicEntityMid": "m.086dny",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mf_",
              "EntityName": "Computer programming"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mkq",
              "EntityName": "Computer Science"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qfh",
              "EntityName": "Psychology"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1215",
      "RawQuestion": "who was stephen r covey?",
      "ProcessedQuestion": "who was stephen r covey",
      "Parses": [
        {
          "ParseId": "WebQTest-1215.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313482) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313482 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "stephen r covey",
          "TopicEntityName": "Stephen Covey",
          "TopicEntityMid": "m.01jtkg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fly",
              "EntityName": "Professor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02n9jv",
              "EntityName": "Consultant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047vnfs",
              "EntityName": "Manager"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kb8h",
              "EntityName": "Motivational speaker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1219",
      "RawQuestion": "what nationality is rihanna?",
      "ProcessedQuestion": "what nationality is rihanna",
      "Parses": [
        {
          "ParseId": "WebQTest-1219.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36844) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36844 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "rihanna",
          "TopicEntityName": "Rihanna",
          "TopicEntityMid": "m.06mt91",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0162v",
              "EntityName": "Barbados"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1227",
      "RawQuestion": "what team did howie long?",
      "ProcessedQuestion": "what team did howie long",
      "Parses": [
        {
          "ParseId": "WebQTest-1227.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q962794) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q962794 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "howie long",
          "TopicEntityName": "Howie Long",
          "TopicEntityMid": "m.04jg88",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05l71",
              "EntityName": "Oakland Raiders"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0crj6pn",
              "EntityName": "Villanova Wildcats football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1229",
      "RawQuestion": "what timezone is elizabethtown kentucky?",
      "ProcessedQuestion": "what timezone is elizabethtown kentucky",
      "Parses": [
        {
          "ParseId": "WebQTest-1229.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q946319) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q946319 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "elizabethtown kentucky",
          "TopicEntityName": "Elizabethtown",
          "TopicEntityMid": "m.0tdxc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1231",
      "RawQuestion": "where is chris paul from?",
      "ProcessedQuestion": "where is chris paul from",
      "Parses": [
        {
          "ParseId": "WebQTest-1231.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46040 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "chris paul",
          "TopicEntityName": "Chris Paul",
          "TopicEntityMid": "m.0cymln",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1238",
      "RawQuestion": "who was the artist of mickey mouse?",
      "ProcessedQuestion": "who was the artist of mickey mouse",
      "Parses": [
        {
          "ParseId": "WebQTest-1238.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11934) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11934 wdt:P170 ?x . } ",
          "PotentialTopicEntityMention": "mickey mouse",
          "TopicEntityName": "Mickey Mouse",
          "TopicEntityMid": "m.057ph",
          "InferentialChain": [
            "fictional_universe.fictional_character.character_created_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081nh",
              "EntityName": "Walt Disney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2ml",
              "EntityName": "Ub Iwerks"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1239",
      "RawQuestion": "what is the zip code for concord?",
      "ProcessedQuestion": "what is the zip code for concord",
      "Parses": [
        {
          "ParseId": "WebQTest-1239.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q490441) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q490441 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "concord",
          "TopicEntityName": "Concord",
          "TopicEntityMid": "m.0qymv",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zcvrz",
              "EntityName": "94520"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zcvv5",
              "EntityName": "94521"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zcw0h",
              "EntityName": "94519"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zcwkm",
              "EntityName": "94518"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07np_n_",
              "EntityName": "94529"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07np_pf",
              "EntityName": "94527"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07np_pn",
              "EntityName": "94524"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07np_pw",
              "EntityName": "94522"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1240",
      "RawQuestion": "what football team is michael vick on?",
      "ProcessedQuestion": "what football team is michael vick on",
      "Parses": [
        {
          "ParseId": "WebQTest-1240.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505431) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505431 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michael vick",
          "TopicEntityName": "Michael Vick",
          "TopicEntityMid": "m.027f42",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g49",
              "EntityName": "New York Jets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1244",
      "RawQuestion": "who was sir walter raleigh and what did he do?",
      "ProcessedQuestion": "who was sir walter raleigh and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTest-1244.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q189144) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q189144 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "walter raleigh",
          "TopicEntityName": "Walter Raleigh",
          "TopicEntityMid": "m.084t6",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016wtf",
              "EntityName": "Sailor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01h3_3",
              "EntityName": "Courtier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.099md",
              "EntityName": "Soldier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1247",
      "RawQuestion": "who is angelina jolie?",
      "ProcessedQuestion": "who is angelina jolie",
      "Parses": [
        {
          "ParseId": "WebQTest-1247.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13909) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13909 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "angelina jolie",
          "TopicEntityName": "Angelina Jolie",
          "TopicEntityMid": "m.0f4vbz",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1252",
      "RawQuestion": "who plays eowyn in lord of the rings?",
      "ProcessedQuestion": "who plays eowyn in lord of the rings",
      "Parses": [
        {
          "ParseId": "WebQTest-1252.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131074) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131074 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q716565 . } ",
          "PotentialTopicEntityMention": "lord of the rings",
          "TopicEntityName": "The Lord of the Rings: The Return of the King",
          "TopicEntityMid": "m.017jd9",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0gynx",
              "EntityName": "Éowyn",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0294fd",
              "EntityName": "Miranda Otto"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1254",
      "RawQuestion": "where is augusta masters 2012?",
      "ProcessedQuestion": "where is augusta masters 2012",
      "Parses": [
        {
          "ParseId": "WebQTest-1254.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2204136) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2204136 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "masters 2012",
          "TopicEntityName": "2012 Masters Tournament",
          "TopicEntityMid": "m.0hrf6ww",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tk4bp",
              "EntityName": "Augusta National Golf Course"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1255",
      "RawQuestion": "what type of cancer did eva peron die from?",
      "ProcessedQuestion": "what type of cancer did eva peron die from",
      "Parses": [
        {
          "ParseId": "WebQTest-1255.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40933) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40933 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "eva peron",
          "TopicEntityName": "Eva Perón",
          "TopicEntityMid": "m.0dltj",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d_bk",
              "EntityName": "Cervical cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1256",
      "RawQuestion": "who did terrell owens play for in 2010?",
      "ProcessedQuestion": "who did terrell owens play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-1256.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1395269) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1395269 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "terrell owens",
          "TopicEntityName": "Terrell Owens",
          "TopicEntityMid": "m.027ddp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c_d",
              "EntityName": "Buffalo Bills"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01y49",
              "EntityName": "Cincinnati Bengals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.068tx8",
              "EntityName": "Texas Revolution"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1257",
      "RawQuestion": "where is denmark south carolina?",
      "ProcessedQuestion": "where is denmark south carolina",
      "Parses": [
        {
          "ParseId": "WebQTest-1257.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q936697) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q936697 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "denmark south carolina",
          "TopicEntityName": "Denmark",
          "TopicEntityMid": "m.0_kl9",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mw39",
              "EntityName": "Bamberg County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1257.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_kl9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_kl9 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "denmark south carolina",
          "TopicEntityName": "Denmark",
          "TopicEntityMid": "m.0_kl9",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06yxd",
              "EntityName": "South Carolina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mw39",
              "EntityName": "Bamberg County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1261",
      "RawQuestion": "where did the battle of passchendaele happen?",
      "ProcessedQuestion": "where did the battle of passchendaele happen",
      "Parses": [
        {
          "ParseId": "WebQTest-1261.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q426227) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q426227 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "passchendaele",
          "TopicEntityName": "Battle of Passchendaele",
          "TopicEntityMid": "m.0c3mz",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pb6l5",
              "EntityName": "Passendale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y4t",
              "EntityName": "Flanders"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1263",
      "RawQuestion": "what team is cristiano ronaldo play for?",
      "ProcessedQuestion": "what team is cristiano ronaldo play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1263.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1264",
      "RawQuestion": "what standard time is michigan?",
      "ProcessedQuestion": "what standard time is michigan",
      "Parses": [
        {
          "ParseId": "WebQTest-1264.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1166) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1166 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "michigan",
          "TopicEntityName": "Michigan",
          "TopicEntityMid": "m.04rrx",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1266",
      "RawQuestion": "what did romo do?",
      "ProcessedQuestion": "what did romo do",
      "Parses": [
        {
          "ParseId": "WebQTest-1266.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3041597) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3041597 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "romo",
          "TopicEntityName": "Sergio Romo",
          "TopicEntityMid": "m.04cyz8g",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h664g",
              "EntityName": "Baseball player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1268",
      "RawQuestion": "where did jay moriarty die?",
      "ProcessedQuestion": "where did jay moriarty die",
      "Parses": [
        {
          "ParseId": "WebQTest-1268.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3737389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3737389 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jay moriarty",
          "TopicEntityName": "Jay Moriarty",
          "TopicEntityMid": "m.04jswm8",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ty8",
              "EntityName": "Maldives"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1269",
      "RawQuestion": "where was the boston tea party 1773?",
      "ProcessedQuestion": "where was the boston tea party 1773",
      "Parses": [
        {
          "ParseId": "WebQTest-1269.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q19024) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q19024 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "boston tea party",
          "TopicEntityName": "Boston Tea Party",
          "TopicEntityMid": "m.0ccd96",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04n7kgz",
              "EntityName": "Boston Harbor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1275",
      "RawQuestion": "what does helen flanagan do?",
      "ProcessedQuestion": "what does helen flanagan do",
      "Parses": [
        {
          "ParseId": "WebQTest-1275.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5702260) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5702260 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "helen flanagan",
          "TopicEntityName": "Helen Flanagan",
          "TopicEntityMid": "m.087k1_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1281",
      "RawQuestion": "where did kate gosselin grew up?",
      "ProcessedQuestion": "where did kate gosselin grew up",
      "Parses": [
        {
          "ParseId": "WebQTest-1281.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2618072) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2618072 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "kate gosselin",
          "TopicEntityName": "Kate Gosselin",
          "TopicEntityMid": "m.05qbc_9",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dclg",
              "EntityName": "Philadelphia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1289",
      "RawQuestion": "what type of music did mozart composed?",
      "ProcessedQuestion": "what type of music did mozart composed",
      "Parses": [
        {
          "ParseId": "WebQTest-1289.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q254) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q254 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "mozart",
          "TopicEntityName": "Wolfgang Amadeus Mozart",
          "TopicEntityMid": "m.082db",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021dvj",
              "EntityName": "Ballet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q6jz",
              "EntityName": "Art song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l8gh",
              "EntityName": "Chamber music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1291",
      "RawQuestion": "how many kids were there in the kennedy family?",
      "ProcessedQuestion": "how many kids were there in the kennedy family",
      "Parses": [
        {
          "ParseId": "WebQTest-1291.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313696 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "kennedy family",
          "TopicEntityName": "Joseph P. Kennedy, Sr.",
          "TopicEntityMid": "m.01qlg1",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0194xc",
              "EntityName": "Ted Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kyns",
              "EntityName": "Rosemary Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020t1x",
              "EntityName": "Joseph P. Kennedy, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028qh_",
              "EntityName": "Jean Kennedy Smith"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f1nm",
              "EntityName": "Kathleen Cavendish"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f1qs",
              "EntityName": "Patricia Kennedy Lawford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06hx2",
              "EntityName": "Robert F. Kennedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bt9c",
              "EntityName": "Eunice Kennedy Shriver"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d3k14",
              "EntityName": "John F. Kennedy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1296",
      "RawQuestion": "what was scottie pippen known for?",
      "ProcessedQuestion": "what was scottie pippen known for",
      "Parses": [
        {
          "ParseId": "WebQTest-1296.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q193637) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q193637 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "scottie pippen",
          "TopicEntityName": "Scottie Pippen",
          "TopicEntityMid": "m.01vpgl",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h664x",
              "EntityName": "Basketball player"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1298",
      "RawQuestion": "what does george wilson do for a living?",
      "ProcessedQuestion": "what does george wilson do for a living",
      "Parses": [
        {
          "ParseId": "WebQTest-1298.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5546416) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5546416 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "george wilson",
          "TopicEntityName": "George Wilson",
          "TopicEntityMid": "m.0gmk9p",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1305",
      "RawQuestion": "what awards did marilyn monroe won?",
      "ProcessedQuestion": "what awards did marilyn monroe won",
      "Parses": [
        {
          "ParseId": "WebQTest-1305.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4616 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "marilyn monroe",
          "TopicEntityName": "Marilyn Monroe",
          "TopicEntityMid": "m.04wqr",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019f6s",
              "EntityName": "Golden Globe Award for Best Actress – Motion Picture – Musical or Comedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kgb7",
              "EntityName": "Playboy Playmate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c1fs8r",
              "EntityName": "David di Donatello Golden Plate Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l_d69j",
              "EntityName": "Golden Globe Henrietta Award for World Film Favorites"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1311",
      "RawQuestion": "what was antoni gaudi inspired by?",
      "ProcessedQuestion": "what was antoni gaudi inspired by",
      "Parses": [
        {
          "ParseId": "WebQTest-1311.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25328) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25328 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "antoni gaudi",
          "TopicEntityName": "Antoni Gaudí",
          "TopicEntityMid": "m.0yb0",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02mpv",
              "EntityName": "Eugène Viollet-le-Duc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08304",
              "EntityName": "William Morris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1319",
      "RawQuestion": "who has pudge rodriguez played for?",
      "ProcessedQuestion": "who has pudge rodriguez played for",
      "Parses": [
        {
          "ParseId": "WebQTest-1319.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q706908) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q706908 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "pudge rodriguez",
          "TopicEntityName": "Iván Rodríguez",
          "TopicEntityMid": "m.02p6g7",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02__x",
              "EntityName": "Miami Marlins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d02",
              "EntityName": "Detroit Tigers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l8x",
              "EntityName": "Texas Rangers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1320",
      "RawQuestion": "what is the milwaukee brewers stadium called?",
      "ProcessedQuestion": "what is the milwaukee brewers stadium called",
      "Parses": [
        {
          "ParseId": "WebQTest-1320.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q848103) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q848103 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "milwaukee brewers",
          "TopicEntityName": "Milwaukee Brewers",
          "TopicEntityMid": "m.051vz",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.038br5",
              "EntityName": "Miller Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1321",
      "RawQuestion": "where did the gallipoli war take place?",
      "ProcessedQuestion": "where did the gallipoli war take place",
      "Parses": [
        {
          "ParseId": "WebQTest-1321.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q164983) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q164983 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "gallipoli",
          "TopicEntityName": "Gallipoli Campaign",
          "TopicEntityMid": "m.01fc7p",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03czv",
              "EntityName": "Gallipoli"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1329",
      "RawQuestion": "who played bilbo in the fellowship of the ring?",
      "ProcessedQuestion": "who played bilbo in the fellowship of the ring",
      "Parses": [
        {
          "ParseId": "WebQTest-1329.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127367) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127367 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q185737 . } ",
          "PotentialTopicEntityMention": "the fellowship of the ring",
          "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
          "TopicEntityMid": "m.017gl1",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0g6z1",
              "EntityName": "Old Bilbo",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016zp5",
              "EntityName": "Ian Holm"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1329.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g6z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g6z1 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
          "PotentialTopicEntityMention": "bilbo",
          "TopicEntityName": "Old Bilbo",
          "TopicEntityMid": "m.0g6z1",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.017gl1",
              "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016zp5",
              "EntityName": "Ian Holm"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1332",
      "RawQuestion": "when does the vietnam war end?",
      "ProcessedQuestion": "when does the vietnam war end",
      "Parses": [
        {
          "ParseId": "WebQTest-1332.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8740) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8740 wdt:P582 ?x . } ",
          "PotentialTopicEntityMention": "vietnam war",
          "TopicEntityName": "Vietnam War",
          "TopicEntityMid": "m.07_nf",
          "InferentialChain": [
            "time.event.end_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1975-04-30",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1333",
      "RawQuestion": "where does the tennessee river go?",
      "ProcessedQuestion": "where does the tennessee river go",
      "Parses": [
        {
          "ParseId": "WebQTest-1333.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? could also mean where it flows"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q193737) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q193737 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "tennessee river",
          "TopicEntityName": "Tennessee River",
          "TopicEntityMid": "m.01spb0",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lx3",
              "EntityName": "Ohio River"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1339",
      "RawQuestion": "what team does jeremy lin play for 2013?",
      "ProcessedQuestion": "what team does jeremy lin play for 2013",
      "Parses": [
        {
          "ParseId": "WebQTest-1339.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q309590) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q309590 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jeremy lin",
          "TopicEntityName": "Jeremy Lin",
          "TopicEntityMid": "m.09k72lh",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmfb",
              "EntityName": "Houston Rockets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1340",
      "RawQuestion": "what is steve nash nationality?",
      "ProcessedQuestion": "what is steve nash nationality",
      "Parses": [
        {
          "ParseId": "WebQTest-1340.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192955) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192955 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "steve nash",
          "TopicEntityName": "Steve Nash",
          "TopicEntityMid": "m.01yqrk",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d060g",
              "EntityName": "Canada"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1343",
      "RawQuestion": "what degree did martin luther king earn?",
      "ProcessedQuestion": "what degree did martin luther king earn",
      "Parses": [
        {
          "ParseId": "WebQTest-1343.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014mlp",
              "EntityName": "Bachelor of Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zx3q1",
              "EntityName": "PhD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vjnk",
              "EntityName": "Bachelor of Divinity"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.079h0",
              "EntityName": "Secondary education"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1350",
      "RawQuestion": "what did jesse owens won?",
      "ProcessedQuestion": "what did jesse owens won",
      "Parses": [
        {
          "ParseId": "WebQTest-1350.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q52651) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q52651 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "jesse owens",
          "TopicEntityName": "Jesse Owens",
          "TopicEntityMid": "m.0cmr3",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kc5dv",
              "EntityName": "Associated Press Male Athlete of the Year"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1353",
      "RawQuestion": "what are the four nations of the united kingdom?",
      "ProcessedQuestion": "what are the four nations of the united kingdom",
      "Parses": [
        {
          "ParseId": "WebQTest-1353.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P150 ?x . } ",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1353.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.first_level_divisions ?x .\n}\n",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.country.first_level_divisions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1355",
      "RawQuestion": "what school did robert f kennedy go to?",
      "ProcessedQuestion": "what school did robert f kennedy go to",
      "Parses": [
        {
          "ParseId": "WebQTest-1355.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25310) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25310 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "robert f kennedy",
          "TopicEntityName": "Robert F. Kennedy",
          "TopicEntityMid": "m.06hx2",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mpwj",
              "EntityName": "Harvard College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vc5m",
              "EntityName": "Bates College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h45k",
              "EntityName": "Milton Academy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ksy",
              "EntityName": "Harvard University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qgd9",
              "EntityName": "University of Virginia School of Law"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g8rj",
              "EntityName": "University of Virginia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1356",
      "RawQuestion": "what drug killed marilyn monroe?",
      "ProcessedQuestion": "what drug killed marilyn monroe",
      "Parses": [
        {
          "ParseId": "WebQTest-1356.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4616 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "marilyn monroe",
          "TopicEntityName": "Marilyn Monroe",
          "TopicEntityMid": "m.04wqr",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwj2gf",
              "EntityName": "Barbiturate overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1358",
      "RawQuestion": "what is los angeles california time zone?",
      "ProcessedQuestion": "what is los angeles california time zone",
      "Parses": [
        {
          "ParseId": "WebQTest-1358.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q65) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q65 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "los angeles california",
          "TopicEntityName": "Los Angeles",
          "TopicEntityMid": "m.030qb3t",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1359",
      "RawQuestion": "what did nicolas cage name his son?",
      "ProcessedQuestion": "what did nicolas cage name his son",
      "Parses": [
        {
          "ParseId": "WebQTest-1359.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42869) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42869 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "nicolas cage",
          "TopicEntityName": "Nicolas Cage",
          "TopicEntityMid": "m.01vvb4m",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03jnwc9",
              "EntityName": "Kal-El Coppola Cage"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gfhlgk",
              "EntityName": "Weston Coppola Cage"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1365",
      "RawQuestion": "what did john dalton study?",
      "ProcessedQuestion": "what did john dalton study",
      "Parses": [
        {
          "ParseId": "WebQTest-1365.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41284) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41284 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "john dalton",
          "TopicEntityName": "John Dalton",
          "TopicEntityMid": "m.0c0x7",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pxg",
              "EntityName": "Chemist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1368",
      "RawQuestion": "who formed the american federation of labor?",
      "ProcessedQuestion": "who formed the american federation of labor",
      "Parses": [
        {
          "ParseId": "WebQTest-1368.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464242) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464242 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "american federation of labor",
          "TopicEntityName": "American Federation of Labor",
          "TopicEntityMid": "m.01z4fn",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w91b",
              "EntityName": "Samuel Gompers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1370",
      "RawQuestion": "where did thomas hobbes live?",
      "ProcessedQuestion": "where did thomas hobbes live",
      "Parses": [
        {
          "ParseId": "WebQTest-1370.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37621) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37621 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "thomas hobbes",
          "TopicEntityName": "Thomas Hobbes",
          "TopicEntityMid": "m.07c37",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qtj",
              "EntityName": "Paris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1373",
      "RawQuestion": "where was john f kennedy when he got shot?",
      "ProcessedQuestion": "where was john f kennedy when he got shot",
      "Parses": [
        {
          "ParseId": "WebQTest-1373.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "john f kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2rq",
              "EntityName": "Dallas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1379",
      "RawQuestion": "what did franz liszt do to earn a living?",
      "ProcessedQuestion": "what did franz liszt do to earn a living",
      "Parses": [
        {
          "ParseId": "WebQTest-1379.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41309) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41309 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "franz liszt",
          "TopicEntityName": "Life of Franz Liszt",
          "TopicEntityMid": "m.0hqgp",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cmdm",
              "EntityName": "Virtuoso"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vyk",
              "EntityName": "Pianist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xjb",
              "EntityName": "Priest"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1380",
      "RawQuestion": "what was nikola tesla known for?",
      "ProcessedQuestion": "what was nikola tesla known for",
      "Parses": [
        {
          "ParseId": "WebQTest-1380.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9036) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9036 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "nikola tesla",
          "TopicEntityName": "Nikola Tesla",
          "TopicEntityMid": "m.05d1y",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgx0",
              "EntityName": "Electrical engineer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04q69_",
              "EntityName": "Futurist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07s7r2",
              "EntityName": "Mechanical Engineer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1381",
      "RawQuestion": "what is the zip code for princeton nj?",
      "ProcessedQuestion": "what is the zip code for princeton nj",
      "Parses": [
        {
          "ParseId": "WebQTest-1381.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q138518) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q138518 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "princeton nj",
          "TopicEntityName": "Princeton",
          "TopicEntityMid": "m.0ljsz",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02070mv",
              "EntityName": "08542"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02070pc",
              "EntityName": "08540"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03n_q9c",
              "EntityName": "08543"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtr1",
              "EntityName": "08544"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtr8",
              "EntityName": "08541"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sgmmm",
              "EntityName": "08542-4511"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zscz9w",
              "EntityName": "08540-6449"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1387",
      "RawQuestion": "what time zone is toronto gmt?",
      "ProcessedQuestion": "what time zone is toronto gmt",
      "Parses": [
        {
          "ParseId": "WebQTest-1387.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q172) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q172 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "toronto",
          "TopicEntityName": "Toronto",
          "TopicEntityMid": "m.0h7h6",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1388",
      "RawQuestion": "what country did toussaint l'ouverture help free?",
      "ProcessedQuestion": "what country did toussaint l'ouverture help free",
      "Parses": [
        {
          "ParseId": "WebQTest-1388.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205783 wdt:P241 ?y . ?y wdt:P241 ?x . } ",
          "PotentialTopicEntityMention": "toussaint l ' ouverture",
          "TopicEntityName": "Toussaint Louverture",
          "TopicEntityMid": "m.011wgw",
          "InferentialChain": [
            "military.military_person.service",
            "military.military_service.military_force"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wf01",
              "EntityName": "French Army"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0410mhq",
              "EntityName": "Haitian Rebellion of 1891"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09b63n",
              "EntityName": "French Revolutionary Army"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1389",
      "RawQuestion": "what jobs did robert burns have?",
      "ProcessedQuestion": "what jobs did robert burns have",
      "Parses": [
        {
          "ParseId": "WebQTest-1389.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81960) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81960 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "robert burns",
          "TopicEntityName": "Robert Burns",
          "TopicEntityMid": "m.09482",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0knj1",
              "EntityName": "Bard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1410",
      "RawQuestion": "what did st. nicholas do in his life?",
      "ProcessedQuestion": "what did st. nicholas do in his life",
      "Parses": [
        {
          "ParseId": "WebQTest-1410.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44269) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44269 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "st . nicholas",
          "TopicEntityName": "Saint Nicholas",
          "TopicEntityMid": "m.0f9q7",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027k49j",
              "EntityName": "Bishop"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1414",
      "RawQuestion": "what happened to pope john paul ii?",
      "ProcessedQuestion": "what happened to pope john paul ii",
      "Parses": [
        {
          "ParseId": "WebQTest-1414.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q989) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q989 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "john paul ii",
          "TopicEntityName": "Pope John Paul II",
          "TopicEntityMid": "m.05yfx",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g02vk",
              "EntityName": "Parkinson's disease"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1419",
      "RawQuestion": "what inspired michelangelo buonarroti?",
      "ProcessedQuestion": "what inspired michelangelo buonarroti",
      "Parses": [
        {
          "ParseId": "WebQTest-1419.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5592) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5592 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "michelangelo buonarroti",
          "TopicEntityName": "Michelangelo",
          "TopicEntityMid": "m.058w5",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013w_3",
              "EntityName": "Giovanni Pico della Mirandola"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cc3w",
              "EntityName": "Domenico Ghirlandaio"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04qj5",
              "EntityName": "Lorenzo de' Medici"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072cpw",
              "EntityName": "Melozzo da Forlì"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8wb",
              "EntityName": "Girolamo Savonarola"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j56d",
              "EntityName": "Donatello"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1426",
      "RawQuestion": "where is ibrahim afellay from?",
      "ProcessedQuestion": "where is ibrahim afellay from",
      "Parses": [
        {
          "ParseId": "WebQTest-1426.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165014) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165014 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "ibrahim afellay",
          "TopicEntityName": "Ibrahim Afellay",
          "TopicEntityMid": "m.08w78j",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9s5",
              "EntityName": "Utrecht"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1432",
      "RawQuestion": "what places are in the west midlands?",
      "ProcessedQuestion": "what places are in the west midlands",
      "Parses": [
        {
          "ParseId": "WebQTest-1432.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23124) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23124 wdt:P150 ?x . } ",
          "PotentialTopicEntityMention": "west midlands",
          "TopicEntityName": "West Midlands",
          "TopicEntityMid": "m.0dyjz",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ycxx",
              "EntityName": "Sandwell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0257kt",
              "EntityName": "Metropolitan Borough of Dudley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z8_s",
              "EntityName": "Metropolitan Borough of Solihull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5_3",
              "EntityName": "Coventry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k33p",
              "EntityName": "Birmingham"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1432.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dyjz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dyjz ns:location.location.contains ?x .\n}\n",
          "PotentialTopicEntityMention": "west midlands",
          "TopicEntityName": "West Midlands",
          "TopicEntityMid": "m.0dyjz",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0117_7xz",
              "EntityName": "Redhill School, Stourbridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012vtmd1",
              "EntityName": "Moor Pool"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017zt4",
              "EntityName": "Moseley and Kings Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dvc5",
              "EntityName": "Aston University, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kcxp",
              "EntityName": "Earlsdon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01m4pc",
              "EntityName": "Walsall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n244",
              "EntityName": "West Bromwich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nh1c",
              "EntityName": "Dudley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01p7jr",
              "EntityName": "Tipton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ybv0",
              "EntityName": "Aston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yc0s",
              "EntityName": "Smethwick"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ycw7",
              "EntityName": "Wednesbury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ycxx",
              "EntityName": "Sandwell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ycyp",
              "EntityName": "Oldbury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ycz1",
              "EntityName": "Rowley Regis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z66c",
              "EntityName": "Aldridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020_47",
              "EntityName": "Blackheath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206f5",
              "EntityName": "Bilston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021r42",
              "EntityName": "Birmingham City University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023c29",
              "EntityName": "Willenhall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023wkp",
              "EntityName": "Halesowen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.024q9r",
              "EntityName": "Knowle, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0256py",
              "EntityName": "Stourbridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0257kt",
              "EntityName": "Metropolitan Borough of Dudley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025x_q9",
              "EntityName": "Stourton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026_qm2",
              "EntityName": "City College, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027g9sd",
              "EntityName": "Rushall, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0284zkf",
              "EntityName": "Woodcross"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.029ht2",
              "EntityName": "Brierley Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.029hv3",
              "EntityName": "Brownhills"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bnwq",
              "EntityName": "Hampton-in-Arden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j17x",
              "EntityName": "Metropolitan Borough of Walsall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02n7wd",
              "EntityName": "Edgbaston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p9rp_",
              "EntityName": "Hamstead, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q1g5",
              "EntityName": "Kingstanding"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rmthq",
              "EntityName": "Stone Cross, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02th3k",
              "EntityName": "Sedgley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w1dv",
              "EntityName": "Handsworth, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w5_6",
              "EntityName": "Harborne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wgjc",
              "EntityName": "Soho, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x6_mr",
              "EntityName": "Oakham, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x9_vp",
              "EntityName": "Walsall Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x9kq6",
              "EntityName": "Brades Village"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z8_s",
              "EntityName": "Metropolitan Borough of Solihull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02zd_x",
              "EntityName": "Bournville"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0306tx",
              "EntityName": "Hall Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v12",
              "EntityName": "Northfield, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v1t",
              "EntityName": "Kings Norton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v3x",
              "EntityName": "Erdington"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v5c",
              "EntityName": "Perry Barr"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v5q",
              "EntityName": "Selly Oak"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v61",
              "EntityName": "Sparkbrook"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030v6r",
              "EntityName": "Acocks Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0316qm",
              "EntityName": "Ladywood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0316sc",
              "EntityName": "Hodge Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.031g2z",
              "EntityName": "Meriden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0343ls",
              "EntityName": "Coventry University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035bgr",
              "EntityName": "New Frankley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035x9c",
              "EntityName": "Sutton Trinity"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0377rp",
              "EntityName": "Barr Beacon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cx_nw",
              "EntityName": "Lyndon School, Solihull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03g7tr",
              "EntityName": "Bloxwich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gdmy",
              "EntityName": "Wylde Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gdn8",
              "EntityName": "Boldmere"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gdr0",
              "EntityName": "Bartley Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gds2",
              "EntityName": "Billesley, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gdss",
              "EntityName": "Bordesley Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gdzj",
              "EntityName": "Castle Vale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gfj0",
              "EntityName": "Compton, Wolverhampton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gfjq",
              "EntityName": "Wednesfield"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gg8n",
              "EntityName": "Rednal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gg9c",
              "EntityName": "Quinton, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gg9q",
              "EntityName": "Shard End"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ggh3",
              "EntityName": "Tyburn, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ggrl",
              "EntityName": "Washwood Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ggry",
              "EntityName": "Stockland Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ggv2",
              "EntityName": "West Heath, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gnpd",
              "EntityName": "Shirley, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gnsj",
              "EntityName": "Castle Bromwich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gqy2",
              "EntityName": "Great Barr"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hh05h",
              "EntityName": "Alumwell Business and Enterprise College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hjtd",
              "EntityName": "Tettenhall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hqtr",
              "EntityName": "South Yardley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03jsf4",
              "EntityName": "Darlaston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m6rjj",
              "EntityName": "Clayhanger, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03mcnp8",
              "EntityName": "Dovecotes"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03nvxqf",
              "EntityName": "Chapelfields"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ph11",
              "EntityName": "Streetly"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03q29q",
              "EntityName": "Ashmore Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03t_q3",
              "EntityName": "Kingswinford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wcm3l",
              "EntityName": "City College Coventry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.044bnj",
              "EntityName": "Kings Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04b0mq",
              "EntityName": "Chelmsley Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04g15m",
              "EntityName": "Tividale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04g96p",
              "EntityName": "Amblecote"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04g9c7",
              "EntityName": "Coseley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lf5c_",
              "EntityName": "Tudor Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lfx53",
              "EntityName": "Allesley Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04rnyj",
              "EntityName": "Pensnett"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04y7fk4",
              "EntityName": "Druids Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ygj57",
              "EntityName": "Yardley Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ygwp6",
              "EntityName": "Selly Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zbvx",
              "EntityName": "Brandhall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zbwz",
              "EntityName": "Cradley Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050pzt",
              "EntityName": "Balsall Common"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0533n4",
              "EntityName": "Oxley, Wolverhampton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cdr6",
              "EntityName": "Hockley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05ch9q",
              "EntityName": "Blakenhall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05chbr",
              "EntityName": "Bushbury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05d71w",
              "EntityName": "Walmley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05dy1k",
              "EntityName": "Bradley, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mts_",
              "EntityName": "Blakenall Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mwqyl",
              "EntityName": "Aston Ramsden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q6fc8",
              "EntityName": "Ashted"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vn47",
              "EntityName": "Weoley Castle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060vvx",
              "EntityName": "Marston Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063c1n",
              "EntityName": "Lozells and East Handsworth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063cc8",
              "EntityName": "Handsworth Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063cg3",
              "EntityName": "Oscott"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063d7q",
              "EntityName": "Sutton Vesey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06dvdx",
              "EntityName": "Jewellery Quarter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06gqm1",
              "EntityName": "Longbridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06gv5j",
              "EntityName": "Sutton New Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06gv95",
              "EntityName": "Sutton Four Oaks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06h8dk",
              "EntityName": "Stechford and Yardley North"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06h8j1",
              "EntityName": "Sheldon, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rm0d",
              "EntityName": "Whitmore Reans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.070cy8",
              "EntityName": "Nechells"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.071m_f",
              "EntityName": "Barston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07212d",
              "EntityName": "Bournbrook"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07f0ct",
              "EntityName": "Dorridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qbhz",
              "EntityName": "Castlecroft"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07r242",
              "EntityName": "Park Village"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07r9fk",
              "EntityName": "Dunstall Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07rbqz",
              "EntityName": "Merridale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07rm1d",
              "EntityName": "Pendeford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07rmbm",
              "EntityName": "Fordhouses"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07rmfq",
              "EntityName": "Low Hill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07sxsn",
              "EntityName": "Cheylesmore"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07xy5s",
              "EntityName": "Great Bridge, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07zql4",
              "EntityName": "Olton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.088ff3",
              "EntityName": "Bearwood, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.089qnv",
              "EntityName": "Wollaston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08lvpr",
              "EntityName": "Wordsley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08pbr_",
              "EntityName": "The Sixth Form College, Solihull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzd1",
              "EntityName": "Allesley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzm3",
              "EntityName": "Fordbridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzpl",
              "EntityName": "Bickenhill"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzqz",
              "EntityName": "Kingshurst"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzrn",
              "EntityName": "Smith's Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzvv",
              "EntityName": "Hockley Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08rzwj",
              "EntityName": "Berkswell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08w9nc",
              "EntityName": "King Edward VI College, Stourbridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.095gf0",
              "EntityName": "Quarry Bank"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09711x",
              "EntityName": "Catherine-de-Barnes"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.097149",
              "EntityName": "Chadwick End"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.097j_f",
              "EntityName": "Lye"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09mx_1",
              "EntityName": "Netherton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09v285l",
              "EntityName": "Gornal, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b8mhx",
              "EntityName": "Pelsall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbtlf9",
              "EntityName": "City of Wolverhampton College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbwzs0",
              "EntityName": "Bishopgate Green"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbx9zg",
              "EntityName": "Bromford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbyw2f",
              "EntityName": "Blossomfield"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bbz7lw",
              "EntityName": "Brownhills West"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bzbk3",
              "EntityName": "Turners Hill, West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c3gk9",
              "EntityName": "Saltley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5_3",
              "EntityName": "Coventry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5h2h",
              "EntityName": "Springfield, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5psw",
              "EntityName": "Brandwood End"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cp4b7l",
              "EntityName": "Lode Heath School and Specialist College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy2l4v",
              "EntityName": "Walsall College, Wisemore campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy2l54",
              "EntityName": "Walsall College, Green Lane campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cyfpq1",
              "EntityName": "Sandwell College, Smethwick"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cyfpqc",
              "EntityName": "Sandwell College, West Bromwich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cyfpqp",
              "EntityName": "Sandwell College, Oldbury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ddbm5q",
              "EntityName": "California, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dkdpjv",
              "EntityName": "University of Wolverhampton, City Campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dkdpjy",
              "EntityName": "University of Wolverhampton, Compton Park Campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dkdpk3",
              "EntityName": "University of Wolverhampton, Walsall Campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f3ys2",
              "EntityName": "Solihull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fd1jx",
              "EntityName": "St Francis of Assisi Catholic Technology College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggskz",
              "EntityName": "The Public, West Bromwich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gmf052",
              "EntityName": "Chad Valley, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gq3sw",
              "EntityName": "Radford, Coventry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gr4_0",
              "EntityName": "Dudley College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h7j4d",
              "EntityName": "Wall Heath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h96bwj",
              "EntityName": "Norton, Dudley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hhszd1",
              "EntityName": "Stowheath"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hhw1jn",
              "EntityName": "Gorsebrook"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hnbb49",
              "EntityName": "Horseley Fields"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j3gsx1",
              "EntityName": "Woodsetton, Dudley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jkygbt",
              "EntityName": "Scotlands Estate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jt58vy",
              "EntityName": "Brandwood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k33p",
              "EntityName": "Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k5p1",
              "EntityName": "Wolverhampton"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1432.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z8x0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z8x0 ns:location.location.contains ?x .\n}\n",
          "PotentialTopicEntityMention": "west midlands",
          "TopicEntityName": "West Midlands",
          "TopicEntityMid": "m.01z8x0",
          "InferentialChain": [
            "location.location.contains"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010r7psx",
              "EntityName": "Patton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010x6wn0",
              "EntityName": "Middleton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017cjb",
              "EntityName": "Stoke-on-Trent"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rvhz",
              "EntityName": "Telford and Wrekin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020797",
              "EntityName": "Redditch"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021y1s",
              "EntityName": "Warwickshire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023qkf",
              "EntityName": "Herefordshire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j17x",
              "EntityName": "Metropolitan Borough of Walsall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m3r_t",
              "EntityName": "Aston Business School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084_f",
              "EntityName": "Worcestershire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b73vd4",
              "EntityName": "Mary Arden's Farm"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cz1pp8",
              "EntityName": "National School of Blacksmithing, Holme Lacy campus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dm0f",
              "EntityName": "Shropshire"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dyjz",
              "EntityName": "West Midlands"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g14f",
              "EntityName": "Staffordshire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1435",
      "RawQuestion": "who did kurt warner play 4?",
      "ProcessedQuestion": "who did kurt warner play 4",
      "Parses": [
        {
          "ParseId": "WebQTest-1435.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q945750) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q945750 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "kurt warner",
          "TopicEntityName": "Kurt Warner",
          "TopicEntityMid": "m.025j0c",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y5f_",
              "EntityName": "Amsterdam Admirals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m3x9z",
              "EntityName": "Northern Iowa Panthers football"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bd9b5",
              "EntityName": "Iowa Barnstormers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05gg4",
              "EntityName": "New York Giants"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06x76",
              "EntityName": "St. Louis Rams"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws7",
              "EntityName": "Arizona Cardinals"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1441",
      "RawQuestion": "where all did picasso live?",
      "ProcessedQuestion": "where all did picasso live",
      "Parses": [
        {
          "ParseId": "WebQTest-1441.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5593) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5593 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "picasso",
          "TopicEntityName": "Pablo Picasso",
          "TopicEntityMid": "m.060_7",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01978d",
              "EntityName": "Málaga"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056_y",
              "EntityName": "Madrid"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f8l9c",
              "EntityName": "France"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1443",
      "RawQuestion": "what team is raul ibanez on?",
      "ProcessedQuestion": "what team is raul ibanez on",
      "Parses": [
        {
          "ParseId": "WebQTest-1443.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1132012) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1132012 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "raul ibanez",
          "TopicEntityName": "Raúl Ibañez",
          "TopicEntityMid": "m.06xvwt",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.049n7",
              "EntityName": "Kansas City Royals"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1446",
      "RawQuestion": "what year did jimmy the rev sullivan die?",
      "ProcessedQuestion": "what year did jimmy the rev sullivan die",
      "Parses": [
        {
          "ParseId": "WebQTest-1446.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1057003) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1057003 wdt:P570 ?x . } ",
          "PotentialTopicEntityMention": "jimmy the rev sullivan",
          "TopicEntityName": "The Rev",
          "TopicEntityMid": "m.025sf_8",
          "InferentialChain": [
            "people.deceased_person.date_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2009-12-28",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1447",
      "RawQuestion": "who plays anakin skywalker in star wars 1?",
      "ProcessedQuestion": "who plays anakin skywalker in star wars 1",
      "Parses": [
        {
          "ParseId": "WebQTest-1447.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165713) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165713 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "star wars 1",
          "TopicEntityName": "Star Wars Episode I: The Phantom Menace",
          "TopicEntityMid": "m.0ddt_",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1447.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddt_ .\n}\n",
          "PotentialTopicEntityMention": "anakin skywalker",
          "TopicEntityName": "Darth Vader",
          "TopicEntityMid": "m.0f2y0",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0ddt_",
              "EntityName": "Star Wars Episode I: The Phantom Menace",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1448",
      "RawQuestion": "where does michelle pfeiffer live now?",
      "ProcessedQuestion": "where does michelle pfeiffer live now",
      "Parses": [
        {
          "ParseId": "WebQTest-1448.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q159778) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q159778 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michelle pfeiffer",
          "TopicEntityName": "Michelle Pfeiffer",
          "TopicEntityMid": "m.0gx_p",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cb4j",
              "EntityName": "Orange County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1449",
      "RawQuestion": "what was laura ingalls wilder famous for?",
      "ProcessedQuestion": "what was laura ingalls wilder famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-1449.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q237514) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q237514 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "laura ingalls wilder",
          "TopicEntityName": "Laura Ingalls Wilder",
          "TopicEntityMid": "m.01bt87",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1452",
      "RawQuestion": "where is dwight howard now?",
      "ProcessedQuestion": "where is dwight howard now",
      "Parses": [
        {
          "ParseId": "WebQTest-1452.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25278) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25278 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "dwight howard",
          "TopicEntityName": "Dwight Howard",
          "TopicEntityMid": "m.02fg_f",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmfb",
              "EntityName": "Houston Rockets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1454",
      "RawQuestion": "where did madonna grew up?",
      "ProcessedQuestion": "where did madonna grew up",
      "Parses": [
        {
          "ParseId": "WebQTest-1454.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1744) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1744 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "madonna",
          "TopicEntityName": "Madonna",
          "TopicEntityMid": "m.01vs_v8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v1xg",
              "EntityName": "Bay City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1458",
      "RawQuestion": "who owns chrysler corporation 2011?",
      "ProcessedQuestion": "who owns chrysler corporation 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-1458.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q181114) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q181114 wdt:P749 ?y . ?y wdt:P749 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "chrysler corporation",
          "TopicEntityName": "Chrysler Group LLC",
          "TopicEntityMid": "m.01_bp",
          "InferentialChain": [
            "organization.organization.parent",
            "organization.organization_relationship.parent"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "organization.organization_relationship.to",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "organization.organization_relationship.from",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_gywj9",
              "EntityName": "Fiat Chrysler Automobiles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01bqks",
              "EntityName": "Federal government of the United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wz7x",
              "EntityName": "Government of Canada"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03c40gm",
              "EntityName": "Voluntary Employee Beneficiary Association"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c7mv",
              "EntityName": "Fiat S.p.A."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1460",
      "RawQuestion": "what was gregor mendel contribution?",
      "ProcessedQuestion": "what was gregor mendel contribution",
      "Parses": [
        {
          "ParseId": "WebQTest-1460.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37970) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37970 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "gregor mendel",
          "TopicEntityName": "Gregor Mendel",
          "TopicEntityMid": "m.039c5",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0266rh",
              "EntityName": "Monk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p1f",
              "EntityName": "Botanist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1475",
      "RawQuestion": "what type of guitar does johnny depp play?",
      "ProcessedQuestion": "what type of guitar does johnny depp play",
      "Parses": [
        {
          "ParseId": "WebQTest-1475.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? type of guitar?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37175) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37175 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "johnny depp",
          "TopicEntityName": "Johnny Depp",
          "TopicEntityMid": "m.0jfx1",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06w7v",
              "EntityName": "Slide guitar"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1479",
      "RawQuestion": "who is dustin johnson the golfer?",
      "ProcessedQuestion": "who is dustin johnson the golfer",
      "Parses": [
        {
          "ParseId": "WebQTest-1479.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1002293) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1002293 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "dustin johnson",
          "TopicEntityName": "Dustin Johnson",
          "TopicEntityMid": "m.04n4sw4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025smyp",
              "EntityName": "Golfer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1482",
      "RawQuestion": "who played carmen cortez in spy kids?",
      "ProcessedQuestion": "who played carmen cortez in spy kids",
      "Parses": [
        {
          "ParseId": "WebQTest-1482.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q550581) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q550581 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q3660297 . } ",
          "PotentialTopicEntityMention": "spy kids",
          "TopicEntityName": "Spy Kids",
          "TopicEntityMid": "m.02rrfzf",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02ql50",
              "EntityName": "Baby Carmen",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z7h0",
              "EntityName": "Alexa Vega"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zfn9cs",
              "EntityName": "Addisyn Fair"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1484",
      "RawQuestion": "what prompted shakespeare to write poetry?",
      "ProcessedQuestion": "what prompted shakespeare to write poetry",
      "Parses": [
        {
          "ParseId": "WebQTest-1484.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01612m",
              "EntityName": "Lucian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01r7z",
              "EntityName": "Christopher Marlowe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lqj",
              "EntityName": "Edmund Spenser"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03b_m",
              "EntityName": "Geoffrey Chaucer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cdqxx",
              "EntityName": "John Pory"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060yy",
              "EntityName": "Plautus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063_9",
              "EntityName": "Plutarch"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07hl9",
              "EntityName": "Thomas More"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07km7",
              "EntityName": "Terence"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07yhg",
              "EntityName": "Virgil"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09fdm",
              "EntityName": "Ovid"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c2cl",
              "EntityName": "Michel de Montaigne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5h0",
              "EntityName": "Thomas Kyd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_8y",
              "EntityName": "Seneca the Younger"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1486",
      "RawQuestion": "what school did mark zuckerberg attend?",
      "ProcessedQuestion": "what school did mark zuckerberg attend",
      "Parses": [
        {
          "ParseId": "WebQTest-1486.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36215) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36215 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "mark zuckerberg",
          "TopicEntityName": "Mark Zuckerberg",
          "TopicEntityMid": "m.086dny",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cyd5",
              "EntityName": "Phillips Exeter Academy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.038133",
              "EntityName": "Mercy College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ksy",
              "EntityName": "Harvard University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08nm4j",
              "EntityName": "Ardsley High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1487",
      "RawQuestion": "where does kate middleton live 2012?",
      "ProcessedQuestion": "where does kate middleton live 2012",
      "Parses": [
        {
          "ParseId": "WebQTest-1487.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10479) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10479 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2012-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2012-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kate middleton",
          "TopicEntityName": "Catherine, Duchess of Cambridge",
          "TopicEntityMid": "m.05mnc3",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kqsd",
              "EntityName": "Bucklebury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b_yz",
              "EntityName": "Reading"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1493",
      "RawQuestion": "what school did wilfred owen go to?",
      "ProcessedQuestion": "what school did wilfred owen go to",
      "Parses": [
        {
          "ParseId": "WebQTest-1493.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q212719) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q212719 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "wilfred owen",
          "TopicEntityName": "Wilfred Owen",
          "TopicEntityMid": "m.0ckwt",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02f46y",
              "EntityName": "University of Reading"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qjj55",
              "EntityName": "Wakeman School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1496",
      "RawQuestion": "where does the city of paris get its name?",
      "ProcessedQuestion": "where does the city of paris get its name",
      "Parses": [
        {
          "ParseId": "WebQTest-1496.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q90) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q90 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "paris",
          "TopicEntityName": "Paris",
          "TopicEntityMid": "m.05qtj",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0283_dl",
              "EntityName": "Parisii"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1503",
      "RawQuestion": "where did thomas paine die?",
      "ProcessedQuestion": "where did thomas paine die",
      "Parses": [
        {
          "ParseId": "WebQTest-1503.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q126462) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q126462 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "thomas paine",
          "TopicEntityName": "Thomas Paine",
          "TopicEntityMid": "m.07kwl",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1504",
      "RawQuestion": "where was barack hussein obama sr born?",
      "ProcessedQuestion": "where was barack hussein obama sr born",
      "Parses": [
        {
          "ParseId": "WebQTest-1504.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q649593) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q649593 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "barack hussein obama sr",
          "TopicEntityName": "Barack Obama, Sr.",
          "TopicEntityMid": "m.03qccxj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f2ymq",
              "EntityName": "Nyang'oma Kogelo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1506",
      "RawQuestion": "where is the home stadium of the new england patriots?",
      "ProcessedQuestion": "where is the home stadium of the new england patriots",
      "Parses": [
        {
          "ParseId": "WebQTest-1506.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q193390) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q193390 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "new england patriots",
          "TopicEntityName": "New England Patriots",
          "TopicEntityMid": "m.05g3b",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0299m7",
              "EntityName": "Gillette Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1507",
      "RawQuestion": "who was kate chopin?",
      "ProcessedQuestion": "who was kate chopin",
      "Parses": [
        {
          "ParseId": "WebQTest-1507.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230476) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230476 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "kate chopin",
          "TopicEntityName": "Kate Chopin",
          "TopicEntityMid": "m.0d8pw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1516",
      "RawQuestion": "where did sanjay gupta go to school?",
      "ProcessedQuestion": "where did sanjay gupta go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1516.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q510034) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q510034 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "sanjay gupta",
          "TopicEntityName": "Sanjay Gupta",
          "TopicEntityMid": "m.02yyk6",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027j22s",
              "EntityName": "Novi High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07szy",
              "EntityName": "University of Michigan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08mhmx",
              "EntityName": "University of Michigan Health System"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1522",
      "RawQuestion": "who does kroy biermann play football for?",
      "ProcessedQuestion": "who does kroy biermann play football for",
      "Parses": [
        {
          "ParseId": "WebQTest-1522.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6439123) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6439123 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kroy biermann",
          "TopicEntityName": "Kroy Biermann",
          "TopicEntityMid": "m.043m195",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wsr",
              "EntityName": "Atlanta Falcons"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1529",
      "RawQuestion": "where did emperor constantine die?",
      "ProcessedQuestion": "where did emperor constantine die",
      "Parses": [
        {
          "ParseId": "WebQTest-1529.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8413) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8413 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "constantine",
          "TopicEntityName": "Constantine the Great",
          "TopicEntityMid": "m.021tl",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01678j",
              "EntityName": "Nicomedia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1541",
      "RawQuestion": "what type of music did antonio vivaldi play?",
      "ProcessedQuestion": "what type of music did antonio vivaldi play",
      "Parses": [
        {
          "ParseId": "WebQTest-1541.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1340) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1340 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "antonio vivaldi",
          "TopicEntityName": "Antonio Vivaldi",
          "TopicEntityMid": "m.0pth",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fsz",
              "EntityName": "Baroque music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1542",
      "RawQuestion": "what school does james franco go to?",
      "ProcessedQuestion": "what school does james franco go to",
      "Parses": [
        {
          "ParseId": "WebQTest-1542.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q306403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q306403 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "james franco",
          "TopicEntityName": "James Franco",
          "TopicEntityMid": "m.05bnp0",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vg13",
              "EntityName": "Brooklyn College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rrjh",
              "EntityName": "Columbia University School of the Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02s62q",
              "EntityName": "Rhode Island School of Design"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ysv6",
              "EntityName": "Warren Wilson College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04b_46",
              "EntityName": "Tisch School of the Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lh_5",
              "EntityName": "Palo Alto High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08815",
              "EntityName": "University Yale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09f2j",
              "EntityName": "University of California, Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1543",
      "RawQuestion": "what is samuel langhorne clemens well known for?",
      "ProcessedQuestion": "what is samuel langhorne clemens well known for",
      "Parses": [
        {
          "ParseId": "WebQTest-1543.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7245) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7245 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "samuel langhorne clemens",
          "TopicEntityName": "Mark Twain",
          "TopicEntityMid": "m.014635",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0461fx_",
              "EntityName": "Humorist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1548",
      "RawQuestion": "where did antoine lavoisier die?",
      "ProcessedQuestion": "where did antoine lavoisier die",
      "Parses": [
        {
          "ParseId": "WebQTest-1548.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39607) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39607 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "antoine lavoisier",
          "TopicEntityName": "Antoine Lavoisier",
          "TopicEntityMid": "m.0tfw",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kx9d",
              "EntityName": "Place de la Concorde"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1553",
      "RawQuestion": "where does sami yusuf live?",
      "ProcessedQuestion": "where does sami yusuf live",
      "Parses": [
        {
          "ParseId": "WebQTest-1553.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q558226) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q558226 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sami yusuf",
          "TopicEntityName": "Sami Yusuf",
          "TopicEntityMid": "m.08cnsg",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftlx",
              "EntityName": "Tehran"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1557",
      "RawQuestion": "where do florida panthers play?",
      "ProcessedQuestion": "where do florida panthers play",
      "Parses": [
        {
          "ParseId": "WebQTest-1557.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q204623) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q204623 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "florida panthers",
          "TopicEntityName": "Florida Panthers",
          "TopicEntityMid": "m.0j8js",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.038hc3",
              "EntityName": "BB&T Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039xlz",
              "EntityName": "Miami Arena"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1560",
      "RawQuestion": "who founded new york university?",
      "ProcessedQuestion": "who founded new york university",
      "Parses": [
        {
          "ParseId": "WebQTest-1560.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49210) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49210 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "new york university",
          "TopicEntityName": "New York University",
          "TopicEntityMid": "m.0bwfn",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01p369",
              "EntityName": "Albert Gallatin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05m665",
              "EntityName": "Mordecai Manuel Noah"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1561",
      "RawQuestion": "who created arthur?",
      "ProcessedQuestion": "who created arthur",
      "Parses": [
        {
          "ParseId": "WebQTest-1561.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1056342) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1056342 wdt:P170 ?x . } ",
          "PotentialTopicEntityMention": "arthur",
          "TopicEntityName": "Arthur",
          "TopicEntityMid": "m.0px0r",
          "InferentialChain": [
            "tv.tv_program.program_creator"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g2wh",
              "EntityName": "WGBH"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.058nj4",
              "EntityName": "Marc Brown"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06_dbm",
              "EntityName": "Cookie Jar Group"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1564",
      "RawQuestion": "what did bobby darin die of?",
      "ProcessedQuestion": "what did bobby darin die of",
      "Parses": [
        {
          "ParseId": "WebQTest-1564.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311267) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311267 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "bobby darin",
          "TopicEntityName": "Bobby Darin",
          "TopicEntityMid": "m.0pj9t",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wgfrh",
              "EntityName": "Surgical complications"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1568",
      "RawQuestion": "what university did obama graduated from?",
      "ProcessedQuestion": "what university did obama graduated from",
      "Parses": [
        {
          "ParseId": "WebQTest-1568.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1765120 . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.014mlp",
              "EntityName": "Bachelor of Arts",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1573",
      "RawQuestion": "who influenced picasso art?",
      "ProcessedQuestion": "who influenced picasso art",
      "Parses": [
        {
          "ParseId": "WebQTest-1573.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5593) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5593 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "picasso",
          "TopicEntityName": "Pablo Picasso",
          "TopicEntityMid": "m.060_7",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016s03",
              "EntityName": "Eugène Delacroix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02mbk",
              "EntityName": "Édouard Manet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rdf6",
              "EntityName": "Henri Rousseau"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y23",
              "EntityName": "Francisco Goya"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p_bz",
              "EntityName": "Sara Murphy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063mx",
              "EntityName": "Paul Cézanne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07_m2",
              "EntityName": "Vincent van Gogh"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cwk2",
              "EntityName": "Jean-Auguste-Dominique Ingres"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h7vt",
              "EntityName": "Henri de Toulouse-Lautrec"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h82x",
              "EntityName": "Paul Gauguin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k92y",
              "EntityName": "Diego Velázquez"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tth",
              "EntityName": "Alfred Jarry"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1574",
      "RawQuestion": "what is my timezone in pennsylvania?",
      "ProcessedQuestion": "what is my timezone in pennsylvania",
      "Parses": [
        {
          "ParseId": "WebQTest-1574.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1400) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1400 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "pennsylvania",
          "TopicEntityName": "Pennsylvania",
          "TopicEntityMid": "m.05tbn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1577",
      "RawQuestion": "who did cliff lee play for last year?",
      "ProcessedQuestion": "who did cliff lee play for last year",
      "Parses": [
        {
          "ParseId": "WebQTest-1577.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q978930) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q978930 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2014-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cliff lee",
          "TopicEntityName": "Cliff Lee",
          "TopicEntityMid": "m.05bz_j",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2014-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "-0001-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "last year"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xvj",
              "EntityName": "Philadelphia Phillies"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1582",
      "RawQuestion": "what time in china hong kong?",
      "ProcessedQuestion": "what time in china hong kong",
      "Parses": [
        {
          "ParseId": "WebQTest-1582.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8646) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8646 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "hong kong",
          "TopicEntityName": "Hong Kong",
          "TopicEntityMid": "m.03h64",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04qqww",
              "EntityName": "Hong Kong Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1584",
      "RawQuestion": "what disease did bernie mac die of?",
      "ProcessedQuestion": "what disease did bernie mac die of",
      "Parses": [
        {
          "ParseId": "WebQTest-1584.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q176323) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q176323 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "bernie mac",
          "TopicEntityName": "Bernie Mac",
          "TopicEntityMid": "m.02lj6p",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q5y6",
              "EntityName": "Sarcoidosis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p367zp",
              "EntityName": "Complications from pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1591",
      "RawQuestion": "what was obama's former occupation?",
      "ProcessedQuestion": "what was obama 's former occupation",
      "Parses": [
        {
          "ParseId": "WebQTest-1591.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fz465",
              "EntityName": "Law professor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1599",
      "RawQuestion": "where did kim jong il die?",
      "ProcessedQuestion": "where did kim jong il die",
      "Parses": [
        {
          "ParseId": "WebQTest-1599.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10665) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10665 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "kim jong il",
          "TopicEntityName": "Kim Jong-il",
          "TopicEntityMid": "m.0143y5",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cw5k",
              "EntityName": "Pyongyang"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1600",
      "RawQuestion": "what honor did agatha christie receive in 1971?",
      "ProcessedQuestion": "what honor did agatha christie receive in 1971",
      "Parses": [
        {
          "ParseId": "WebQTest-1600.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35064) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35064 wdt:P166 ?y . ?y wdt:P166 ?x . FILTER(NOT EXISTS {?y wdt:P585 ?sk0} ||  EXISTS {?y wdt:P585 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"1971-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P585 ?sk2} ||  EXISTS {?y wdt:P585 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"1971-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "agatha christie",
          "TopicEntityName": "Agatha Christie",
          "TopicEntityMid": "m.0ldd",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "1971-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "1971-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "1971-01-01",
            "End": "1971-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "1971"
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1614",
      "RawQuestion": "what religion was king louis xiv?",
      "ProcessedQuestion": "what religion was king louis xiv",
      "Parses": [
        {
          "ParseId": "WebQTest-1614.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7742) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7742 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "king louis xiv",
          "TopicEntityName": "Louis XIV of France",
          "TopicEntityMid": "m.04pwg",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1615",
      "RawQuestion": "what football team does mike wright play for?",
      "ProcessedQuestion": "what football team does mike wright play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1615.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "Need current"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6849338) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6849338 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "mike wright",
          "TopicEntityName": "Mike Wright",
          "TopicEntityMid": "m.07twz9",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g3b",
              "EntityName": "New England Patriots"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1616",
      "RawQuestion": "what did shannon hoon die from?",
      "ProcessedQuestion": "what did shannon hoon die from",
      "Parses": [
        {
          "ParseId": "WebQTest-1616.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q531978) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q531978 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "shannon hoon",
          "TopicEntityName": "Shannon Hoon",
          "TopicEntityMid": "m.01w2x6z",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf_6",
              "EntityName": "Drug overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1618",
      "RawQuestion": "what teams has manny ramirez played for?",
      "ProcessedQuestion": "what teams has manny ramirez played for",
      "Parses": [
        {
          "ParseId": "WebQTest-1618.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q375648) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q375648 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "manny ramirez",
          "TopicEntityName": "Manny Ramirez",
          "TopicEntityMid": "m.06tjlc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d5z",
              "EntityName": "Boston Red Sox"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01slc",
              "EntityName": "Chicago White Sox"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yhm",
              "EntityName": "Cleveland Indians"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yjl",
              "EntityName": "Chicago Cubs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04mjl",
              "EntityName": "Los Angeles Dodgers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05m_8",
              "EntityName": "Oakland Athletics"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l8f",
              "EntityName": "Tampa Bay Rays"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l8x",
              "EntityName": "Texas Rangers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08tdk2",
              "EntityName": "EDA Rhinos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1620",
      "RawQuestion": "when was president wilson in office?",
      "ProcessedQuestion": "when was president wilson in office",
      "Parses": [
        {
          "ParseId": "WebQTest-1620.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34296) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34296 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "president wilson",
          "TopicEntityName": "Woodrow Wilson",
          "TopicEntityMid": "m.083q7",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1913-03-04",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1630",
      "RawQuestion": "what inspired michael jackson to become a singer?",
      "ProcessedQuestion": "what inspired michael jackson to become a singer",
      "Parses": [
        {
          "ParseId": "WebQTest-1630.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01b9db",
              "EntityName": "Redd Foxx"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lc5",
              "EntityName": "Charlie Chaplin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0407f",
              "EntityName": "James Brown"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ct6p",
              "EntityName": "Nipsey Russell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081nh",
              "EntityName": "Walt Disney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1639",
      "RawQuestion": "where did frank baum die?",
      "ProcessedQuestion": "where did frank baum die",
      "Parses": [
        {
          "ParseId": "WebQTest-1639.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207544) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207544 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "frank baum",
          "TopicEntityName": "L. Frank Baum",
          "TopicEntityMid": "m.04mby",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2wj",
              "EntityName": "Hollywood"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1646",
      "RawQuestion": "what year did the phillies begin?",
      "ProcessedQuestion": "what year did the phillies begin",
      "Parses": [
        {
          "ParseId": "WebQTest-1646.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q650840) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q650840 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "phillies",
          "TopicEntityName": "Philadelphia Phillies",
          "TopicEntityMid": "m.05xvj",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1883",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1659",
      "RawQuestion": "what is the zip code for walnut creek?",
      "ProcessedQuestion": "what is the zip code for walnut creek",
      "Parses": [
        {
          "ParseId": "WebQTest-1659.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q493261) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q493261 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "walnut creek",
          "TopicEntityName": "Walnut Creek",
          "TopicEntityMid": "m.0qyzb",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zs6f0",
              "EntityName": "94596"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zs6ht",
              "EntityName": "94598"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zs6ms",
              "EntityName": "94597"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zs75v",
              "EntityName": "94595"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1663",
      "RawQuestion": "what music did louis armstrong play?",
      "ProcessedQuestion": "what music did louis armstrong play",
      "Parses": [
        {
          "ParseId": "WebQTest-1663.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015y_n",
              "EntityName": "Swing music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_d0",
              "EntityName": "Jazz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09xw2",
              "EntityName": "Dixieland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dhb2",
              "EntityName": "Scat singing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m40d",
              "EntityName": "Traditional pop music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1667",
      "RawQuestion": "who were the children of king solomon?",
      "ProcessedQuestion": "who were the children of king solomon",
      "Parses": [
        {
          "ParseId": "WebQTest-1667.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37085) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37085 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "king solomon",
          "TopicEntityName": "Solomon",
          "TopicEntityMid": "m.070h3",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qn77",
              "EntityName": "Menelik I"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06h5t",
              "EntityName": "Rehoboam"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1668",
      "RawQuestion": "what did andy irons die from?",
      "ProcessedQuestion": "what did andy irons die from",
      "Parses": [
        {
          "ParseId": "WebQTest-1668.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q526273) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q526273 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "andy irons",
          "TopicEntityName": "Andy Irons",
          "TopicEntityMid": "m.03xn54",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1671",
      "RawQuestion": "where did leif ericson grow up?",
      "ProcessedQuestion": "where did leif ericson grow up",
      "Parses": [
        {
          "ParseId": "WebQTest-1671.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? correct entity?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1814927) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1814927 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "leif ericson",
          "TopicEntityName": "Leif Eriksson",
          "TopicEntityMid": "m.02vwg2_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vmwn",
              "EntityName": "Köping"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1677",
      "RawQuestion": "where was terry waite born?",
      "ProcessedQuestion": "where was terry waite born",
      "Parses": [
        {
          "ParseId": "WebQTest-1677.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2504773) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2504773 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "terry waite",
          "TopicEntityName": "Terry Waite",
          "TopicEntityMid": "m.013p_j",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01425k",
              "EntityName": "Bollington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1678",
      "RawQuestion": "what country did the battle of san juan hill take place?",
      "ProcessedQuestion": "what country did the battle of san juan hill take place",
      "Parses": [
        {
          "ParseId": "WebQTest-1678.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1215310) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1215310 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of san juan hill",
          "TopicEntityName": "Battle of San Juan Hill",
          "TopicEntityMid": "m.01tf88",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01j4rs",
              "EntityName": "Santiago de Cuba"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1684",
      "RawQuestion": "what influenced william shakespeare to start writing?",
      "ProcessedQuestion": "what influenced william shakespeare to start writing",
      "Parses": [
        {
          "ParseId": "WebQTest-1684.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "william shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01612m",
              "EntityName": "Lucian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01r7z",
              "EntityName": "Christopher Marlowe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lqj",
              "EntityName": "Edmund Spenser"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03b_m",
              "EntityName": "Geoffrey Chaucer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cdqxx",
              "EntityName": "John Pory"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060yy",
              "EntityName": "Plautus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063_9",
              "EntityName": "Plutarch"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07hl9",
              "EntityName": "Thomas More"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07km7",
              "EntityName": "Terence"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07yhg",
              "EntityName": "Virgil"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09fdm",
              "EntityName": "Ovid"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c2cl",
              "EntityName": "Michel de Montaigne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c5h0",
              "EntityName": "Thomas Kyd"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_8y",
              "EntityName": "Seneca the Younger"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1685",
      "RawQuestion": "where did benjamin franklin went to school?",
      "ProcessedQuestion": "where did benjamin franklin went to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1685.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "benjamin franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kj7g",
              "EntityName": "Boston Latin School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1688",
      "RawQuestion": "what did bernie mac died of?",
      "ProcessedQuestion": "what did bernie mac died of",
      "Parses": [
        {
          "ParseId": "WebQTest-1688.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q176323) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q176323 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "bernie mac",
          "TopicEntityName": "Bernie Mac",
          "TopicEntityMid": "m.02lj6p",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q5y6",
              "EntityName": "Sarcoidosis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p367zp",
              "EntityName": "Complications from pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1691",
      "RawQuestion": "what is houston timezone?",
      "ProcessedQuestion": "what is houston timezone",
      "Parses": [
        {
          "ParseId": "WebQTest-1691.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16555) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16555 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "houston",
          "TopicEntityName": "Houston",
          "TopicEntityMid": "m.03l2n",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1696",
      "RawQuestion": "what did ferdinand magellan do?",
      "ProcessedQuestion": "what did ferdinand magellan do",
      "Parses": [
        {
          "ParseId": "WebQTest-1696.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1496 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ferdinand magellan",
          "TopicEntityName": "Ferdinand Magellan",
          "TopicEntityMid": "m.033ky",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016wtf",
              "EntityName": "Sailor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023nrw",
              "EntityName": "Navigator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040vc4s",
              "EntityName": "Explorer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1702",
      "RawQuestion": "who was king henry viii son?",
      "ProcessedQuestion": "who was king henry viii son",
      "Parses": [
        {
          "ParseId": "WebQTest-1702.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38370 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "king henry viii",
          "TopicEntityName": "Henry VIII of England",
          "TopicEntityMid": "m.03p77",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02s82",
              "EntityName": "Edward VI of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sx6f",
              "EntityName": "Henry FitzRoy, 1st Duke of Richmond and Somerset"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hn9rc9",
              "EntityName": "Henry, Duke of Cornwall"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1703",
      "RawQuestion": "who does david beckham play for?",
      "ProcessedQuestion": "who does david beckham play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1703.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1712",
      "RawQuestion": "where did spencer pratt go to school?",
      "ProcessedQuestion": "where did spencer pratt go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1712.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2279463) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2279463 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "spencer pratt",
          "TopicEntityName": "Spencer Pratt",
          "TopicEntityMid": "m.02z3d24",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065y4w7",
              "EntityName": "University of Southern California"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1715",
      "RawQuestion": "where did cs lewis wrote?",
      "ProcessedQuestion": "where did cs lewis wrote",
      "Parses": [
        {
          "ParseId": "WebQTest-1715.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? where does someboy write = where does someboy live"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9204) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9204 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "cs lewis",
          "TopicEntityName": "C. S. Lewis",
          "TopicEntityMid": "m.01wd02c",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01l63",
              "EntityName": "Belfast"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1716",
      "RawQuestion": "what is carlos pena jr nationality?",
      "ProcessedQuestion": "what is carlos pena jr nationality",
      "Parses": [
        {
          "ParseId": "WebQTest-1716.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1043157) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1043157 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "carlos pena",
          "TopicEntityName": "Carlos Peña",
          "TopicEntityMid": "m.05c95x",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027rn",
              "EntityName": "Dominican Republic"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1725",
      "RawQuestion": "what timezone is phoenix az in right now?",
      "ProcessedQuestion": "what timezone is phoenix az in right now",
      "Parses": [
        {
          "ParseId": "WebQTest-1725.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16556) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16556 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "phoenix az",
          "TopicEntityName": "Phoenix",
          "TopicEntityMid": "m.0d35y",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1726",
      "RawQuestion": "where is south portland?",
      "ProcessedQuestion": "where is south portland",
      "Parses": [
        {
          "ParseId": "WebQTest-1726.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1000166) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1000166 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "south portland",
          "TopicEntityName": "South Portland",
          "TopicEntityMid": "m.0tpk4",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nm9h",
              "EntityName": "Cumberland County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1726.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0tpk4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0tpk4 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "south portland",
          "TopicEntityName": "South Portland",
          "TopicEntityMid": "m.0tpk4",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050ks",
              "EntityName": "Maine"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nm9h",
              "EntityName": "Cumberland County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1728",
      "RawQuestion": "who was ptolemy and what did he do?",
      "ProcessedQuestion": "who was ptolemy and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTest-1728.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34943) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34943 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ptolemy",
          "TopicEntityName": "Ptolemy",
          "TopicEntityMid": "m.05_0t",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rxky",
              "EntityName": "Astrologer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jygg",
              "EntityName": "Geographer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1732",
      "RawQuestion": "where did theodor schwann get his education?",
      "ProcessedQuestion": "where did theodor schwann get his education",
      "Parses": [
        {
          "ParseId": "WebQTest-1732.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76745) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76745 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "theodor schwann",
          "TopicEntityName": "Theodor Schwann",
          "TopicEntityMid": "m.040000",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01stzp",
              "EntityName": "Humboldt University of Berlin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03563j",
              "EntityName": "University of Würzburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m7yh",
              "EntityName": "University of Bonn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1733",
      "RawQuestion": "who or what influenced frank lloyd wright?",
      "ProcessedQuestion": "who or what influenced frank lloyd wright",
      "Parses": [
        {
          "ParseId": "WebQTest-1733.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5604) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5604 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "frank lloyd wright",
          "TopicEntityName": "Frank Lloyd Wright",
          "TopicEntityMid": "m.02wlk",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cqpy",
              "EntityName": "Ebenezer Howard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01whq3q",
              "EntityName": "Georges I. Gurdjieff and Thomas De Hartmann"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06jmjj",
              "EntityName": "Bruce Price"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08304",
              "EntityName": "William Morris"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwx3",
              "EntityName": "Henry David Thoreau"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bybqwn",
              "EntityName": "Elizabeth Gordon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dvns",
              "EntityName": "Louis Sullivan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1744",
      "RawQuestion": "what team does josh hamilton play for?",
      "ProcessedQuestion": "what team does josh hamilton play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1744.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q716346) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q716346 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "josh hamilton",
          "TopicEntityName": "Josh Hamilton",
          "TopicEntityMid": "m.08zxm9",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04wmvz",
              "EntityName": "Los Angeles Angels of Anaheim"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1750",
      "RawQuestion": "what city does paul ryan live in?",
      "ProcessedQuestion": "what city does paul ryan live in",
      "Parses": [
        {
          "ParseId": "WebQTest-1750.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q203966) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q203966 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "paul ryan",
          "TopicEntityName": "Paul Ryan",
          "TopicEntityMid": "m.024v2j",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mm_c",
              "EntityName": "Janesville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1752",
      "RawQuestion": "what did f. scott fitzgerald do?",
      "ProcessedQuestion": "what did f. scott fitzgerald do",
      "Parses": [
        {
          "ParseId": "WebQTest-1752.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93354) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93354 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "f . scott fitzgerald",
          "TopicEntityName": "F. Scott Fitzgerald",
          "TopicEntityMid": "m.02zjd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1755",
      "RawQuestion": "where did the second battle of ypres occur?",
      "ProcessedQuestion": "where did the second battle of ypres occur",
      "Parses": [
        {
          "ParseId": "WebQTest-1755.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q233219) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q233219 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "second battle of ypres",
          "TopicEntityName": "Second Battle of Ypres",
          "TopicEntityMid": "m.02q3m7",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0145__",
              "EntityName": "Ypres"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1757",
      "RawQuestion": "what did michael crabtree do?",
      "ProcessedQuestion": "what did michael crabtree do",
      "Parses": [
        {
          "ParseId": "WebQTest-1757.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2351787) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2351787 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "michael crabtree",
          "TopicEntityName": "Michael Crabtree",
          "TopicEntityMid": "m.03ccsym",
          "InferentialChain": [
            "american_football.football_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g_6x",
              "EntityName": "Wide receiver"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1757.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:people.person.profession ?x .\n}\n",
          "PotentialTopicEntityMention": "michael crabtree",
          "TopicEntityName": "Michael Crabtree",
          "TopicEntityMid": "m.03ccsym",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01445t",
              "EntityName": "Athlete"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1757.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03ccsym)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03ccsym ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
          "PotentialTopicEntityMention": "michael crabtree",
          "TopicEntityName": "Michael Crabtree",
          "TopicEntityMid": "m.03ccsym",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g_6x",
              "EntityName": "Wide receiver"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1764",
      "RawQuestion": "where is daud ibrahim?",
      "ProcessedQuestion": "where is daud ibrahim",
      "Parses": [
        {
          "ParseId": "WebQTest-1764.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q553191) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q553191 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "daud ibrahim",
          "TopicEntityName": "Dawood Ibrahim",
          "TopicEntityMid": "m.02ry1s",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.055vr",
              "EntityName": "Maharashtra"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1767",
      "RawQuestion": "where was martin luther king jr buried?",
      "ProcessedQuestion": "where was martin luther king jr buried",
      "Parses": [
        {
          "ParseId": "WebQTest-1767.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050my1",
              "EntityName": "Martin Luther King, Jr. National Historic Site"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1770",
      "RawQuestion": "what country does rafael nadal play for?",
      "ProcessedQuestion": "what country does rafael nadal play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1770.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10132) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10132 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "rafael nadal",
          "TopicEntityName": "Rafael Nadal",
          "TopicEntityMid": "m.051q39",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1773",
      "RawQuestion": "who was the son of king leonidas?",
      "ProcessedQuestion": "who was the son of king leonidas",
      "Parses": [
        {
          "ParseId": "WebQTest-1773.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44228) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44228 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "king leonidas",
          "TopicEntityName": "Leonidas I",
          "TopicEntityMid": "m.0nb2t",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063sr6",
              "EntityName": "Pleistarchus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1779",
      "RawQuestion": "when did president theodore roosevelt take office?",
      "ProcessedQuestion": "when did president theodore roosevelt take office",
      "Parses": [
        {
          "ParseId": "WebQTest-1779.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33866) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33866 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "president theodore roosevelt",
          "TopicEntityName": "Theodore Roosevelt",
          "TopicEntityMid": "m.07hyk",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1901-09-14",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1780",
      "RawQuestion": "who does michael oher play for in 2010?",
      "ProcessedQuestion": "who does michael oher play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTest-1780.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q977601) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q977601 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michael oher",
          "TopicEntityName": "Michael Oher",
          "TopicEntityMid": "m.0h7q7b",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ct6",
              "EntityName": "Baltimore Ravens"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1781",
      "RawQuestion": "who or what influenced albert einstein?",
      "ProcessedQuestion": "who or what influenced albert einstein",
      "Parses": [
        {
          "ParseId": "WebQTest-1781.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q937) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q937 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "albert einstein",
          "TopicEntityName": "Albert Einstein",
          "TopicEntityMid": "m.0jcx",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012102",
              "EntityName": "Henry George"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015n8",
              "EntityName": "Baruch Spinoza"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015yk8",
              "EntityName": "Karl Pearson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01bgwr",
              "EntityName": "Hermann Minkowski"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dfd4",
              "EntityName": "Moritz Schlick"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026lj",
              "EntityName": "David Hume"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.032l1",
              "EntityName": "Fyodor Dostoyevsky"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03cdg",
              "EntityName": "George Bernard Shaw"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03s9v",
              "EntityName": "Isaac Newton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0434m",
              "EntityName": "James Clerk Maxwell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xfb",
              "EntityName": "Mahatma Gandhi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q658z",
              "EntityName": "Riazuddin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vy1",
              "EntityName": "Paul Valéry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bjvq",
              "EntityName": "Bernhard Riemann"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dm1p",
              "EntityName": "Thomas Young"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fcy0",
              "EntityName": "Ernst Mach"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j3v",
              "EntityName": "Arthur Schopenhauer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m3hd",
              "EntityName": "Hendrik Lorentz"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1790",
      "RawQuestion": "where was huey newton killed?",
      "ProcessedQuestion": "where was huey newton killed",
      "Parses": [
        {
          "ParseId": "WebQTest-1790.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q360570) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q360570 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "huey newton",
          "TopicEntityName": "Huey P. Newton",
          "TopicEntityMid": "m.018y0w",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dc95",
              "EntityName": "Oakland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1793",
      "RawQuestion": "where does marta play soccer?",
      "ProcessedQuestion": "where does marta play soccer",
      "Parses": [
        {
          "ParseId": "WebQTest-1793.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q228616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q228616 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "marta",
          "TopicEntityName": "Marta",
          "TopicEntityMid": "m.09fr69",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0755sb",
              "EntityName": "Brazil women's national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9814q",
              "EntityName": "Tyresö FF"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1794",
      "RawQuestion": "where is mitt romney's family from?",
      "ProcessedQuestion": "where is mitt romney 's family from",
      "Parses": [
        {
          "ParseId": "WebQTest-1794.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "mitt romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dtg",
              "EntityName": "Detroit"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1795",
      "RawQuestion": "what are john terry's children called?",
      "ProcessedQuestion": "what are john terry 's children called",
      "Parses": [
        {
          "ParseId": "WebQTest-1795.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83456) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83456 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "john terry",
          "TopicEntityName": "John Terry",
          "TopicEntityMid": "m.029f79",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j51lwj",
              "EntityName": "Summer Rose Terry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j51lwr",
              "EntityName": "Georgie John Terry"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1796",
      "RawQuestion": "what city was michael jackson born in?",
      "ProcessedQuestion": "what city was michael jackson born in",
      "Parses": [
        {
          "ParseId": "WebQTest-1796.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03b12",
              "EntityName": "Gary"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1797",
      "RawQuestion": "who fought in the battle of vicksburg?",
      "ProcessedQuestion": "who fought in the battle of vicksburg",
      "Parses": [
        {
          "ParseId": "WebQTest-1797.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1066253) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1066253 wdt:P710 ?x . } ",
          "PotentialTopicEntityMention": "vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "base.culturalevent.event.entity_involved"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_qg_",
              "EntityName": "John C. Pemberton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fp48",
              "EntityName": "Union"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07t2k",
              "EntityName": "Ulysses S. Grant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1797.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hf7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hf7f ns:military.military_conflict.combatants ?y .\n?y ns:military.military_combatant_group.combatants ?x .\n}\n",
          "PotentialTopicEntityMention": "vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "military.military_conflict.combatants",
            "military.military_combatant_group.combatants"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fp48",
              "EntityName": "Union"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1797.P2",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hf7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hf7f ns:military.military_conflict.commanders ?y .\n?y ns:military.military_command.military_combatant ?x .\n}\n",
          "PotentialTopicEntityMention": "vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "military.military_conflict.commanders",
            "military.military_command.military_combatant"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d5",
              "EntityName": "Confederate States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fp48",
              "EntityName": "Union"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1797.P3",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01hf7f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01hf7f ns:military.military_conflict.commanders ?y .\n?y ns:military.military_command.military_commander ?x .\n}\n",
          "PotentialTopicEntityMention": "vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "military.military_conflict.commanders",
            "military.military_command.military_commander"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_qg_",
              "EntityName": "John C. Pemberton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07t2k",
              "EntityName": "Ulysses S. Grant"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1799",
      "RawQuestion": "what kind of writing is nikolai gogol famous for?",
      "ProcessedQuestion": "what kind of writing is nikolai gogol famous for",
      "Parses": [
        {
          "ParseId": "WebQTest-1799.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43718) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43718 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "nikolai gogol",
          "TopicEntityName": "Nikolai Gogol",
          "TopicEntityMid": "m.0113sg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hv44_",
              "EntityName": "Playwright"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1802",
      "RawQuestion": "where are the timezones in the usa?",
      "ProcessedQuestion": "where are the timezones in the usa",
      "Parses": [
        {
          "ParseId": "WebQTest-1802.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "usa",
          "TopicEntityName": "United States of America",
          "TopicEntityMid": "m.09c7w0",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027wj2_",
              "EntityName": "Samoa Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027wjl3",
              "EntityName": "Chamorro Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcrv",
              "EntityName": "Alaska Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.042g7t",
              "EntityName": "Atlantic Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1806",
      "RawQuestion": "what position did lebron james play?",
      "ProcessedQuestion": "what position did lebron james play",
      "Parses": [
        {
          "ParseId": "WebQTest-1806.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36159) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36159 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "lebron james",
          "TopicEntityName": "LeBron James",
          "TopicEntityMid": "m.01jz6d",
          "InferentialChain": [
            "basketball.basketball_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pv51",
              "EntityName": "Power forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0355dz",
              "EntityName": "Small forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ww62",
              "EntityName": "Point forward"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1806.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01jz6d)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01jz6d ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
          "PotentialTopicEntityMention": "lebron james",
          "TopicEntityName": "LeBron James",
          "TopicEntityMid": "m.01jz6d",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pv51",
              "EntityName": "Power forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03558l",
              "EntityName": "Shooting guard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0355dz",
              "EntityName": "Small forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ww62",
              "EntityName": "Point forward"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05ch8k9",
              "EntityName": "Forward"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1807",
      "RawQuestion": "what was wayne gretzky's first team?",
      "ProcessedQuestion": "what was wayne gretzky 's first team",
      "Parses": [
        {
          "ParseId": "WebQTest-1807.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209518) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209518 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "wayne gretzky",
          "TopicEntityName": "Wayne Gretzky",
          "TopicEntityMid": "m.0839s",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnmj",
              "EntityName": "Edmonton Oilers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1812",
      "RawQuestion": "where was rihanna raised?",
      "ProcessedQuestion": "where was rihanna raised",
      "Parses": [
        {
          "ParseId": "WebQTest-1812.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36844) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36844 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "rihanna",
          "TopicEntityName": "Rihanna",
          "TopicEntityMid": "m.06mt91",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p5kp",
              "EntityName": "Saint Michael Parish"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1813",
      "RawQuestion": "what team does messi play for 2011?",
      "ProcessedQuestion": "what team does messi play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTest-1813.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q615) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q615 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "messi",
          "TopicEntityName": "Lionel Messi",
          "TopicEntityMid": "m.06qjgc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1815",
      "RawQuestion": "where does lil wayne go to school?",
      "ProcessedQuestion": "where does lil wayne go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1815.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q15615) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q15615 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "lil wayne",
          "TopicEntityName": "Lil Wayne",
          "TopicEntityMid": "m.016kjs",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gnrt",
              "EntityName": "University of Phoenix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gr81",
              "EntityName": "University of Houston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.075_jk3",
              "EntityName": "Lafayette Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.076qq2_",
              "EntityName": "Mcmain Magnet Secondary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h2_zh0",
              "EntityName": "Eleanor McMain Secondary School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1817",
      "RawQuestion": "where did jrr tolkien go to school?",
      "ProcessedQuestion": "where did jrr tolkien go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1817.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q892) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q892 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jrr tolkien",
          "TopicEntityName": "J. R. R. Tolkien",
          "TopicEntityMid": "m.041h0",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025ycq",
              "EntityName": "King Edward's School, Birmingham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tgn",
              "EntityName": "University of Oxford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b_b0v",
              "EntityName": "St. Philip's School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ylvj",
              "EntityName": "Exeter College, Oxford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1826",
      "RawQuestion": "what schools did anders celsius attend?",
      "ProcessedQuestion": "what schools did anders celsius attend",
      "Parses": [
        {
          "ParseId": "WebQTest-1826.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81130) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81130 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "anders celsius",
          "TopicEntityName": "Anders Celsius",
          "TopicEntityMid": "m.010nm",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tjf",
              "EntityName": "Uppsala University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1835",
      "RawQuestion": "what country did gregor mendel live in?",
      "ProcessedQuestion": "what country did gregor mendel live in",
      "Parses": [
        {
          "ParseId": "WebQTest-1835.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37970) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37970 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "gregor mendel",
          "TopicEntityName": "Gregor Mendel",
          "TopicEntityMid": "m.039c5",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p5_2s",
              "EntityName": "Austrian Silesia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fs_s",
              "EntityName": "Brno"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1836",
      "RawQuestion": "where laura ingalls wilder lived?",
      "ProcessedQuestion": "where laura ingalls wilder lived",
      "Parses": [
        {
          "ParseId": "WebQTest-1836.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q237514) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q237514 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "laura ingalls wilder",
          "TopicEntityName": "Laura Ingalls Wilder",
          "TopicEntityMid": "m.01bt87",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_r0n",
              "EntityName": "De Smet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mmj7",
              "EntityName": "Pepin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0488g",
              "EntityName": "Kansas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz6k_",
              "EntityName": "Burr Oak"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wg6f",
              "EntityName": "Walnut Grove"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x14p",
              "EntityName": "Mansfield"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1839",
      "RawQuestion": "what's my timezone in oklahoma?",
      "ProcessedQuestion": "what 's my timezone in oklahoma",
      "Parses": [
        {
          "ParseId": "WebQTest-1839.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1649) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1649 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "oklahoma",
          "TopicEntityName": "Oklahoma",
          "TopicEntityMid": "m.05mph",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1844",
      "RawQuestion": "who plays robin hood in prince of thieves?",
      "ProcessedQuestion": "who plays robin hood in prince of thieves",
      "Parses": [
        {
          "ParseId": "WebQTest-1844.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q486822) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q486822 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q122634 . } ",
          "PotentialTopicEntityMention": "prince of thieves",
          "TopicEntityName": "Robin Hood: Prince of Thieves",
          "TopicEntityMid": "m.01msrb",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.06j7x",
              "EntityName": "Robin Hood",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0127m7",
              "EntityName": "Kevin Costner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1845",
      "RawQuestion": "what standard time is texas?",
      "ProcessedQuestion": "what standard time is texas",
      "Parses": [
        {
          "ParseId": "WebQTest-1845.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1439) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1439 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "texas",
          "TopicEntityName": "Texas",
          "TopicEntityMid": "m.07b_l",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1848",
      "RawQuestion": "what instrument does louis armstrong?",
      "ProcessedQuestion": "what instrument does louis armstrong",
      "Parses": [
        {
          "ParseId": "WebQTest-1848.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020w2",
              "EntityName": "Cornet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1850",
      "RawQuestion": "what religion does madonna practice?",
      "ProcessedQuestion": "what religion does madonna practice",
      "Parses": [
        {
          "ParseId": "WebQTest-1850.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1744) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1744 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "madonna",
          "TopicEntityName": "Madonna",
          "TopicEntityMid": "m.01vs_v8",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n15n",
              "EntityName": "Jewish Renewal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1853",
      "RawQuestion": "what made richard hammond famous?",
      "ProcessedQuestion": "what made richard hammond famous",
      "Parses": [
        {
          "ParseId": "WebQTest-1853.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297265) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297265 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "richard hammond",
          "TopicEntityName": "Richard Hammond",
          "TopicEntityMid": "m.02508x",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tkqy",
              "EntityName": "Stunt Performer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08z956",
              "EntityName": "Radio personality"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1858",
      "RawQuestion": "where does dave ramsey live?",
      "ProcessedQuestion": "where does dave ramsey live",
      "Parses": [
        {
          "ParseId": "WebQTest-1858.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5229632) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5229632 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "dave ramsey",
          "TopicEntityName": "Dave Ramsey",
          "TopicEntityMid": "m.03zf9h",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05jbn",
              "EntityName": "Nashville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1865",
      "RawQuestion": "what did jesus do for living?",
      "ProcessedQuestion": "what did jesus do for living",
      "Parses": [
        {
          "ParseId": "WebQTest-1865.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q302) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q302 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jesus",
          "TopicEntityName": "Jesus Christ",
          "TopicEntityMid": "m.045m1_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019x4f",
              "EntityName": "Carpentry"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066dv",
              "EntityName": "Prophet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.067nv",
              "EntityName": "Preacher"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1871",
      "RawQuestion": "what is the stanley cup named after?",
      "ProcessedQuestion": "what is the stanley cup named after",
      "Parses": [
        {
          "ParseId": "WebQTest-1871.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211872) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211872 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "stanley cup",
          "TopicEntityName": "Stanley Cup",
          "TopicEntityMid": "m.0hn79",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01q69p",
              "EntityName": "Frederick Stanley, 16th Earl of Derby"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1881",
      "RawQuestion": "what timezone is sweden gmt?",
      "ProcessedQuestion": "what timezone is sweden gmt",
      "Parses": [
        {
          "ParseId": "WebQTest-1881.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "sweden",
          "TopicEntityName": "Sweden",
          "TopicEntityMid": "m.0d0vqn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02llzg",
              "EntityName": "Central European Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1884",
      "RawQuestion": "what degrees did barack obama get?",
      "ProcessedQuestion": "what degrees did barack obama get",
      "Parses": [
        {
          "ParseId": "WebQTest-1884.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013zdg",
              "EntityName": "Juris Doctor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014mlp",
              "EntityName": "Bachelor of Arts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1891",
      "RawQuestion": "where did the russian japanese war happen?",
      "ProcessedQuestion": "where did the russian japanese war happen",
      "Parses": [
        {
          "ParseId": "WebQTest-1891.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q159950) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q159950 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "russian japanese war",
          "TopicEntityName": "Russo-Japanese War",
          "TopicEntityMid": "m.0c4gf",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01krx6",
              "EntityName": "Korean Peninsula"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cswl",
              "EntityName": "Manchuria"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0df4f",
              "EntityName": "Yellow Sea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1894",
      "RawQuestion": "what baseball team was jackie robinson on?",
      "ProcessedQuestion": "what baseball team was jackie robinson on",
      "Parses": [
        {
          "ParseId": "WebQTest-1894.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221048) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221048 wdt:P54 ?y . ?y wdt:P54 ?x . ?x wdt:P641 wd:Q5369 . } ",
          "PotentialTopicEntityMention": "jackie robinson",
          "TopicEntityName": "Jackie Robinson",
          "TopicEntityMid": "m.0443c",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.018jz",
              "EntityName": "Baseball",
              "SourceNodeIndex": 1,
              "NodePredicate": "sports.sports_team.sport",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_cjl",
              "EntityName": "Kansas City Monarchs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_wkh",
              "EntityName": "Montreal Royals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05fc8c9",
              "EntityName": "Brooklyn Dodgers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1895",
      "RawQuestion": "what body of water does st lawrence river flow into?",
      "ProcessedQuestion": "what body of water does st lawrence river flow into",
      "Parses": [
        {
          "ParseId": "WebQTest-1895.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q134750) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q134750 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "st lawrence river",
          "TopicEntityName": "Saint Lawrence River",
          "TopicEntityMid": "m.0cg4t",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8pq",
              "EntityName": "Gulf of Saint Lawrence"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1902",
      "RawQuestion": "what year was hitler was born?",
      "ProcessedQuestion": "what year was hitler was born",
      "Parses": [
        {
          "ParseId": "WebQTest-1902.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P569 ?x . } ",
          "PotentialTopicEntityMention": "hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.person.date_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1889-04-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1910",
      "RawQuestion": "where was shakespeare born at?",
      "ProcessedQuestion": "where was shakespeare born at",
      "Parses": [
        {
          "ParseId": "WebQTest-1910.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g251",
              "EntityName": "Stratford-upon-Avon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1912",
      "RawQuestion": "what did joan crawford died of?",
      "ProcessedQuestion": "what did joan crawford died of",
      "Parses": [
        {
          "ParseId": "WebQTest-1912.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40475) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40475 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "joan crawford",
          "TopicEntityName": "Joan Crawford",
          "TopicEntityMid": "m.0cgbf",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_qc_",
              "EntityName": "Pancreatic cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1913",
      "RawQuestion": "where did rob kardashian go to school?",
      "ProcessedQuestion": "where did rob kardashian go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1913.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26318) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26318 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "rob kardashian",
          "TopicEntityName": "Rob Kardashian",
          "TopicEntityMid": "m.043n6dp",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06t2qb",
              "EntityName": "USC Marshall School of Business"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1915",
      "RawQuestion": "where did harry s truman go to school?",
      "ProcessedQuestion": "where did harry s truman go to school",
      "Parses": [
        {
          "ParseId": "WebQTest-1915.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11613) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11613 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "harry s truman",
          "TopicEntityName": "Harry S. Truman",
          "TopicEntityMid": "m.09bg4l",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016vf7",
              "EntityName": "University of Missouri–Kansas City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064r775",
              "EntityName": "University of Missouri–Kansas City School of Law"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bvjpw",
              "EntityName": "William Chrisman High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1916",
      "RawQuestion": "what county is utica ny in?",
      "ProcessedQuestion": "what county is utica ny in",
      "Parses": [
        {
          "ParseId": "WebQTest-1916.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2495519) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2495519 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "utica ny",
          "TopicEntityName": "Utica",
          "TopicEntityMid": "m.0lpk3",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fc_9",
              "EntityName": "Oneida County"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1916.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0lpk3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0lpk3 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "utica ny",
          "TopicEntityName": "Utica",
          "TopicEntityMid": "m.0lpk3",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fc_9",
              "EntityName": "Oneida County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1919",
      "RawQuestion": "who plays king julian madagascar?",
      "ProcessedQuestion": "who plays king julian madagascar",
      "Parses": [
        {
          "ParseId": "WebQTest-1919.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q174555) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q174555 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q19268529 . } ",
          "PotentialTopicEntityMention": "madagascar",
          "TopicEntityName": "Madagascar",
          "TopicEntityMid": "m.01sbv9",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0cj5p22",
              "EntityName": "Julien",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c9c0",
              "EntityName": "Sacha Baron Cohen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1920",
      "RawQuestion": "who is rick scott?",
      "ProcessedQuestion": "who is rick scott",
      "Parses": [
        {
          "ParseId": "WebQTest-1920.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q439729) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q439729 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "rick scott",
          "TopicEntityName": "Rick Scott",
          "TopicEntityMid": "m.0btx2g",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sppp",
              "EntityName": "Investor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0289fz",
              "EntityName": "Executive officer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1921",
      "RawQuestion": "where did the crimean war take place?",
      "ProcessedQuestion": "where did the crimean war take place",
      "Parses": [
        {
          "ParseId": "WebQTest-1921.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q254106) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q254106 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "crimean",
          "TopicEntityName": "Crimean War",
          "TopicEntityMid": "m.0cmc2",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01522",
              "EntityName": "Baltic Sea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015h7",
              "EntityName": "Black Sea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jjk",
              "EntityName": "Balkans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09shn",
              "EntityName": "Caucasus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr7m",
              "EntityName": "Autonomous Republic of Crimea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k_hb",
              "EntityName": "White Sea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ndwhc3",
              "EntityName": "Crimea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1925",
      "RawQuestion": "who did james franco play in milk?",
      "ProcessedQuestion": "who did james franco play in milk",
      "Parses": [
        {
          "ParseId": "WebQTest-1925.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q201687) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q201687 wdt:P161 ?y . ?y wdt:P453 ?x . ?y wdt:P161 wd:Q306403 . } ",
          "PotentialTopicEntityMention": "milk",
          "TopicEntityName": "Milk",
          "TopicEntityMid": "m.03hkch7",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05bnp0",
              "EntityName": "James Franco",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zgntd",
              "EntityName": "Scott Smith"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1926",
      "RawQuestion": "when did the libyan conflict start?",
      "ProcessedQuestion": "when did the libyan conflict start",
      "Parses": [
        {
          "ParseId": "WebQTest-1926.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q210714) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q210714 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "libyan conflict",
          "TopicEntityName": "2011 military intervention in Libya",
          "TopicEntityMid": "m.0gh674m",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2011-03-19",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1928",
      "RawQuestion": "what wnba team is diana taurasi on?",
      "ProcessedQuestion": "what wnba team is diana taurasi on",
      "Parses": [
        {
          "ParseId": "WebQTest-1928.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "should add filter for WNBA. Otherwise is pretty good."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q240726) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q240726 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "diana taurasi",
          "TopicEntityName": "Diana Taurasi",
          "TopicEntityMid": "m.037bzt",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bmbqg2",
              "EntityName": "UMMC Ekaterinburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lr76",
              "EntityName": "Phoenix Mercury"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1937",
      "RawQuestion": "who is captain james cook facts?",
      "ProcessedQuestion": "who is captain james cook facts",
      "Parses": [
        {
          "ParseId": "WebQTest-1937.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7324) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7324 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "captain james cook",
          "TopicEntityName": "James Cook",
          "TopicEntityMid": "m.03_j8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016wtf",
              "EntityName": "Sailor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040vc4s",
              "EntityName": "Explorer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1943",
      "RawQuestion": "who founded the afl?",
      "ProcessedQuestion": "who founded the afl",
      "Parses": [
        {
          "ParseId": "WebQTest-1943.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464508) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464508 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "afl",
          "TopicEntityName": "American Football League",
          "TopicEntityMid": "m.0ysy",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wtr5",
              "EntityName": "Lamar Hunt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035yc3",
              "EntityName": "Bud Adams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1944",
      "RawQuestion": "where did diego velazquez die?",
      "ProcessedQuestion": "where did diego velazquez die",
      "Parses": [
        {
          "ParseId": "WebQTest-1944.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "diego velazquez",
          "TopicEntityName": "Diego Velázquez",
          "TopicEntityMid": "m.0k92y",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056_y",
              "EntityName": "Madrid"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1950",
      "RawQuestion": "where is president kennedy buried?",
      "ProcessedQuestion": "where is president kennedy buried",
      "Parses": [
        {
          "ParseId": "WebQTest-1950.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "president kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lbp_",
              "EntityName": "Arlington National Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1952",
      "RawQuestion": "where was the prophet mohammed from?",
      "ProcessedQuestion": "where was the prophet mohammed from",
      "Parses": [
        {
          "ParseId": "WebQTest-1952.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9458) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9458 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "mohammed",
          "TopicEntityName": "Muhammad in Islam",
          "TopicEntityMid": "m.04s9n",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.058wp",
              "EntityName": "Mecca"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1958",
      "RawQuestion": "where is chris rock from?",
      "ProcessedQuestion": "where is chris rock from",
      "Parses": [
        {
          "ParseId": "WebQTest-1958.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4109) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4109 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "chris rock",
          "TopicEntityName": "Chris Rock",
          "TopicEntityMid": "m.016_mj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013l1h",
              "EntityName": "Andrews"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1963",
      "RawQuestion": "what position did vince lombardi play?",
      "ProcessedQuestion": "what position did vince lombardi play",
      "Parses": [
        {
          "ParseId": "WebQTest-1963.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q553321) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q553321 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "vince lombardi",
          "TopicEntityName": "Vince Lombardi",
          "TopicEntityMid": "m.07_xf",
          "InferentialChain": [
            "american_football.football_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06v_1nj",
              "EntityName": "Right guard"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1964",
      "RawQuestion": "who played stanley kowalski in a streetcar named desire movie?",
      "ProcessedQuestion": "who played stanley kowalski in a streetcar named desire movie",
      "Parses": [
        {
          "ParseId": "WebQTest-1964.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q212129) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q212129 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q3496842 . } ",
          "PotentialTopicEntityMention": "a streetcar named desire movie",
          "TopicEntityName": "A Streetcar Named Desire",
          "TopicEntityMid": "m.097zcz",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03bhwh",
              "EntityName": "Stanley Kowalski",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04__f",
              "EntityName": "Marlon Brando"
            }
          ]
        },
        {
          "ParseId": "WebQTest-1964.P1",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03bhwh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03bhwh ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.097zcz .\n}\n",
          "PotentialTopicEntityMention": "stanley kowalski",
          "TopicEntityName": "Stanley Kowalski",
          "TopicEntityMid": "m.03bhwh",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.097zcz",
              "EntityName": "A Streetcar Named Desire",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04__f",
              "EntityName": "Marlon Brando"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1969",
      "RawQuestion": "what team is kris humphries play for?",
      "ProcessedQuestion": "what team is kris humphries play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1969.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q363421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q363421 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kris humphries",
          "TopicEntityName": "Kris Humphries",
          "TopicEntityMid": "m.0730b4",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm5b",
              "EntityName": "Washington Wizards"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1972",
      "RawQuestion": "where did john franklin live?",
      "ProcessedQuestion": "where did john franklin live",
      "Parses": [
        {
          "ParseId": "WebQTest-1972.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1647693) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1647693 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "john franklin",
          "TopicEntityName": "John Franklin",
          "TopicEntityMid": "m.06hw0m",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0s4jk",
              "EntityName": "Blue Island"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1976",
      "RawQuestion": "what team did drogba play for?",
      "ProcessedQuestion": "what team did drogba play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1976.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? assuming \"teams\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48892) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48892 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "drogba",
          "TopicEntityName": "Didier Drogba",
          "TopicEntityMid": "m.03_y2f",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023fb",
              "EntityName": "Chelsea F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gys2",
              "EntityName": "Olympique de Marseille"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040pyq",
              "EntityName": "Ivory Coast national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kd5d",
              "EntityName": "Shanghai Greenland Shenhua F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05nwfr",
              "EntityName": "En Avant de Guingamp"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0690ct",
              "EntityName": "Le Mans FC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06zpgb2",
              "EntityName": "Galatasaray S.K."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1978",
      "RawQuestion": "where does freddie ljungberg come from?",
      "ProcessedQuestion": "where does freddie ljungberg come from",
      "Parses": [
        {
          "ParseId": "WebQTest-1978.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10560) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10560 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "freddie ljungberg",
          "TopicEntityName": "Fredrik Ljungberg",
          "TopicEntityMid": "m.02g16c",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05p2z9b",
              "EntityName": "Vittsjö"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1982",
      "RawQuestion": "what type of music did vivaldi compose?",
      "ProcessedQuestion": "what type of music did vivaldi compose",
      "Parses": [
        {
          "ParseId": "WebQTest-1982.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1340) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1340 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "vivaldi",
          "TopicEntityName": "Antonio Vivaldi",
          "TopicEntityMid": "m.0pth",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fsz",
              "EntityName": "Baroque music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1985",
      "RawQuestion": "what team does mike fisher play for?",
      "ProcessedQuestion": "what team does mike fisher play for",
      "Parses": [
        {
          "ParseId": "WebQTest-1985.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q945715) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q945715 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "mike fisher",
          "TopicEntityName": "Mike Fisher",
          "TopicEntityMid": "m.07d7xv",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnr_",
              "EntityName": "Nashville Predators"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1988",
      "RawQuestion": "what did joe biden study in college?",
      "ProcessedQuestion": "what did joe biden study in college",
      "Parses": [
        {
          "ParseId": "WebQTest-1988.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6279) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6279 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "joe biden",
          "TopicEntityName": "Joe Biden",
          "TopicEntityMid": "m.012gx2",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03g3w",
              "EntityName": "History"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.062z7",
              "EntityName": "Political Science"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-1990",
      "RawQuestion": "who plays timon's voice in the lion king?",
      "ProcessedQuestion": "who plays timon 's voice in the lion king",
      "Parses": [
        {
          "ParseId": "WebQTest-1990.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36479) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36479 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q1073705 . } ",
          "PotentialTopicEntityMention": "the lion king",
          "TopicEntityName": "The Lion King",
          "TopicEntityMid": "m.0m63c",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0c31r0",
              "EntityName": "Timon",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01nxzv",
              "EntityName": "Nathan Lane"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2002",
      "RawQuestion": "what are the names of michael jackson's kids?",
      "ProcessedQuestion": "what are the names of michael jackson 's kids",
      "Parses": [
        {
          "ParseId": "WebQTest-2002.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rm4",
              "EntityName": "Paris-Michael Katherine Jackson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rmb",
              "EntityName": "Michael Joseph Jackson, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qbyj",
              "EntityName": "Prince Michael Jackson II"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2004",
      "RawQuestion": "what the time zone in japan?",
      "ProcessedQuestion": "what the time zone in japan",
      "Parses": [
        {
          "ParseId": "WebQTest-2004.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "japan",
          "TopicEntityName": "Japan",
          "TopicEntityMid": "m.03_3d",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019rdm",
              "EntityName": "Japan Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2006",
      "RawQuestion": "what race is vanessa carlton?",
      "ProcessedQuestion": "what race is vanessa carlton",
      "Parses": [
        {
          "ParseId": "WebQTest-2006.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q233081) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q233081 wdt:P172 ?x . } ",
          "PotentialTopicEntityMention": "vanessa carlton",
          "TopicEntityName": "Vanessa Carlton",
          "TopicEntityMid": "m.02sj66",
          "InferentialChain": [
            "people.person.ethnicity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t0ydg",
              "EntityName": "Scandinavians"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g6ff",
              "EntityName": "Russian"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2010",
      "RawQuestion": "what degrees does romney have?",
      "ProcessedQuestion": "what degrees does romney have",
      "Parses": [
        {
          "ParseId": "WebQTest-2010.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013zdg",
              "EntityName": "Juris Doctor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014mlp",
              "EntityName": "Bachelor of Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07s6fsf",
              "EntityName": "MBA"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2011",
      "RawQuestion": "where is bob marley buried?",
      "ProcessedQuestion": "where is bob marley buried",
      "Parses": [
        {
          "ParseId": "WebQTest-2011.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q409) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q409 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "bob marley",
          "TopicEntityName": "Bob Marley",
          "TopicEntityMid": "m.0bkf4",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggh7j1",
              "EntityName": "Bob Marley Mausoleum"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2012",
      "RawQuestion": "what is london uk time zone?",
      "ProcessedQuestion": "what is london uk time zone",
      "Parses": [
        {
          "ParseId": "WebQTest-2012.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q84) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q84 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "london",
          "TopicEntityName": "London",
          "TopicEntityMid": "m.04jpl",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2016",
      "RawQuestion": "where does fabio capello come from?",
      "ProcessedQuestion": "where does fabio capello come from",
      "Parses": [
        {
          "ParseId": "WebQTest-2016.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q183108) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q183108 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "fabio capello",
          "TopicEntityName": "Fabio Capello",
          "TopicEntityMid": "m.030_wt",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fgn_n",
              "EntityName": "San Canzian d'Isonzo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2018",
      "RawQuestion": "what did jack london do for a living?",
      "ProcessedQuestion": "what did jack london do for a living",
      "Parses": [
        {
          "ParseId": "WebQTest-2018.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q45765) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q45765 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jack london",
          "TopicEntityName": "Jack London",
          "TopicEntityMid": "m.0bt23",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016wtf",
              "EntityName": "Sailor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f1hr",
              "EntityName": "Essayist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2021",
      "RawQuestion": "what influenced john steinbeck to start writing?",
      "ProcessedQuestion": "what influenced john steinbeck to start writing",
      "Parses": [
        {
          "ParseId": "WebQTest-2021.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39212) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39212 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "john steinbeck",
          "TopicEntityName": "John Steinbeck",
          "TopicEntityMid": "m.04107",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023jy9",
              "EntityName": "Sherwood Anderson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jrh",
              "EntityName": "Thomas Malory"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084w8",
              "EntityName": "William Faulkner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09482",
              "EntityName": "Robert Burns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2022",
      "RawQuestion": "where is dwayne johnson ethnicity?",
      "ProcessedQuestion": "where is dwayne johnson ethnicity",
      "Parses": [
        {
          "ParseId": "WebQTest-2022.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10738) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10738 wdt:P172 ?x . } ",
          "PotentialTopicEntityMention": "dwayne johnson",
          "TopicEntityName": "Dwayne Johnson",
          "TopicEntityMid": "m.014g_s",
          "InferentialChain": [
            "people.person.ethnicity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07j80c",
              "EntityName": "Samoan American"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x67",
              "EntityName": "African American"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2025",
      "RawQuestion": "which ocean does the zambezi river flow into?",
      "ProcessedQuestion": "which ocean does the zambezi river flow into",
      "Parses": [
        {
          "ParseId": "WebQTest-2025.P0",
          "AnnotatorId": 0,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43106) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43106 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "zambezi river",
          "TopicEntityName": "Zambezi",
          "TopicEntityMid": "m.0p_70",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rz4",
              "EntityName": "Indian Ocean"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2027",
      "RawQuestion": "what team did david beckham play for before la galaxy?",
      "ProcessedQuestion": "what team did david beckham play for before la galaxy",
      "Parses": [
        {
          "ParseId": "WebQTest-2027.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Before. Original comment: !Manual AnswerAndPartialSparql. Comment: F Before. Original comment: F \"before\""
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { filter(?x != wd:Q50602) wd:Q10520 wdt:P54 ?z . #beckham ?z wdt:P54 wd:Q204357 . #galaxy ?z wdt:P580 ?from . wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . ?y  wdt:P582 ?to . } ORDER BY ASC(xsd:datetime(?from)) LIMIT 1",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050fh",
              "EntityName": "Manchester United F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTest-2031",
      "RawQuestion": "when was father chris riley born?",
      "ProcessedQuestion": "when was father chris riley born",
      "Parses": [
        {
          "ParseId": "WebQTest-2031.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5107872) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5107872 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "father chris riley",
          "TopicEntityName": "Chris Riley",
          "TopicEntityMid": "m.03d8_d9",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h3p0",
              "EntityName": "Echuca"
            }
          ]
        }
      ]
    }
  ]
}