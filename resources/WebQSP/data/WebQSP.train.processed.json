{
  "Version": "1.0",
  "FreebaseVersion": "2015-08-09",
  "Questions": [
    {
      "QuestionId": "WebQTrn-6",
      "RawQuestion": "who does joakim noah play for?",
      "ProcessedQuestion": "who does joakim noah play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-6.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311735) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311735 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "joakim noah",
          "TopicEntityName": "Joakim Noah",
          "TopicEntityMid": "m.0c2yrf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm74",
              "EntityName": "Chicago Bulls"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-8",
      "RawQuestion": "where did saki live?",
      "ProcessedQuestion": "where did saki live",
      "Parses": [
        {
          "ParseId": "WebQTrn-8.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311526) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311526 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "saki",
          "TopicEntityName": "Saki",
          "TopicEntityMid": "m.07484",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05ql8_",
              "EntityName": "Sittwe"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-9",
      "RawQuestion": "how old is sacha baron cohen?",
      "ProcessedQuestion": "how old is sacha baron cohen",
      "Parses": [
        {
          "ParseId": "WebQTrn-9.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q29055) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q29055 wdt:P569 ?x . } ",
          "PotentialTopicEntityMention": "sacha baron cohen",
          "TopicEntityName": "Sacha Baron Cohen",
          "TopicEntityMid": "m.0c9c0",
          "InferentialChain": [
            "people.person.date_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1971-10-13",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-11",
      "RawQuestion": "what time zone am i in cleveland ohio?",
      "ProcessedQuestion": "what time zone am i in cleveland ohio",
      "Parses": [
        {
          "ParseId": "WebQTrn-11.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37320) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37320 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "cleveland ohio",
          "TopicEntityName": "Cleveland",
          "TopicEntityMid": "m.01sn3",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-15",
      "RawQuestion": "what is nina dobrev nationality?",
      "ProcessedQuestion": "what is nina dobrev nationality",
      "Parses": [
        {
          "ParseId": "WebQTrn-15.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q183439) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q183439 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "nina dobrev",
          "TopicEntityName": "Nina Dobrev",
          "TopicEntityMid": "m.027nwk2",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015qh",
              "EntityName": "Bulgaria"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d060g",
              "EntityName": "Canada"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-36",
      "RawQuestion": "what city did esther live in?",
      "ProcessedQuestion": "what city did esther live in",
      "Parses": [
        {
          "ParseId": "WebQTrn-36.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q732413) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q732413 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "esther",
          "TopicEntityName": "Esther",
          "TopicEntityMid": "m.02pn7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gf0n",
              "EntityName": "Susa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-40",
      "RawQuestion": "what is cher's son's name?",
      "ProcessedQuestion": "what is cher 's son 's name",
      "Parses": [
        {
          "ParseId": "WebQTrn-40.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q12003) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q12003 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "cher",
          "TopicEntityName": "Cher",
          "TopicEntityMid": "m.01vtj38",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w4bt1",
              "EntityName": "Elijah Blue Allman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0br66",
              "EntityName": "Chaz Bono"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-46",
      "RawQuestion": "what did william shakespeare do for a living?",
      "ProcessedQuestion": "what did william shakespeare do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-46.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "william shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025352",
              "EntityName": "Lyricist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hv44_",
              "EntityName": "Playwright"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-52",
      "RawQuestion": "where do the san francisco giants play home games?",
      "ProcessedQuestion": "where do the san francisco giants play home games",
      "Parses": [
        {
          "ParseId": "WebQTrn-52.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q308966) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q308966 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "san francisco giants",
          "TopicEntityName": "San Francisco Giants",
          "TopicEntityMid": "m.0713r",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_gsg",
              "EntityName": "AT&T Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-62",
      "RawQuestion": "what are the names of walt disney kids?",
      "ProcessedQuestion": "what are the names of walt disney kids",
      "Parses": [
        {
          "ParseId": "WebQTrn-62.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8704) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8704 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "walt disney",
          "TopicEntityName": "Walt Disney",
          "TopicEntityMid": "m.081nh",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064ndq",
              "EntityName": "Diane Disney Miller"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kyh5",
              "EntityName": "Sharon Mae Disney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-65",
      "RawQuestion": "what timezone is australia gmt?",
      "ProcessedQuestion": "what timezone is australia gmt",
      "Parses": [
        {
          "ParseId": "WebQTrn-65.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q408) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q408 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "australia",
          "TopicEntityName": "Australia",
          "TopicEntityMid": "m.0chghy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y497_m",
              "EntityName": "Australian Eastern Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y497zw",
              "EntityName": "Australian Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4980d",
              "EntityName": "Australian Western Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y498qn",
              "EntityName": "Casey Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y498v7",
              "EntityName": "Central Western Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y49954",
              "EntityName": "Christmas Island Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y49994",
              "EntityName": "Cocos Islands Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y499p1",
              "EntityName": "Davis Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y49btq",
              "EntityName": "Heard and McDonald Islands Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4dpjf",
              "EntityName": "Lord Howe Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4dr4c",
              "EntityName": "Mawson Station Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4drym",
              "EntityName": "Norfolk Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-67",
      "RawQuestion": "what style of music did louis armstrong play?",
      "ProcessedQuestion": "what style of music did louis armstrong play",
      "Parses": [
        {
          "ParseId": "WebQTrn-67.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015y_n",
              "EntityName": "Swing music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_d0",
              "EntityName": "Jazz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09xw2",
              "EntityName": "Dixieland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dhb2",
              "EntityName": "Scat singing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m40d",
              "EntityName": "Traditional pop music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-70",
      "RawQuestion": "what timezone is denver co?",
      "ProcessedQuestion": "what timezone is denver co",
      "Parses": [
        {
          "ParseId": "WebQTrn-70.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16554) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16554 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "denver co",
          "TopicEntityName": "Denver",
          "TopicEntityMid": "m.02cl1",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-72",
      "RawQuestion": "where does jackie french live?",
      "ProcessedQuestion": "where does jackie french live",
      "Parses": [
        {
          "ParseId": "WebQTrn-72.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q542933) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q542933 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jackie french",
          "TopicEntityName": "Jackie French",
          "TopicEntityMid": "m.0c9xl9",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y57",
              "EntityName": "Sydney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-78",
      "RawQuestion": "what school did joan miro attend?",
      "ProcessedQuestion": "what school did joan miro attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-78.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q152384) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q152384 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "joan miro",
          "TopicEntityName": "Joan Mir",
          "TopicEntityMid": "m.0g_6k",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06w5jjm",
              "EntityName": "Cercle Artístic de Sant Lluc"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-80",
      "RawQuestion": "who was vincent van gogh inspired by?",
      "ProcessedQuestion": "who was vincent van gogh inspired by",
      "Parses": [
        {
          "ParseId": "WebQTrn-80.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5582 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "vincent van gogh",
          "TopicEntityName": "Vincent van Gogh",
          "TopicEntityMid": "m.07_m2",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016s03",
              "EntityName": "Eugène Delacroix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xnj",
              "EntityName": "Claude Monet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0452w",
              "EntityName": "Jean-François Millet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056100",
              "EntityName": "Jozef Israëls"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t6y5",
              "EntityName": "Anton Mauve"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063mx",
              "EntityName": "Paul Cézanne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08hrl7",
              "EntityName": "Fernand Cormon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bskv2",
              "EntityName": "Rembrandt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fmjym",
              "EntityName": "Willem Roelofs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pwnh",
              "EntityName": "Peter Paul Rubens"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-91",
      "RawQuestion": "what sea does the yangtze river flow into?",
      "ProcessedQuestion": "what sea does the yangtze river flow into",
      "Parses": [
        {
          "ParseId": "WebQTrn-91.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5413) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5413 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "yangtze river",
          "TopicEntityName": "Yangtze",
          "TopicEntityMid": "m.01y4t",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018smn",
              "EntityName": "East China Sea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-97",
      "RawQuestion": "where do the ny rangers play?",
      "ProcessedQuestion": "where do the ny rangers play",
      "Parses": [
        {
          "ParseId": "WebQTrn-97.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188984) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188984 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "ny rangers",
          "TopicEntityName": "New York Rangers",
          "TopicEntityMid": "m.0hmtk",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_66",
              "EntityName": "Madison Square Garden"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-98",
      "RawQuestion": "where is jefferson davis buried?",
      "ProcessedQuestion": "where is jefferson davis buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-98.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q162269) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q162269 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "jefferson davis",
          "TopicEntityName": "Jefferson Davis",
          "TopicEntityMid": "m.043q0",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.048sj4",
              "EntityName": "Hollywood Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-102",
      "RawQuestion": "what awards has louis sachar won?",
      "ProcessedQuestion": "what awards has louis sachar won",
      "Parses": [
        {
          "ParseId": "WebQTrn-102.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q553137) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q553137 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "louis sachar",
          "TopicEntityName": "Louis Sachar",
          "TopicEntityMid": "m.01bq8d",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cd7p",
              "EntityName": "John Newbery Medal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027x4ws",
              "EntityName": "Dorothy Canfield Fisher Children's Book Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p0vr7",
              "EntityName": "National Book Award for Young People's Literature"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09kkqzd",
              "EntityName": "Anne V. Zarrow Award for Young Readers' Literature"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-108",
      "RawQuestion": "where did benjamin franklin died?",
      "ProcessedQuestion": "where did benjamin franklin died",
      "Parses": [
        {
          "ParseId": "WebQTrn-108.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "benjamin franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dclg",
              "EntityName": "Philadelphia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-117",
      "RawQuestion": "where did dr seuss go to school?",
      "ProcessedQuestion": "where did dr seuss go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-117.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q298685) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q298685 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "dr seuss",
          "TopicEntityName": "Theodore Lesieg",
          "TopicEntityMid": "m.02g3w",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bqy",
              "EntityName": "Dartmouth College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tgn",
              "EntityName": "University of Oxford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ym1n",
              "EntityName": "Lincoln College, Oxford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-118",
      "RawQuestion": "what team does luis suarez play for?",
      "ProcessedQuestion": "what team does luis suarez play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-118.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26517) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26517 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "luis suarez",
          "TopicEntityName": "Luis Suárez",
          "TopicEntityMid": "m.026f4lr",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0329r5",
              "EntityName": "Uruguay national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-125",
      "RawQuestion": "where did martin luther king got shot?",
      "ProcessedQuestion": "where did martin luther king got shot",
      "Parses": [
        {
          "ParseId": "WebQTrn-125.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-131",
      "RawQuestion": "where do baltimore ravens play?",
      "ProcessedQuestion": "where do baltimore ravens play",
      "Parses": [
        {
          "ParseId": "WebQTrn-131.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q276539) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q276539 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "baltimore ravens",
          "TopicEntityName": "Baltimore Ravens",
          "TopicEntityMid": "m.01ct6",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yq7r",
              "EntityName": "M&T Bank Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-133",
      "RawQuestion": "who does brandon dubinsky play for?",
      "ProcessedQuestion": "who does brandon dubinsky play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-133.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q898139) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q898139 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "brandon dubinsky",
          "TopicEntityName": "Brandon Dubinsky",
          "TopicEntityMid": "m.02863hf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnm2",
              "EntityName": "Columbus Blue Jackets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-137",
      "RawQuestion": "what jobs did ben franklin do?",
      "ProcessedQuestion": "what jobs did ben franklin do",
      "Parses": [
        {
          "ParseId": "WebQTrn-137.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ben franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01l5t6",
              "EntityName": "Librarian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kv97_",
              "EntityName": "Satirist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r6c",
              "EntityName": "Printer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05svgpc",
              "EntityName": "Political activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080ntlp",
              "EntityName": "Diplomat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-143",
      "RawQuestion": "what did nick clegg study at university?",
      "ProcessedQuestion": "what did nick clegg study at university",
      "Parses": [
        {
          "ParseId": "WebQTrn-143.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q189947) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q189947 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "nick clegg",
          "TopicEntityName": "Nick Clegg",
          "TopicEntityMid": "m.036547",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r79",
              "EntityName": "Political philosophy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.074n0",
              "EntityName": "Social anthropology"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-145",
      "RawQuestion": "what school did cassie bernall go to?",
      "ProcessedQuestion": "what school did cassie bernall go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-145.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76085) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76085 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "cassie bernall",
          "TopicEntityName": "Cassie Bernall",
          "TopicEntityMid": "m.0219mf",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021djq",
              "EntityName": "Columbine High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-150",
      "RawQuestion": "what was nelson mandela's religion?",
      "ProcessedQuestion": "what was nelson mandela 's religion",
      "Parses": [
        {
          "ParseId": "WebQTrn-150.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8023) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8023 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "nelson mandela",
          "TopicEntityName": "Nelson Mandela",
          "TopicEntityMid": "m.05g7q",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051kv",
              "EntityName": "Methodism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-152",
      "RawQuestion": "what is henry clay known for?",
      "ProcessedQuestion": "what is henry clay known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-152.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q319630) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q319630 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "henry clay",
          "TopicEntityName": "Henry Clay",
          "TopicEntityMid": "m.0ct18",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-159",
      "RawQuestion": "what time zone is oklahoma state?",
      "ProcessedQuestion": "what time zone is oklahoma state",
      "Parses": [
        {
          "ParseId": "WebQTrn-159.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1649) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1649 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "oklahoma",
          "TopicEntityName": "Oklahoma",
          "TopicEntityMid": "m.05mph",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-163",
      "RawQuestion": "what team did shaq play for first?",
      "ProcessedQuestion": "what team did shaq play for first",
      "Parses": [
        {
          "ParseId": "WebQTrn-163.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q169452) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q169452 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "shaq",
          "TopicEntityName": "Shaquille O'Neal",
          "TopicEntityMid": "m.012xdf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026dqjm",
              "EntityName": "LSU Tigers men's basketball"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-164",
      "RawQuestion": "where was kennedy when he got shot?",
      "ProcessedQuestion": "where was kennedy when he got shot",
      "Parses": [
        {
          "ParseId": "WebQTrn-164.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2rq",
              "EntityName": "Dallas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-166",
      "RawQuestion": "where did the casey anthony case take place?",
      "ProcessedQuestion": "where did the casey anthony case take place",
      "Parses": [
        {
          "ParseId": "WebQTrn-166.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1056362) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1056362 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "casey anthony",
          "TopicEntityName": "Death of Caylee Anthony",
          "TopicEntityMid": "m.04gtx2_",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ply0",
              "EntityName": "Orlando"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-171",
      "RawQuestion": "when were the texas rangers started?",
      "ProcessedQuestion": "when were the texas rangers started",
      "Parses": [
        {
          "ParseId": "WebQTrn-171.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q329816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q329816 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "texas rangers",
          "TopicEntityName": "Texas Rangers",
          "TopicEntityMid": "m.07l8x",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1972",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-176",
      "RawQuestion": "where was gabriel faure born?",
      "ProcessedQuestion": "where was gabriel faure born",
      "Parses": [
        {
          "ParseId": "WebQTrn-176.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q104919) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q104919 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "gabriel faure",
          "TopicEntityName": "Gabriel Fauré",
          "TopicEntityMid": "m.0jn7y",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063bzq",
              "EntityName": "Pamiers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-179",
      "RawQuestion": "where did the massive allied invasion of northern france take place in june 1944?",
      "ProcessedQuestion": "where did the massive allied invasion of northern france take place in june 1944",
      "Parses": [
        {
          "ParseId": "WebQTrn-179.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? technically, the entity linking does more than it should"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16471) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16471 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "allied invasion",
          "TopicEntityName": "Invasion of Normandy",
          "TopicEntityMid": "m.0chhs",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g56",
              "EntityName": "Normandy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-181",
      "RawQuestion": "what is the postcode for london?",
      "ProcessedQuestion": "what is the postcode for london",
      "Parses": [
        {
          "ParseId": "WebQTrn-181.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q84) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q84 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "london",
          "TopicEntityName": "London",
          "TopicEntityMid": "m.04jpl",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09rzxp9",
              "EntityName": "SW1X 8RN"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sfglt",
              "EntityName": "SW3 6RS"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cvp88j",
              "EntityName": "W1W5BD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cxn7ws",
              "EntityName": "E5 8BP"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cxsp04",
              "EntityName": "E6 6ER"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cxss5g",
              "EntityName": "E15 4HT"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy0j66",
              "EntityName": "SE1 7JW"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy1q47",
              "EntityName": "WC1X 8RA"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy1sy5",
              "EntityName": "SW1P 2PD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy1z55",
              "EntityName": "W1F 0HS"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy1ztb",
              "EntityName": "NW1 3HB"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy6s01",
              "EntityName": "W11 3JS"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy8plg",
              "EntityName": "SW5 0HL"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-192",
      "RawQuestion": "what influenced vincent van gogh work?",
      "ProcessedQuestion": "what influenced vincent van gogh work",
      "Parses": [
        {
          "ParseId": "WebQTrn-192.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5582 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "vincent van gogh",
          "TopicEntityName": "Vincent van Gogh",
          "TopicEntityMid": "m.07_m2",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016s03",
              "EntityName": "Eugène Delacroix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xnj",
              "EntityName": "Claude Monet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0452w",
              "EntityName": "Jean-François Millet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056100",
              "EntityName": "Jozef Israëls"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t6y5",
              "EntityName": "Anton Mauve"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063mx",
              "EntityName": "Paul Cézanne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08hrl7",
              "EntityName": "Fernand Cormon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bskv2",
              "EntityName": "Rembrandt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fmjym",
              "EntityName": "Willem Roelofs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pwnh",
              "EntityName": "Peter Paul Rubens"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-193",
      "RawQuestion": "what time zones are there in the us?",
      "ProcessedQuestion": "what time zones are there in the us",
      "Parses": [
        {
          "ParseId": "WebQTrn-193.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "us",
          "TopicEntityName": "United States of America",
          "TopicEntityMid": "m.09c7w0",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027wj2_",
              "EntityName": "Samoa Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027wjl3",
              "EntityName": "Chamorro Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcrv",
              "EntityName": "Alaska Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.042g7t",
              "EntityName": "Atlantic Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-199",
      "RawQuestion": "where did jeff dunham go to school?",
      "ProcessedQuestion": "where did jeff dunham go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-199.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296567) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296567 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jeff dunham",
          "TopicEntityName": "Jeff Dunham",
          "TopicEntityMid": "m.0ch_0g",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tx9m",
              "EntityName": "Baylor University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-201",
      "RawQuestion": "who does david james play for 2011?",
      "ProcessedQuestion": "who does david james play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-201.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10598) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10598 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david james",
          "TopicEntityName": "David James",
          "TopicEntityMid": "m.038m_v",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dtl",
              "EntityName": "Bristol City F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-204",
      "RawQuestion": "what is the zip code for minneapolis?",
      "ProcessedQuestion": "what is the zip code for minneapolis",
      "Parses": [
        {
          "ParseId": "WebQTrn-204.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36091) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36091 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "minneapolis",
          "TopicEntityName": "Minneapolis",
          "TopicEntityMid": "m.0fpzwf",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_x_4z",
              "EntityName": "55401"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_x_8g",
              "EntityName": "55434"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_x_qk",
              "EntityName": "55449"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0_0",
              "EntityName": "55439"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0gq",
              "EntityName": "55425"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0jp",
              "EntityName": "55431"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0kh",
              "EntityName": "55420"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0ms",
              "EntityName": "55437"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y0q_",
              "EntityName": "55435"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y1yp",
              "EntityName": "55438"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y3_x",
              "EntityName": "55428"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y3h3",
              "EntityName": "55429"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y3j5",
              "EntityName": "55430"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y41c",
              "EntityName": "55445"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y467",
              "EntityName": "55443"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y48c",
              "EntityName": "55444"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y7w7",
              "EntityName": "55421"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y83k",
              "EntityName": "55448"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y89x",
              "EntityName": "55433"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_y9z4",
              "EntityName": "55422"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yd4v",
              "EntityName": "55424"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ydb4",
              "EntityName": "55410"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ydmy",
              "EntityName": "55436"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yhvb",
              "EntityName": "55432"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yjfc",
              "EntityName": "55416"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yjgp",
              "EntityName": "55426"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yjjm",
              "EntityName": "55427"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yjqc",
              "EntityName": "55441"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yqg4",
              "EntityName": "55417"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yr_z",
              "EntityName": "55408"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yrfl",
              "EntityName": "55406"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yrgm",
              "EntityName": "55403"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yrlg",
              "EntityName": "55414"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yrpq",
              "EntityName": "55402"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yry4",
              "EntityName": "55407"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ys37",
              "EntityName": "55413"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ys66",
              "EntityName": "55409"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ysl3",
              "EntityName": "55405"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yszb",
              "EntityName": "55404"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ytb1",
              "EntityName": "55419"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_ytcq",
              "EntityName": "55415"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yv9p",
              "EntityName": "55423"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yvfs",
              "EntityName": "55411"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yxn1",
              "EntityName": "55447"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yxyn",
              "EntityName": "55454"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_yycq",
              "EntityName": "55418"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_zhy6",
              "EntityName": "55412"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_znb8",
              "EntityName": "55442"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_zp8l",
              "EntityName": "55446"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wvhc5",
              "EntityName": "55455"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ds9j3",
              "EntityName": "55450"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpnj",
              "EntityName": "55488"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpnr",
              "EntityName": "55487"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpnz",
              "EntityName": "55486"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpp5",
              "EntityName": "55485"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqppd",
              "EntityName": "55484"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqppm",
              "EntityName": "55483"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqppv",
              "EntityName": "55480"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpq_",
              "EntityName": "55472"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpq1",
              "EntityName": "55479"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpq8",
              "EntityName": "55478"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpqh",
              "EntityName": "55474"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpqq",
              "EntityName": "55473"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqpr6",
              "EntityName": "55470"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqprf",
              "EntityName": "55467"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqprn",
              "EntityName": "55460"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqprw",
              "EntityName": "55459"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqps2",
              "EntityName": "55458"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqps9",
              "EntityName": "55440"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09rzq2n",
              "EntityName": "55422-3330"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-205",
      "RawQuestion": "what country is the west bank located in?",
      "ProcessedQuestion": "what country is the west bank located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-205.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36678) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36678 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "west bank",
          "TopicEntityName": "West Bank",
          "TopicEntityMid": "m.082pc",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0604m",
              "EntityName": "Palestinian National Authority"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-205.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0nyg5)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0nyg5 ns:government.governmental_jurisdiction.government_bodies ?x .\n}\n",
          "PotentialTopicEntityMention": "west bank",
          "TopicEntityName": "Palestinian territories",
          "TopicEntityMid": "m.0nyg5",
          "InferentialChain": [
            "government.governmental_jurisdiction.government_bodies"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0604m",
              "EntityName": "Palestinian National Authority"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-205.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.082pc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.082pc ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "west bank",
          "TopicEntityName": "West Bank",
          "TopicEntityMid": "m.082pc",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k0p4",
              "EntityName": "State of Palestine"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-206",
      "RawQuestion": "who won golden boot?",
      "ProcessedQuestion": "who won golden boot",
      "Parses": [
        {
          "ParseId": "WebQTrn-206.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "Golden Boot can mean many awards"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q794775) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q794775 wdt:P1346 ?y . ?y wdt:P1346 ?x . } ",
          "PotentialTopicEntityMention": "golden boot",
          "TopicEntityName": "Premier League Golden Boot",
          "TopicEntityMid": "m.0by030z",
          "InferentialChain": [
            "award.award_category.winners",
            "award.award_honor.award_winner"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xt6q",
              "EntityName": "Cristiano Ronaldo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04j7c7",
              "EntityName": "Robin van Persie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-207",
      "RawQuestion": "where did jane mansfield die?",
      "ProcessedQuestion": "where did jane mansfield die",
      "Parses": [
        {
          "ParseId": "WebQTrn-207.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229507) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229507 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jane mansfield",
          "TopicEntityName": "Jayne Mansfield",
          "TopicEntityMid": "m.024y6w",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tmsj",
              "EntityName": "Slidell"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-210",
      "RawQuestion": "what school did william shakespeare attend?",
      "ProcessedQuestion": "what school did william shakespeare attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-210.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "william shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08p297",
              "EntityName": "King Edward VI School, Stratford-upon-Avon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-222",
      "RawQuestion": "where did matthias schleiden go to school?",
      "ProcessedQuestion": "where did matthias schleiden go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-222.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76747) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76747 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "matthias schleiden",
          "TopicEntityName": "Matthias Jakob Schleiden",
          "TopicEntityMid": "m.0dd3q",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pmcz",
              "EntityName": "Heidelberg University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-240",
      "RawQuestion": "what year was the great san francisco fire?",
      "ProcessedQuestion": "what year was the great san francisco fire",
      "Parses": [
        {
          "ParseId": "WebQTrn-240.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211386) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211386 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "san francisco fire",
          "TopicEntityName": "1906 San Francisco earthquake",
          "TopicEntityMid": "m.01f6rm",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1906-04-18",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-244",
      "RawQuestion": "what city was leonardo da vinci from?",
      "ProcessedQuestion": "what city was leonardo da vinci from",
      "Parses": [
        {
          "ParseId": "WebQTrn-244.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q762) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q762 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "leonardo da vinci",
          "TopicEntityName": "Leonardo da Vinci",
          "TopicEntityMid": "m.04lg6",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.032kkn",
              "EntityName": "Vinci"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-245",
      "RawQuestion": "what did george v die of?",
      "ProcessedQuestion": "what did george v die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-245.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q269412) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q269412 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "george v",
          "TopicEntityName": "George V",
          "TopicEntityMid": "m.0cmpn",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02m25",
              "EntityName": "Euthanasia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-248",
      "RawQuestion": "who started pixar?",
      "ProcessedQuestion": "who started pixar",
      "Parses": [
        {
          "ParseId": "WebQTrn-248.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127552) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127552 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "pixar",
          "TopicEntityName": "Pixar",
          "TopicEntityMid": "m.0kk9v",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017h4c",
              "EntityName": "Edwin Catmull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y3r",
              "EntityName": "Steve Jobs"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-255",
      "RawQuestion": "what year was the new york blackout?",
      "ProcessedQuestion": "what year was the new york blackout",
      "Parses": [
        {
          "ParseId": "WebQTrn-255.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2425884) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2425884 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "new york blackout",
          "TopicEntityName": "New York City blackout of 1977",
          "TopicEntityMid": "m.02j2gt",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1977-07-13",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-257",
      "RawQuestion": "what position does rafael furcal play?",
      "ProcessedQuestion": "what position does rafael furcal play",
      "Parses": [
        {
          "ParseId": "WebQTrn-257.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2339046) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2339046 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "rafael furcal",
          "TopicEntityName": "Rafael Furcal",
          "TopicEntityMid": "m.03jtzg",
          "InferentialChain": [
            "baseball.baseball_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017drs",
              "EntityName": "Shortstop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rsl1",
              "EntityName": "Second baseman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-260",
      "RawQuestion": "where did rihanna grow up?",
      "ProcessedQuestion": "where did rihanna grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-260.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36844) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36844 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "rihanna",
          "TopicEntityName": "Rihanna",
          "TopicEntityMid": "m.06mt91",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p5kp",
              "EntityName": "Saint Michael Parish"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-263",
      "RawQuestion": "what country did james cook come from?",
      "ProcessedQuestion": "what country did james cook come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-263.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7324) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7324 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "james cook",
          "TopicEntityName": "James Cook",
          "TopicEntityMid": "m.03_j8",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014tss",
              "EntityName": "Kingdom of Great Britain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-266",
      "RawQuestion": "when did the christchurch quake happened?",
      "ProcessedQuestion": "when did the christchurch quake happened",
      "Parses": [
        {
          "ParseId": "WebQTrn-266.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q151850) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q151850 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "christchurch quake",
          "TopicEntityName": "2011 Christchurch earthquake",
          "TopicEntityMid": "m.0gg9kfr",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2011-02-22",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-272",
      "RawQuestion": "where was the battle of antietam creek?",
      "ProcessedQuestion": "where was the battle of antietam creek",
      "Parses": [
        {
          "ParseId": "WebQTrn-272.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q719252) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q719252 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of antietam",
          "TopicEntityName": "Battle of Antietam",
          "TopicEntityMid": "m.0lkxb",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04rrd",
              "EntityName": "Maryland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0txnb",
              "EntityName": "Sharpsburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-283",
      "RawQuestion": "what year did william mckinley became president?",
      "ProcessedQuestion": "what year did william mckinley became president",
      "Parses": [
        {
          "ParseId": "WebQTrn-283.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35041) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35041 wdt:P39 ?y . ?y wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "william mckinley",
          "TopicEntityName": "William McKinley",
          "TopicEntityMid": "m.083p7",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1892-01-11",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1897-03-04",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-285",
      "RawQuestion": "what timezone is colorado in right now?",
      "ProcessedQuestion": "what timezone is colorado in right now",
      "Parses": [
        {
          "ParseId": "WebQTrn-285.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1261) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1261 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "colorado",
          "TopicEntityName": "Colorado",
          "TopicEntityMid": "m.01n4w",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-289",
      "RawQuestion": "who will david beckham play for in 2013?",
      "ProcessedQuestion": "who will david beckham play for in 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-289.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "time period"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_1kk",
              "EntityName": "Paris Saint-Germain F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-292",
      "RawQuestion": "what county is novato california in?",
      "ProcessedQuestion": "what county is novato california in",
      "Parses": [
        {
          "ParseId": "WebQTrn-292.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q851004) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q851004 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "novato california",
          "TopicEntityName": "Novato",
          "TopicEntityMid": "m.0r1hb",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2hf",
              "EntityName": "Marin County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-292.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r1hb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r1hb ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "novato california",
          "TopicEntityName": "Novato",
          "TopicEntityMid": "m.0r1hb",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2hf",
              "EntityName": "Marin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-294",
      "RawQuestion": "where did hernando cortez die?",
      "ProcessedQuestion": "where did hernando cortez die",
      "Parses": [
        {
          "ParseId": "WebQTrn-294.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7326) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7326 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "hernando cortez",
          "TopicEntityName": "Hernán Cortés",
          "TopicEntityMid": "m.03m_h",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08hf27",
              "EntityName": "Castilleja de la Cuesta"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-303",
      "RawQuestion": "what inspired langston hughes to write poetry?",
      "ProcessedQuestion": "what inspired langston hughes to write poetry",
      "Parses": [
        {
          "ParseId": "WebQTrn-303.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188093) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188093 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "langston hughes",
          "TopicEntityName": "Langston Hughes",
          "TopicEntityMid": "m.0bv62",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.085gk",
              "EntityName": "Walt Whitman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-307",
      "RawQuestion": "where did henry knox die?",
      "ProcessedQuestion": "where did henry knox die",
      "Parses": [
        {
          "ParseId": "WebQTrn-307.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q355680) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q355680 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "henry knox",
          "TopicEntityName": "Henry Knox",
          "TopicEntityMid": "m.01hx16",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03897b",
              "EntityName": "Thomaston"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-317",
      "RawQuestion": "what sport does sally pearson compete in?",
      "ProcessedQuestion": "what sport does sally pearson compete in",
      "Parses": [
        {
          "ParseId": "WebQTrn-317.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6026) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6026 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "sally pearson",
          "TopicEntityName": "Sally Pearson",
          "TopicEntityMid": "m.0287hgn",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01445t",
              "EntityName": "Athlete"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059846g",
              "EntityName": "Track and field athlete"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-318",
      "RawQuestion": "where is atlanta texas located?",
      "ProcessedQuestion": "where is atlanta texas located",
      "Parses": [
        {
          "ParseId": "WebQTrn-318.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q756137) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q756137 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "atlanta texas",
          "TopicEntityName": "Atlanta",
          "TopicEntityMid": "m.0_ztb",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0msb1",
              "EntityName": "Cass County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-320",
      "RawQuestion": "where is tom cruise from?",
      "ProcessedQuestion": "where is tom cruise from",
      "Parses": [
        {
          "ParseId": "WebQTrn-320.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37079) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37079 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tom cruise",
          "TopicEntityName": "Tom Cruise",
          "TopicEntityMid": "m.07r1h",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.071cn",
              "EntityName": "Syracuse"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-322",
      "RawQuestion": "where does leland chapman live now?",
      "ProcessedQuestion": "where does leland chapman live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-322.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1474347) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1474347 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "leland chapman",
          "TopicEntityName": "Leland Blaine Chapman",
          "TopicEntityMid": "m.05yqrl",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r_g0",
              "EntityName": "Kailua"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-326",
      "RawQuestion": "what time zone is new york under?",
      "ProcessedQuestion": "what time zone is new york under",
      "Parses": [
        {
          "ParseId": "WebQTrn-326.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1384) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1384 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "new york",
          "TopicEntityName": "New York",
          "TopicEntityMid": "m.059rby",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-331",
      "RawQuestion": "where did bashar al assad study?",
      "ProcessedQuestion": "where did bashar al assad study",
      "Parses": [
        {
          "ParseId": "WebQTrn-331.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44329) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44329 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "bashar al assad",
          "TopicEntityName": "Bashar al-Assad",
          "TopicEntityMid": "m.01_vwx",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07pnw6",
              "EntityName": "Damascus University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-332",
      "RawQuestion": "who plays lois lane in superman returns?",
      "ProcessedQuestion": "who plays lois lane in superman returns",
      "Parses": [
        {
          "ParseId": "WebQTrn-332.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q328695) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q328695 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q845922 . } ",
          "PotentialTopicEntityMention": "superman returns",
          "TopicEntityName": "Superman Returns",
          "TopicEntityMid": "m.044g_k",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04pzy",
              "EntityName": "Lois Lane",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03db_h",
              "EntityName": "Kate Bosworth"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-332.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04pzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04pzy ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.044g_k .\n}\n",
          "PotentialTopicEntityMention": "lois lane",
          "TopicEntityName": "Lois Lane",
          "TopicEntityMid": "m.04pzy",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.044g_k",
              "EntityName": "Superman Returns",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03db_h",
              "EntityName": "Kate Bosworth"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-347",
      "RawQuestion": "what exactly did dale earnhardt die from?",
      "ProcessedQuestion": "what exactly did dale earnhardt die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-347.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q355420) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q355420 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "dale earnhardt",
          "TopicEntityName": "Dale Earnhardt",
          "TopicEntityMid": "m.026fx",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06c7cpj",
              "EntityName": "Racing Accident"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qd_p",
              "EntityName": "Basilar skull fracture"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-351",
      "RawQuestion": "who is chelsea kane?",
      "ProcessedQuestion": "who is chelsea kane",
      "Parses": [
        {
          "ParseId": "WebQTrn-351.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205794) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205794 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "chelsea kane",
          "TopicEntityName": "Chelsea Kane",
          "TopicEntityMid": "m.02vydtw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-352",
      "RawQuestion": "who is darwin and what is his theory?",
      "ProcessedQuestion": "who is darwin and what is his theory",
      "Parses": [
        {
          "ParseId": "WebQTrn-352.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1035) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1035 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "darwin",
          "TopicEntityName": "Charles Darwin",
          "TopicEntityMid": "m.01lwx",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h99sv",
              "EntityName": "Naturalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.036n1",
              "EntityName": "Geologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07lqg0",
              "EntityName": "Biologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-353",
      "RawQuestion": "what did obama study in school?",
      "ProcessedQuestion": "what did obama study in school",
      "Parses": [
        {
          "ParseId": "WebQTrn-353.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.062z7",
              "EntityName": "Political Science"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-354",
      "RawQuestion": "where did deion sanders play baseball?",
      "ProcessedQuestion": "where did deion sanders play baseball",
      "Parses": [
        {
          "ParseId": "WebQTrn-354.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q954184) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q954184 wdt:P54 ?y . ?y wdt:P54 ?x . ?x wdt:P641 wd:Q5369 . } ",
          "PotentialTopicEntityMention": "deion sanders",
          "TopicEntityName": "Deion Sanders",
          "TopicEntityMid": "m.03n69x",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.018jz",
              "EntityName": "Baseball",
              "SourceNodeIndex": 1,
              "NodePredicate": "sports.sports_team.sport",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ypc",
              "EntityName": "Cincinnati Reds"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047b4rl",
              "EntityName": "Florida State Seminoles baseball"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0713r",
              "EntityName": "San Francisco Giants"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cqt41",
              "EntityName": "New York Yankees"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x2p",
              "EntityName": "Atlanta Braves"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-377",
      "RawQuestion": "who was neptune discovered by?",
      "ProcessedQuestion": "who was neptune discovered by",
      "Parses": [
        {
          "ParseId": "WebQTrn-377.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q332) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q332 wdt:P61 ?x . } ",
          "PotentialTopicEntityMention": "neptune",
          "TopicEntityName": "Neptune",
          "TopicEntityMid": "m.0c31h",
          "InferentialChain": [
            "astronomy.astronomical_discovery.discoverer"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017xvy",
              "EntityName": "Urbain Le Verrier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017xwf",
              "EntityName": "John Couch Adams"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d9_n",
              "EntityName": "Johann Gottfried Galle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bw8x",
              "EntityName": "Heinrich Louis d'Arrest"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-379",
      "RawQuestion": "what did corey haim really die of?",
      "ProcessedQuestion": "what did corey haim really die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-379.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q342370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q342370 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "corey haim",
          "TopicEntityName": "Corey Haim",
          "TopicEntityMid": "m.01kyn0",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf_6",
              "EntityName": "Drug overdose"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-381",
      "RawQuestion": "where did nathaniel hawthorne die?",
      "ProcessedQuestion": "where did nathaniel hawthorne die",
      "Parses": [
        {
          "ParseId": "WebQTrn-381.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q69339) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q69339 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "nathaniel hawthorne",
          "TopicEntityName": "Nathaniel Hawthorne",
          "TopicEntityMid": "m.05gpy",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01m96h",
              "EntityName": "Plymouth"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-386",
      "RawQuestion": "who influenced wolfgang amadeus mozart?",
      "ProcessedQuestion": "who influenced wolfgang amadeus mozart",
      "Parses": [
        {
          "ParseId": "WebQTrn-386.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q254) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q254 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "wolfgang amadeus mozart",
          "TopicEntityName": "Wolfgang Amadeus Mozart",
          "TopicEntityMid": "m.082db",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014t6l",
              "EntityName": "Michael Haydn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_f0",
              "EntityName": "Johann Sebastian Bach"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bxh",
              "EntityName": "George Frideric Handel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043d4",
              "EntityName": "Joseph Haydn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fyv0",
              "EntityName": "Carl Philipp Emanuel Bach"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-389",
      "RawQuestion": "when was blessed kateri born?",
      "ProcessedQuestion": "when was blessed kateri born",
      "Parses": [
        {
          "ParseId": "WebQTrn-389.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q609) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q609 wdt:P569 ?x . } ",
          "PotentialTopicEntityMention": "kateri",
          "TopicEntityName": "Kateri Tekakwitha",
          "TopicEntityMid": "m.01zql6",
          "InferentialChain": [
            "people.person.date_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1656",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-390",
      "RawQuestion": "when did the bali bombings occur?",
      "ProcessedQuestion": "when did the bali bombings occur",
      "Parses": [
        {
          "ParseId": "WebQTrn-390.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q86584) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q86584 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "bali bombings",
          "TopicEntityName": "2002 Bali bombings",
          "TopicEntityMid": "m.0q06c",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2002-10-12",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-401",
      "RawQuestion": "where was leonardo da vinci when he died?",
      "ProcessedQuestion": "where was leonardo da vinci when he died",
      "Parses": [
        {
          "ParseId": "WebQTrn-401.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q762) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q762 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "leonardo da vinci",
          "TopicEntityName": "Leonardo da Vinci",
          "TopicEntityMid": "m.04lg6",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jvvc",
              "EntityName": "Amboise"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-403",
      "RawQuestion": "what is the time zone in oklahoma city?",
      "ProcessedQuestion": "what is the time zone in oklahoma city",
      "Parses": [
        {
          "ParseId": "WebQTrn-403.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34863) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34863 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "oklahoma city",
          "TopicEntityName": "Oklahoma City",
          "TopicEntityMid": "m.0fvzg",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-404",
      "RawQuestion": "what killed whitney houston?",
      "ProcessedQuestion": "what killed whitney houston",
      "Parses": [
        {
          "ParseId": "WebQTrn-404.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34389 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "whitney houston",
          "TopicEntityName": "Whitney Houston",
          "TopicEntityMid": "m.086qd",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g27f",
              "EntityName": "Drowning"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01s1m",
              "EntityName": "Coronary artery disease"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nx6jb",
              "EntityName": "Cocaine overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-410",
      "RawQuestion": "where does drew gordon play?",
      "ProcessedQuestion": "where does drew gordon play",
      "Parses": [
        {
          "ParseId": "WebQTrn-410.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? none not available"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q247487) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q247487 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "drew gordon",
          "TopicEntityName": "Drew Gordon",
          "TopicEntityMid": "m.0gyrdqn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0769_r",
              "EntityName": "New Mexico Lobos Basketball"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-415",
      "RawQuestion": "who is esther hicks?",
      "ProcessedQuestion": "who is esther hicks",
      "Parses": [
        {
          "ParseId": "WebQTrn-415.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3431027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3431027 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "esther hicks",
          "TopicEntityName": "Esther Hicks",
          "TopicEntityMid": "m.06_0rt",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-416",
      "RawQuestion": "what does michael vick do?",
      "ProcessedQuestion": "what does michael vick do",
      "Parses": [
        {
          "ParseId": "WebQTrn-416.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505431) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505431 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "michael vick",
          "TopicEntityName": "Michael Vick",
          "TopicEntityMid": "m.027f42",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xr66",
              "EntityName": "Spokesperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-418",
      "RawQuestion": "where was john lennon standing when he was shot?",
      "ProcessedQuestion": "where was john lennon standing when he was shot",
      "Parses": [
        {
          "ParseId": "WebQTrn-418.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1203 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "john lennon",
          "TopicEntityName": "John Lennon",
          "TopicEntityMid": "m.01vsl3_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-421",
      "RawQuestion": "who voiced darth vader in revenge of the sith?",
      "ProcessedQuestion": "who voiced darth vader in revenge of the sith",
      "Parses": [
        {
          "ParseId": "WebQTrn-421.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42051) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42051 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "revenge of the sith",
          "TopicEntityName": "Star Wars Episode III: Revenge of the Sith",
          "TopicEntityMid": "m.0fdv3",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f276",
              "EntityName": "Hayden Christensen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-426",
      "RawQuestion": "who was louis riel?",
      "ProcessedQuestion": "who was louis riel",
      "Parses": [
        {
          "ParseId": "WebQTrn-426.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313691) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313691 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "louis riel",
          "TopicEntityName": "Louis Riel",
          "TopicEntityMid": "m.04qqn",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-429",
      "RawQuestion": "where is abraham lincoln hometown?",
      "ProcessedQuestion": "where is abraham lincoln hometown",
      "Parses": [
        {
          "ParseId": "WebQTrn-429.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tgmk",
              "EntityName": "Hodgenville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-436",
      "RawQuestion": "who played dumbledore in the first movie?",
      "ProcessedQuestion": "who played dumbledore in the first movie",
      "Parses": [
        {
          "ParseId": "WebQTrn-436.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q102438) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q102438 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q712548 . } ",
          "PotentialTopicEntityMention": "first movie",
          "TopicEntityName": "Harry Potter and the Philosopher's Stone",
          "TopicEntityMid": "m.03176f",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0cb2r",
              "EntityName": "Professor Albus Dumbledore",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010xjr",
              "EntityName": "Richard Harris"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-436.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0cb2r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0cb2r ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.03176f .\n}\n",
          "PotentialTopicEntityMention": "dumbledore",
          "TopicEntityName": "Professor Albus Dumbledore",
          "TopicEntityMid": "m.0cb2r",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03176f",
              "EntityName": "Harry Potter and the Philosopher's Stone",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010xjr",
              "EntityName": "Richard Harris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-442",
      "RawQuestion": "who was the first leader of the afl?",
      "ProcessedQuestion": "who was the first leader of the afl",
      "Parses": [
        {
          "ParseId": "WebQTrn-442.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464508) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464508 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "afl",
          "TopicEntityName": "American Football League",
          "TopicEntityMid": "m.0ysy",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wtr5",
              "EntityName": "Lamar Hunt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035yc3",
              "EntityName": "Bud Adams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-445",
      "RawQuestion": "where was the battle of waterloo held?",
      "ProcessedQuestion": "where was the battle of waterloo held",
      "Parses": [
        {
          "ParseId": "WebQTrn-445.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48314) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48314 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "waterloo",
          "TopicEntityName": "Battle of Waterloo",
          "TopicEntityMid": "m.01dcm",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017qwy",
              "EntityName": "Waterloo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-446",
      "RawQuestion": "what was marilyn monroe known for?",
      "ProcessedQuestion": "what was marilyn monroe known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-446.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4616 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "marilyn monroe",
          "TopicEntityName": "Marilyn Monroe",
          "TopicEntityMid": "m.04wqr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mwvd",
              "EntityName": "Showgirl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-452",
      "RawQuestion": "where does lala anthony live?",
      "ProcessedQuestion": "where does lala anthony live",
      "Parses": [
        {
          "ParseId": "WebQTrn-452.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? correct entity linking?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q129041) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q129041 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "anthony",
          "TopicEntityName": "Carmelo Anthony",
          "TopicEntityMid": "m.03l26m",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.094jv",
              "EntityName": "Baltimore"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr3d",
              "EntityName": "Brooklyn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-461",
      "RawQuestion": "where was brad pitt born?",
      "ProcessedQuestion": "where was brad pitt born",
      "Parses": [
        {
          "ParseId": "WebQTrn-461.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35332) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35332 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "brad pitt",
          "TopicEntityName": "Brad Pitt",
          "TopicEntityMid": "m.0c6qh",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z9lj",
              "EntityName": "Shawnee"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-462",
      "RawQuestion": "what position does vernon davis play?",
      "ProcessedQuestion": "what position does vernon davis play",
      "Parses": [
        {
          "ParseId": "WebQTrn-462.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1972672) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1972672 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "vernon davis",
          "TopicEntityName": "Vernon Davis",
          "TopicEntityMid": "m.0br8m3",
          "InferentialChain": [
            "american_football.football_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g_7z",
              "EntityName": "Tight end"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-462.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0br8m3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0br8m3 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
          "PotentialTopicEntityMention": "vernon davis",
          "TopicEntityName": "Vernon Davis",
          "TopicEntityMid": "m.0br8m3",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g_7z",
              "EntityName": "Tight end"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-463",
      "RawQuestion": "where is the euro 2012 tournament?",
      "ProcessedQuestion": "where is the euro 2012 tournament",
      "Parses": [
        {
          "ParseId": "WebQTrn-463.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q22669) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q22669 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "euro 2012",
          "TopicEntityName": "UEFA Euro 2012",
          "TopicEntityMid": "m.06t1s0",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qbpd",
              "EntityName": "Donetsk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sn34",
              "EntityName": "Kiev"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035m6",
              "EntityName": "Gdańsk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xnv",
              "EntityName": "Poznań"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081m_",
              "EntityName": "Warsaw"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.082sy9",
              "EntityName": "Kharkiv"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0845b",
              "EntityName": "Wrocław"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d7_n",
              "EntityName": "Lviv"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-464",
      "RawQuestion": "what time is right now in texas?",
      "ProcessedQuestion": "what time is right now in texas",
      "Parses": [
        {
          "ParseId": "WebQTrn-464.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1439) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1439 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "texas",
          "TopicEntityName": "Texas",
          "TopicEntityMid": "m.07b_l",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-466",
      "RawQuestion": "where did dolly parton grew up?",
      "ProcessedQuestion": "where did dolly parton grew up",
      "Parses": [
        {
          "ParseId": "WebQTrn-466.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180453) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180453 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "dolly parton",
          "TopicEntityName": "Dolly Parton",
          "TopicEntityMid": "m.02f1c",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_wrs",
              "EntityName": "Sevierville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-467",
      "RawQuestion": "what state is rick santorum from?",
      "ProcessedQuestion": "what state is rick santorum from",
      "Parses": [
        {
          "ParseId": "WebQTrn-467.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": " F nested"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q155985) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q155985 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "rick santorum",
          "TopicEntityName": "Rick Santorum",
          "TopicEntityMid": "m.01fgd3",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mmzt",
              "EntityName": "Winchester"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-473",
      "RawQuestion": "who's kobe bryant?",
      "ProcessedQuestion": "who 's kobe bryant",
      "Parses": [
        {
          "ParseId": "WebQTrn-473.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25369) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25369 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "kobe bryant",
          "TopicEntityName": "Kobe Bryant",
          "TopicEntityMid": "m.01kmd4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01445t",
              "EntityName": "Athlete"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h664x",
              "EntityName": "Basketball player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-477",
      "RawQuestion": "what did ryan dunn died from?",
      "ProcessedQuestion": "what did ryan dunn died from",
      "Parses": [
        {
          "ParseId": "WebQTrn-477.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q316036) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q316036 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "ryan dunn",
          "TopicEntityName": "Ryan Dunn",
          "TopicEntityMid": "m.04sdsv",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08q1tg",
              "EntityName": "Traffic collision"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-480",
      "RawQuestion": "who does kris humphries play for in the nba?",
      "ProcessedQuestion": "who does kris humphries play for in the nba",
      "Parses": [
        {
          "ParseId": "WebQTrn-480.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "need filter for NBA"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q363421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q363421 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kris humphries",
          "TopicEntityName": "Kris Humphries",
          "TopicEntityMid": "m.0730b4",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm5b",
              "EntityName": "Washington Wizards"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-481",
      "RawQuestion": "where tupac grew up?",
      "ProcessedQuestion": "where tupac grew up",
      "Parses": [
        {
          "ParseId": "WebQTrn-481.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6107) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6107 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cx_2",
              "EntityName": "East Harlem"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-483",
      "RawQuestion": "what type of music did richard wagner play?",
      "ProcessedQuestion": "what type of music did richard wagner play",
      "Parses": [
        {
          "ParseId": "WebQTrn-483.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1511) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1511 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "richard wagner",
          "TopicEntityName": "Richard Wagner",
          "TopicEntityMid": "m.06c44",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06gk7",
              "EntityName": "Romantic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-487",
      "RawQuestion": "what nationality was andy williams?",
      "ProcessedQuestion": "what nationality was andy williams",
      "Parses": [
        {
          "ParseId": "WebQTrn-487.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q214548) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q214548 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "andy williams",
          "TopicEntityName": "Andy Williams",
          "TopicEntityMid": "m.02lvtb",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-488",
      "RawQuestion": "where did matthew brady live?",
      "ProcessedQuestion": "where did matthew brady live",
      "Parses": [
        {
          "ParseId": "WebQTrn-488.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q187850) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q187850 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "matthew brady",
          "TopicEntityName": "Mathew Brady",
          "TopicEntityMid": "m.028vw5",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-496",
      "RawQuestion": "what did einstein do?",
      "ProcessedQuestion": "what did einstein do",
      "Parses": [
        {
          "ParseId": "WebQTrn-496.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q937) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q937 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "einstein",
          "TopicEntityName": "Albert Einstein",
          "TopicEntityMid": "m.0jcx",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ktm6n",
              "EntityName": "Theoretical Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-497",
      "RawQuestion": "in what country is amsterdam?",
      "ProcessedQuestion": "in what country is amsterdam",
      "Parses": [
        {
          "ParseId": "WebQTrn-497.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q727) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q727 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "amsterdam",
          "TopicEntityName": "Amsterdam",
          "TopicEntityMid": "m.0k3p",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059j2",
              "EntityName": "Netherlands"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-497.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k3p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k3p ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "amsterdam",
          "TopicEntityName": "Amsterdam",
          "TopicEntityMid": "m.0k3p",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059j2",
              "EntityName": "Netherlands"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-497.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0k3p)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0k3p ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.01mp .\n}\n",
          "PotentialTopicEntityMention": "amsterdam",
          "TopicEntityName": "Amsterdam",
          "TopicEntityMid": "m.0k3p",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01mp",
              "EntityName": "Country",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059j2",
              "EntityName": "Netherlands"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-499",
      "RawQuestion": "what did martin luther king jr go to college for?",
      "ProcessedQuestion": "what did martin luther king jr go to college for",
      "Parses": [
        {
          "ParseId": "WebQTrn-499.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0329p4",
              "EntityName": "Systematic theology"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ms6",
              "EntityName": "Sociology"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-500",
      "RawQuestion": "where did sir ernest shackleton come from?",
      "ProcessedQuestion": "where did sir ernest shackleton come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-500.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q957543) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q957543 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "sir ernest shackleton",
          "TopicEntityName": "Sir Ernest Shackleton",
          "TopicEntityMid": "m.0gbcz",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07s6dm7",
              "EntityName": "Kilkea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-501",
      "RawQuestion": "what made jimi hendrix great?",
      "ProcessedQuestion": "what made jimi hendrix great",
      "Parses": [
        {
          "ParseId": "WebQTrn-501.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5928) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5928 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jimi hendrix",
          "TopicEntityName": "Jimi Hendrix",
          "TopicEntityMid": "m.01vsy3q",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012qdp",
              "EntityName": "Military Officer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039v1",
              "EntityName": "Guitarist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09wct1s",
              "EntityName": "Music Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz3r",
              "EntityName": "Record producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fq0t_c",
              "EntityName": "Music artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-506",
      "RawQuestion": "who created the character of romeo?",
      "ProcessedQuestion": "who created the character of romeo",
      "Parses": [
        {
          "ParseId": "WebQTrn-506.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q673361) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q673361 wdt:P170 ?x . } ",
          "PotentialTopicEntityMention": "romeo",
          "TopicEntityName": "Romeo",
          "TopicEntityMid": "m.02qnhw1",
          "InferentialChain": [
            "fictional_universe.fictional_character.character_created_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081k8",
              "EntityName": "William Shakespeare"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-516",
      "RawQuestion": "when was mary poppins made?",
      "ProcessedQuestion": "when was mary poppins made",
      "Parses": [
        {
          "ParseId": "WebQTrn-516.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209170) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209170 wdt:P577 ?x . } ",
          "PotentialTopicEntityMention": "mary poppins",
          "TopicEntityName": "Mary Poppins",
          "TopicEntityMid": "m.0kcn7",
          "InferentialChain": [
            "film.film.initial_release_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1964-08-27",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-517",
      "RawQuestion": "what did king edward vi died from?",
      "ProcessedQuestion": "what did king edward vi died from",
      "Parses": [
        {
          "ParseId": "WebQTrn-517.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83229) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83229 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "edward vi",
          "TopicEntityName": "Edward VI of England",
          "TopicEntityMid": "m.02s82",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-519",
      "RawQuestion": "who did johnny bench play for?",
      "ProcessedQuestion": "who did johnny bench play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-519.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1155003) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1155003 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "johnny bench",
          "TopicEntityName": "Johnny Bench",
          "TopicEntityMid": "m.0476l",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ypc",
              "EntityName": "Cincinnati Reds"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-521",
      "RawQuestion": "where is napoleon buried?",
      "ProcessedQuestion": "where is napoleon buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-521.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q517) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q517 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "napoleon",
          "TopicEntityName": "Napoleon Bonaparte",
          "TopicEntityMid": "m.0j5b8",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gxqj",
              "EntityName": "Les Invalides"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-524",
      "RawQuestion": "where do houston aeros play?",
      "ProcessedQuestion": "where do houston aeros play",
      "Parses": [
        {
          "ParseId": "WebQTrn-524.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q503228) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q503228 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "houston aeros",
          "TopicEntityName": "Houston Aeros",
          "TopicEntityMid": "m.068hn0",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01txlf",
              "EntityName": "Lakewood Church Central Campus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-528",
      "RawQuestion": "what are the names of michael jackson children?",
      "ProcessedQuestion": "what are the names of michael jackson children",
      "Parses": [
        {
          "ParseId": "WebQTrn-528.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rm4",
              "EntityName": "Paris-Michael Katherine Jackson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0598rmb",
              "EntityName": "Michael Joseph Jackson, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qbyj",
              "EntityName": "Prince Michael Jackson II"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-534",
      "RawQuestion": "who does michael vick play for?",
      "ProcessedQuestion": "who does michael vick play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-534.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505431) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505431 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michael vick",
          "TopicEntityName": "Michael Vick",
          "TopicEntityMid": "m.027f42",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g49",
              "EntityName": "New York Jets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-536",
      "RawQuestion": "what is anderson silva trained in?",
      "ProcessedQuestion": "what is anderson silva trained in",
      "Parses": [
        {
          "ParseId": "WebQTrn-536.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q356871) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q356871 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "anderson silva",
          "TopicEntityName": "Anderson Silva",
          "TopicEntityMid": "m.0djnt1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_8dlt",
              "EntityName": "Mixed Martial Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-541",
      "RawQuestion": "what did emily dickinson die of?",
      "ProcessedQuestion": "what did emily dickinson die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-541.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4441) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4441 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "emily dickinson",
          "TopicEntityName": "Emily Dickinson",
          "TopicEntityMid": "m.01509d",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.024f_f",
              "EntityName": "Bright's disease"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-547",
      "RawQuestion": "what victoria beckham kids names?",
      "ProcessedQuestion": "what victoria beckham kids names",
      "Parses": [
        {
          "ParseId": "WebQTrn-547.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q19810) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q19810 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "victoria beckham",
          "TopicEntityName": "Victoria Beckham",
          "TopicEntityMid": "m.0cgfb",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vk62d",
              "EntityName": "Romeo James Beckham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dylr1",
              "EntityName": "Brooklyn Joseph Beckham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dylr8",
              "EntityName": "Cruz David Beckham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gxvrw2",
              "EntityName": "Harper Seven Beckham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-550",
      "RawQuestion": "what did jimmy valvano die with?",
      "ProcessedQuestion": "what did jimmy valvano die with",
      "Parses": [
        {
          "ParseId": "WebQTrn-550.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q321392) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q321392 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "jimmy valvano",
          "TopicEntityName": "Jim Valvano",
          "TopicEntityMid": "m.04wb5r",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-553",
      "RawQuestion": "where did giovanni pierluigi da palestrina live?",
      "ProcessedQuestion": "where did giovanni pierluigi da palestrina live",
      "Parses": [
        {
          "ParseId": "WebQTrn-553.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q179277) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q179277 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "giovanni pierluigi da palestrina",
          "TopicEntityName": "Giovanni Pierluigi da Palestrina",
          "TopicEntityMid": "m.03bx_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w93f",
              "EntityName": "Palestrina"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-557",
      "RawQuestion": "who played dorothy in the wizard of oz movie?",
      "ProcessedQuestion": "who played dorothy in the wizard of oz movie",
      "Parses": [
        {
          "ParseId": "WebQTrn-557.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q193695) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q193695 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q2583524 . } ",
          "PotentialTopicEntityMention": "wizard of oz movie",
          "TopicEntityName": "The Wizard of Oz",
          "TopicEntityMid": "m.02q52q",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.020hj1",
              "EntityName": "Dorothy Gale",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g10g",
              "EntityName": "Judy Garland"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-557.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.020hj1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.020hj1 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.02q52q .\n}\n",
          "PotentialTopicEntityMention": "dorothy",
          "TopicEntityName": "Dorothy Gale",
          "TopicEntityMid": "m.020hj1",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02q52q",
              "EntityName": "The Wizard of Oz",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g10g",
              "EntityName": "Judy Garland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-558",
      "RawQuestion": "who does marion barber play 4?",
      "ProcessedQuestion": "who does marion barber play 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-558.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? none not present as filter value"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q354761) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q354761 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "marion barber",
          "TopicEntityName": "Marion Barber III",
          "TopicEntityMid": "m.07yzk2",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-563",
      "RawQuestion": "what did lucille ball die of?",
      "ProcessedQuestion": "what did lucille ball die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-563.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209662) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209662 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "lucille ball",
          "TopicEntityName": "Lucille Ball",
          "TopicEntityMid": "m.04nw9",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01p3jd",
              "EntityName": "Aortic dissection"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-568",
      "RawQuestion": "what county is charlotte north carolina?",
      "ProcessedQuestion": "what county is charlotte north carolina",
      "Parses": [
        {
          "ParseId": "WebQTrn-568.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16565) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16565 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "charlotte north carolina",
          "TopicEntityName": "Charlotte",
          "TopicEntityMid": "m.0fsb8",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rst1",
              "EntityName": "Mecklenburg County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-568.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fsb8)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fsb8 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "charlotte north carolina",
          "TopicEntityName": "Charlotte",
          "TopicEntityMid": "m.0fsb8",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rst1",
              "EntityName": "Mecklenburg County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-570",
      "RawQuestion": "who is michelle obama?",
      "ProcessedQuestion": "who is michelle obama",
      "Parses": [
        {
          "ParseId": "WebQTrn-570.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13133) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13133 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "michelle obama",
          "TopicEntityName": "Michelle Obama",
          "TopicEntityMid": "m.025s5v9",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-575",
      "RawQuestion": "what kourtney kardashian name her daughter?",
      "ProcessedQuestion": "what kourtney kardashian name her daughter",
      "Parses": [
        {
          "ParseId": "WebQTrn-575.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q575689) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q575689 wdt:P40 ?x . ?x wdt:P21 wd:Q43445 . } ",
          "PotentialTopicEntityMention": "kourtney kardashian",
          "TopicEntityName": "Kourtney Kardashian",
          "TopicEntityMid": "m.043ttm7",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02zsn",
              "EntityName": "Female",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k3cqw1",
              "EntityName": "Penelope Scotland Disick"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-578",
      "RawQuestion": "where did richard arkwright die?",
      "ProcessedQuestion": "where did richard arkwright die",
      "Parses": [
        {
          "ParseId": "WebQTrn-578.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294153) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294153 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "richard arkwright",
          "TopicEntityName": "Richard Arkwright",
          "TopicEntityMid": "m.01tglh",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03k9xq",
              "EntityName": "Cromford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-581",
      "RawQuestion": "where does sam bradford play?",
      "ProcessedQuestion": "where does sam bradford play",
      "Parses": [
        {
          "ParseId": "WebQTrn-581.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q714292) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q714292 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sam bradford",
          "TopicEntityName": "Sam Bradford",
          "TopicEntityMid": "m.02qjht0",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06x76",
              "EntityName": "St. Louis Rams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-585",
      "RawQuestion": "where does the st louis rams play football?",
      "ProcessedQuestion": "where does the st louis rams play football",
      "Parses": [
        {
          "ParseId": "WebQTrn-585.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q337377) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q337377 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "st louis rams",
          "TopicEntityName": "St. Louis Rams",
          "TopicEntityMid": "m.06x76",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02b99h",
              "EntityName": "Edward Jones Dome"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-587",
      "RawQuestion": "where are you if you re in zagreb?",
      "ProcessedQuestion": "where are you if you re in zagreb",
      "Parses": [
        {
          "ParseId": "WebQTrn-587.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1435) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1435 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "zagreb",
          "TopicEntityName": "Zagreb",
          "TopicEntityMid": "m.0fhzy",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pj7",
              "EntityName": "Croatia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-587.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhzy ns:base.aareas.schema.administrative_area.subdivides_place ?x .\n}\n",
          "PotentialTopicEntityMention": "zagreb",
          "TopicEntityName": "Zagreb",
          "TopicEntityMid": "m.0fhzy",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.subdivides_place"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pj7",
              "EntityName": "Croatia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-587.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhzy ns:base.biblioness.bibs_location.country ?x .\n}\n",
          "PotentialTopicEntityMention": "zagreb",
          "TopicEntityName": "Zagreb",
          "TopicEntityMid": "m.0fhzy",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pj7",
              "EntityName": "Croatia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-587.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhzy ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "zagreb",
          "TopicEntityName": "Zagreb",
          "TopicEntityMid": "m.0fhzy",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pj7",
              "EntityName": "Croatia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-587.P4",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fhzy)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fhzy ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "zagreb",
          "TopicEntityName": "Zagreb",
          "TopicEntityMid": "m.0fhzy",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pj7",
              "EntityName": "Croatia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.087vz",
              "EntityName": "Yugoslavia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-589",
      "RawQuestion": "what city was selena gomez born in?",
      "ProcessedQuestion": "what city was selena gomez born in",
      "Parses": [
        {
          "ParseId": "WebQTrn-589.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013mbz",
              "EntityName": "Grand Prairie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-594",
      "RawQuestion": "what is the current time in nigeria lagos?",
      "ProcessedQuestion": "what is the current time in nigeria lagos",
      "Parses": [
        {
          "ParseId": "WebQTrn-594.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8673) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8673 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "lagos",
          "TopicEntityName": "Lagos",
          "TopicEntityMid": "m.0lnfy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02llzg",
              "EntityName": "Central European Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-601",
      "RawQuestion": "what is brazil time zone?",
      "ProcessedQuestion": "what is brazil time zone",
      "Parses": [
        {
          "ParseId": "WebQTrn-601.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q155) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q155 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "brazil",
          "TopicEntityName": "Brazil",
          "TopicEntityMid": "m.015fr",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jy1pqp",
              "EntityName": "Brasília Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y496y2",
              "EntityName": "Amazon Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y49b8w",
              "EntityName": "Fernando de Noronha Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-605",
      "RawQuestion": "who was tex beneke?",
      "ProcessedQuestion": "who was tex beneke",
      "Parses": [
        {
          "ParseId": "WebQTrn-605.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q488352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q488352 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "tex beneke",
          "TopicEntityName": "Tex Beneke",
          "TopicEntityMid": "m.076yxy",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.029bkp",
              "EntityName": "Bandleader"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h66dr",
              "EntityName": "Saxophonist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-608",
      "RawQuestion": "what is shakira's nationality?",
      "ProcessedQuestion": "what is shakira 's nationality",
      "Parses": [
        {
          "ParseId": "WebQTrn-608.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34424) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34424 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "shakira",
          "TopicEntityName": "Shakira",
          "TopicEntityMid": "m.01wj18h",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ls2",
              "EntityName": "Colombia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-612",
      "RawQuestion": "where is the 2012 ncaa basketball tournament?",
      "ProcessedQuestion": "where is the 2012 ncaa basketball tournament",
      "Parses": [
        {
          "ParseId": "WebQTrn-612.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2948731) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2948731 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "2012 ncaa basketball tournament",
          "TopicEntityName": "2012 NCAA Men's Division I Basketball Tournament",
          "TopicEntityMid": "m.080nmfs",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mq08",
              "EntityName": "Talking Stick Resort Arena"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n31w",
              "EntityName": "Moda Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02b99h",
              "EntityName": "Edward Jones Dome"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqj2",
              "EntityName": "TD Garden"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p_rvk",
              "EntityName": "Consol Energy Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y3xn",
              "EntityName": "Mercedes-Benz Superdome"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z6zt",
              "EntityName": "Bridgestone Arena"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0328cp",
              "EntityName": "Nationwide Arena"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.038bv6",
              "EntityName": "Georgia Dome"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039nbl",
              "EntityName": "Greensboro Coliseum Complex"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0635xb",
              "EntityName": "The Pit"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0635y4",
              "EntityName": "UD Arena"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063ypc",
              "EntityName": "CenturyLink Center Omaha"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0fv9",
              "EntityName": "KFC Yum! Center"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-616",
      "RawQuestion": "where did matt barnes play?",
      "ProcessedQuestion": "where did matt barnes play",
      "Parses": [
        {
          "ParseId": "WebQTrn-616.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q555396) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q555396 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "matt barnes",
          "TopicEntityName": "Matt Barnes",
          "TopicEntityMid": "m.07dr3v",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-622",
      "RawQuestion": "what is the time zone in uk now?",
      "ProcessedQuestion": "what is the time zone in uk now",
      "Parses": [
        {
          "ParseId": "WebQTrn-622.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "uk",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-632",
      "RawQuestion": "who is gilbert gottfried snl?",
      "ProcessedQuestion": "who is gilbert gottfried snl",
      "Parses": [
        {
          "ParseId": "WebQTrn-632.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221464) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221464 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "gilbert gottfried",
          "TopicEntityName": "Gilbert Gottfried",
          "TopicEntityMid": "m.02y0yt",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-634",
      "RawQuestion": "what did martin luther do?",
      "ProcessedQuestion": "what did martin luther do",
      "Parses": [
        {
          "ParseId": "WebQTrn-634.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9554) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9554 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "martin luther",
          "TopicEntityName": "Martin Luther",
          "TopicEntityMid": "m.04yd_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fly",
              "EntityName": "Professor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0266rh",
              "EntityName": "Monk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvl3l",
              "EntityName": "Theologian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xjb",
              "EntityName": "Priest"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-636",
      "RawQuestion": "what was eli whitney nationality?",
      "ProcessedQuestion": "what was eli whitney nationality",
      "Parses": [
        {
          "ParseId": "WebQTrn-636.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q280930) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q280930 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "eli whitney",
          "TopicEntityName": "Eli Whitney",
          "TopicEntityMid": "m.02ncr",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-637",
      "RawQuestion": "what was christiaan barnard famous for?",
      "ProcessedQuestion": "what was christiaan barnard famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-637.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188803) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188803 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "christiaan barnard",
          "TopicEntityName": "Christiaan Barnard",
          "TopicEntityMid": "m.02092",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y_93f",
              "EntityName": "Surgeon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-638",
      "RawQuestion": "where was dwight d. eisenhower from?",
      "ProcessedQuestion": "where was dwight d. eisenhower from",
      "Parses": [
        {
          "ParseId": "WebQTrn-638.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9916) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9916 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "dwight d . eisenhower",
          "TopicEntityName": "Dwight D. Eisenhower",
          "TopicEntityMid": "m.028rk",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0101wz",
              "EntityName": "Denison"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-640",
      "RawQuestion": "what team is chris paul on?",
      "ProcessedQuestion": "what team is chris paul on",
      "Parses": [
        {
          "ParseId": "WebQTrn-640.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46040 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "chris paul",
          "TopicEntityName": "Chris Paul",
          "TopicEntityMid": "m.0cymln",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-646",
      "RawQuestion": "who wrote the book of st. john?",
      "ProcessedQuestion": "who wrote the book of st. john",
      "Parses": [
        {
          "ParseId": "WebQTrn-646.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42040 wdt:P50 ?x . } ",
          "PotentialTopicEntityMention": "book of",
          "TopicEntityName": "Book of Revelation",
          "TopicEntityMid": "m.01dmz",
          "InferentialChain": [
            "book.written_work.author"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ft_k",
              "EntityName": "John of Patmos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-655",
      "RawQuestion": "who owns nissan car manufacturer?",
      "ProcessedQuestion": "who owns nissan car manufacturer",
      "Parses": [
        {
          "ParseId": "WebQTrn-655.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q20165) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q20165 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "nissan",
          "TopicEntityName": "Nissan Motor Co., Ltd.",
          "TopicEntityMid": "m.05b4c",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04nzf7",
              "EntityName": "Yoshisuke Aikawa"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vpy5vb",
              "EntityName": "William Gorham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wrj2c_",
              "EntityName": "Masujiro Hashimoto"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wrj2lb",
              "EntityName": "Kenjiro Den"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wrj2mj",
              "EntityName": "Rokuro Aoyama"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wrj2n7",
              "EntityName": "Meitaro Takeuchi"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-657",
      "RawQuestion": "what did kenny everett die off?",
      "ProcessedQuestion": "what did kenny everett die off",
      "Parses": [
        {
          "ParseId": "WebQTrn-657.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q927532) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q927532 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "kenny everett",
          "TopicEntityName": "Kenny Everett",
          "TopicEntityMid": "m.01m0gh",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d19y2",
              "EntityName": "HIV/AIDS"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-659",
      "RawQuestion": "where does joey king live?",
      "ProcessedQuestion": "where does joey king live",
      "Parses": [
        {
          "ParseId": "WebQTrn-659.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q112536) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q112536 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "joey king",
          "TopicEntityName": "Joey King",
          "TopicEntityMid": "m.03yk4pb",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cv3w",
              "EntityName": "Las Vegas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-664",
      "RawQuestion": "when did herbert hoover become president?",
      "ProcessedQuestion": "when did herbert hoover become president",
      "Parses": [
        {
          "ParseId": "WebQTrn-664.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35236) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35236 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "herbert hoover",
          "TopicEntityName": "Herbert Hoover",
          "TopicEntityMid": "m.03kdl",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1929-03-04",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-667",
      "RawQuestion": "what jobs did harriet tubman have?",
      "ProcessedQuestion": "what jobs did harriet tubman have",
      "Parses": [
        {
          "ParseId": "WebQTrn-667.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q102870) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q102870 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "harriet tubman",
          "TopicEntityName": "Harriet Tubman",
          "TopicEntityMid": "m.098yd",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_7vl6",
              "EntityName": "Activist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-676",
      "RawQuestion": "what time zone is the uk in right now?",
      "ProcessedQuestion": "what time zone is the uk in right now",
      "Parses": [
        {
          "ParseId": "WebQTrn-676.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "uk",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-677",
      "RawQuestion": "what instrument does bela fleck play?",
      "ProcessedQuestion": "what instrument does bela fleck play",
      "Parses": [
        {
          "ParseId": "WebQTrn-677.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q749979) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q749979 wdt:P527 ?y . ?y wdt:P453 ?x . } ",
          "PotentialTopicEntityMention": "bela fleck",
          "TopicEntityName": "Béla Fleck and the Flecktones",
          "TopicEntityMid": "m.017f9r",
          "InferentialChain": [
            "music.musical_group.member",
            "music.group_membership.role"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018j2",
              "EntityName": "Banjo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018vs",
              "EntityName": "Bass guitar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qjg",
              "EntityName": "Harmonica"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ncr",
              "EntityName": "Saxophone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l14j_",
              "EntityName": "Flute"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l14md",
              "EntityName": "Percussion"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-678",
      "RawQuestion": "what position does ray allen?",
      "ProcessedQuestion": "what position does ray allen",
      "Parses": [
        {
          "ParseId": "WebQTrn-678.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q208623) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q208623 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "ray allen",
          "TopicEntityName": "Ray Allen",
          "TopicEntityMid": "m.03lh3v",
          "InferentialChain": [
            "basketball.basketball_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03558l",
              "EntityName": "Shooting guard"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-678.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.03lh3v)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.03lh3v ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
          "PotentialTopicEntityMention": "ray allen",
          "TopicEntityName": "Ray Allen",
          "TopicEntityMid": "m.03lh3v",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03558l",
              "EntityName": "Shooting guard"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-681",
      "RawQuestion": "where did chancellorsville battle take place?",
      "ProcessedQuestion": "where did chancellorsville battle take place",
      "Parses": [
        {
          "ParseId": "WebQTrn-681.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q745979) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q745979 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "chancellorsville",
          "TopicEntityName": "Battle of Chancellorsville",
          "TopicEntityMid": "m.0d0mw",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07z1m",
              "EntityName": "Virginia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mn1p",
              "EntityName": "Spotsylvania County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-683",
      "RawQuestion": "who is playing hawkeye in the avengers movie?",
      "ProcessedQuestion": "who is playing hawkeye in the avengers movie",
      "Parses": [
        {
          "ParseId": "WebQTrn-683.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q182218) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q182218 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q19095 . } ",
          "PotentialTopicEntityMention": "avengers",
          "TopicEntityName": "The Avengers",
          "TopicEntityMid": "m.062zm5h",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.034qd2",
              "EntityName": "Clint Barton",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0blq0z",
              "EntityName": "Jeremy Renner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-688",
      "RawQuestion": "what religion was mary todd lincoln?",
      "ProcessedQuestion": "what religion was mary todd lincoln",
      "Parses": [
        {
          "ParseId": "WebQTrn-688.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215062) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215062 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "mary todd lincoln",
          "TopicEntityName": "Mary Todd Lincoln",
          "TopicEntityMid": "m.01ypl0",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019cr",
              "EntityName": "Baptists"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0631_",
              "EntityName": "Presbyterianism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-690",
      "RawQuestion": "who all has jason kidd played for?",
      "ProcessedQuestion": "who all has jason kidd played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-690.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221341) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221341 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "jason kidd",
          "TopicEntityName": "Jason Kidd",
          "TopicEntityMid": "m.02cg2v",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3b",
              "EntityName": "Brooklyn Nets"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jml5",
              "EntityName": "Phoenix Suns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-693",
      "RawQuestion": "who invented dell computer?",
      "ProcessedQuestion": "who invented dell computer",
      "Parses": [
        {
          "ParseId": "WebQTrn-693.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30873) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30873 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "dell computer",
          "TopicEntityName": "Dell",
          "TopicEntityMid": "m.0py9b",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013q3z",
              "EntityName": "Michael S. Dell"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-694",
      "RawQuestion": "where did morgan freeman come from?",
      "ProcessedQuestion": "where did morgan freeman come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-694.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48337) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48337 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "morgan freeman",
          "TopicEntityName": "Morgan Freeman",
          "TopicEntityMid": "m.055c8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-695",
      "RawQuestion": "where did bob barker grow up?",
      "ProcessedQuestion": "where did bob barker grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-695.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q381178) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q381178 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "bob barker",
          "TopicEntityName": "Bob Barker",
          "TopicEntityMid": "m.01ydhd",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010th_",
              "EntityName": "Darrington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-700",
      "RawQuestion": "who played juni in spy kids 4?",
      "ProcessedQuestion": "who played juni in spy kids 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-700.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q550591) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q550591 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q6313015 . } ",
          "PotentialTopicEntityMention": "spy kids 4",
          "TopicEntityName": "Spy Kids: All the Time in the World",
          "TopicEntityMid": "m.0ds67cb",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02ql73",
              "EntityName": "Juni Cortez",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.042ldz",
              "EntityName": "Daryl Sabara"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-701",
      "RawQuestion": "what year did the new york mets start?",
      "ProcessedQuestion": "what year did the new york mets start",
      "Parses": [
        {
          "ParseId": "WebQTrn-701.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692417 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "new york mets",
          "TopicEntityName": "New York Mets",
          "TopicEntityMid": "m.05g76",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1962",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-702",
      "RawQuestion": "where did neil gaiman grow up?",
      "ProcessedQuestion": "where did neil gaiman grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-702.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q210059) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q210059 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "neil gaiman",
          "TopicEntityName": "Neil Gaiman",
          "TopicEntityMid": "m.05jm7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.022mpz",
              "EntityName": "Portchester"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-706",
      "RawQuestion": "where did john muir die?",
      "ProcessedQuestion": "where did john muir die",
      "Parses": [
        {
          "ParseId": "WebQTrn-706.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q379580) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q379580 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "john muir",
          "TopicEntityName": "John Muir",
          "TopicEntityMid": "m.01fhry",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-707",
      "RawQuestion": "where was selena gomez raised?",
      "ProcessedQuestion": "where was selena gomez raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-707.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013mbz",
              "EntityName": "Grand Prairie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-713",
      "RawQuestion": "what country was george washington from?",
      "ProcessedQuestion": "what country was george washington from",
      "Parses": [
        {
          "ParseId": "WebQTrn-713.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "george washington",
          "TopicEntityName": "George Washington",
          "TopicEntityMid": "m.034rd",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p89zz",
              "EntityName": "British America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-715",
      "RawQuestion": "where does kyla ross live?",
      "ProcessedQuestion": "where does kyla ross live",
      "Parses": [
        {
          "ParseId": "WebQTrn-715.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q602218) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q602218 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "kyla ross",
          "TopicEntityName": "Kyla Ross",
          "TopicEntityMid": "m.09glsjp",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r29m",
              "EntityName": "Aliso Viejo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-723",
      "RawQuestion": "what did roy rogers die of?",
      "ProcessedQuestion": "what did roy rogers die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-723.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q367129) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q367129 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "roy rogers",
          "TopicEntityName": "Roy Rogers",
          "TopicEntityMid": "m.01mc6h1",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01l2m3",
              "EntityName": "Heart failure"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-737",
      "RawQuestion": "what team does kris humphries play for in 2011?",
      "ProcessedQuestion": "what team does kris humphries play for in 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-737.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q363421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q363421 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kris humphries",
          "TopicEntityName": "Kris Humphries",
          "TopicEntityMid": "m.0730b4",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3b",
              "EntityName": "Brooklyn Nets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-739",
      "RawQuestion": "where did john boehner come from?",
      "ProcessedQuestion": "where did john boehner come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-739.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11702) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11702 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "john boehner",
          "TopicEntityName": "John Boehner",
          "TopicEntityMid": "m.039rwf",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yy2f",
              "EntityName": "Reading"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-744",
      "RawQuestion": "where does selena gomez live map?",
      "ProcessedQuestion": "where does selena gomez live map",
      "Parses": [
        {
          "ParseId": "WebQTrn-744.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-747",
      "RawQuestion": "what is venus named for?",
      "ProcessedQuestion": "what is venus named for",
      "Parses": [
        {
          "ParseId": "WebQTrn-747.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "venus",
          "TopicEntityName": "Venus",
          "TopicEntityMid": "m.09bcm",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09cxs",
              "EntityName": "Venus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-753",
      "RawQuestion": "who does john beck play for?",
      "ProcessedQuestion": "who does john beck play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-753.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6221292) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6221292 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "john beck",
          "TopicEntityName": "John Beck",
          "TopicEntityMid": "m.09v6rk",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-762",
      "RawQuestion": "what inspired michelangelo?",
      "ProcessedQuestion": "what inspired michelangelo",
      "Parses": [
        {
          "ParseId": "WebQTrn-762.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5592) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5592 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "michelangelo",
          "TopicEntityName": "Michelangelo",
          "TopicEntityMid": "m.058w5",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013w_3",
              "EntityName": "Giovanni Pico della Mirandola"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cc3w",
              "EntityName": "Domenico Ghirlandaio"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04qj5",
              "EntityName": "Lorenzo de' Medici"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072cpw",
              "EntityName": "Melozzo da Forlì"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8wb",
              "EntityName": "Girolamo Savonarola"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j56d",
              "EntityName": "Donatello"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-766",
      "RawQuestion": "where does liz mcclarnon live?",
      "ProcessedQuestion": "where does liz mcclarnon live",
      "Parses": [
        {
          "ParseId": "WebQTrn-766.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q258010) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q258010 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "liz mcclarnon",
          "TopicEntityName": "Liz McClarnon",
          "TopicEntityMid": "m.067j97",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lh6",
              "EntityName": "Liverpool"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-769",
      "RawQuestion": "where did giovanni da verrazano come from?",
      "ProcessedQuestion": "where did giovanni da verrazano come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-769.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q147676) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q147676 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "giovanni da verrazano",
          "TopicEntityName": "Giovanni da Verrazzano",
          "TopicEntityMid": "m.0k6d2",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c33cs",
              "EntityName": "Greve in Chianti"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-781",
      "RawQuestion": "where was president lyndon johnson from?",
      "ProcessedQuestion": "where was president lyndon johnson from",
      "Parses": [
        {
          "ParseId": "WebQTrn-781.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9640) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9640 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "lyndon johnson",
          "TopicEntityName": "Lyndon B. Johnson",
          "TopicEntityMid": "m.0f7fy",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0101sj",
              "EntityName": "Stonewall"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-784",
      "RawQuestion": "who does michael oher play for in 2009?",
      "ProcessedQuestion": "who does michael oher play for in 2009",
      "Parses": [
        {
          "ParseId": "WebQTrn-784.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q977601) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q977601 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2009-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2009-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michael oher",
          "TopicEntityName": "Michael Oher",
          "TopicEntityMid": "m.0h7q7b",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2009-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2009-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2009-01-01",
            "End": "2009-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2009"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ct6",
              "EntityName": "Baltimore Ravens"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gqb0k",
              "EntityName": "Ole Miss Rebels football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-788",
      "RawQuestion": "what clubs has peter crouch played for?",
      "ProcessedQuestion": "what clubs has peter crouch played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-788.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180939) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180939 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "peter crouch",
          "TopicEntityName": "Peter Crouch",
          "TopicEntityMid": "m.03y5_6",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cwm1",
              "EntityName": "Stoke City F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qhlm",
              "EntityName": "Portsmouth F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ltf",
              "EntityName": "Liverpool F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bl8l",
              "EntityName": "Aston Villa F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvjr",
              "EntityName": "Tottenham Hotspur F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k_l4",
              "EntityName": "Southampton F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ljbg",
              "EntityName": "Queens Park Rangers F.C. in European football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-790",
      "RawQuestion": "what team does lamar odom play for 2011?",
      "ProcessedQuestion": "what team does lamar odom play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-790.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296403 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "lamar odom",
          "TopicEntityName": "Lamar Odom",
          "TopicEntityMid": "m.02_nkp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-792",
      "RawQuestion": "who owns skywest?",
      "ProcessedQuestion": "who owns skywest",
      "Parses": [
        {
          "ParseId": "WebQTrn-792.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q773662) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q773662 wdt:P749 ?y . ?y wdt:P749 ?x . } ",
          "PotentialTopicEntityMention": "skywest",
          "TopicEntityName": "SkyWest Airlines",
          "TopicEntityMid": "m.01nhdy",
          "InferentialChain": [
            "organization.organization.parent",
            "organization.organization_relationship.parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vk4t",
              "EntityName": "AirTran Airways"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.096rj7",
              "EntityName": "SkyWest, Inc."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-796",
      "RawQuestion": "where do logan browning live?",
      "ProcessedQuestion": "where do logan browning live",
      "Parses": [
        {
          "ParseId": "WebQTrn-796.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1965719) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1965719 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "logan browning",
          "TopicEntityName": "Logan Browning",
          "TopicEntityMid": "m.02v_wvk",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013yq",
              "EntityName": "Atlanta"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-797",
      "RawQuestion": "when did mcdonalds officially open?",
      "ProcessedQuestion": "when did mcdonalds officially open",
      "Parses": [
        {
          "ParseId": "WebQTrn-797.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38076) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38076 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "mcdonalds",
          "TopicEntityName": "McDonald's",
          "TopicEntityMid": "m.07gyp7",
          "InferentialChain": [
            "organization.organization.date_founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1940-05-15",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-801",
      "RawQuestion": "who did jeremy lin sign with?",
      "ProcessedQuestion": "who did jeremy lin sign with",
      "Parses": [
        {
          "ParseId": "WebQTrn-801.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q309590) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q309590 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "jeremy lin",
          "TopicEntityName": "Jeremy Lin",
          "TopicEntityMid": "m.09k72lh",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-809",
      "RawQuestion": "what instrument was louis armstrong famous for?",
      "ProcessedQuestion": "what instrument was louis armstrong famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-809.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??  "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020w2",
              "EntityName": "Cornet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-817",
      "RawQuestion": "what did bob ross die of?",
      "ProcessedQuestion": "what did bob ross die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-817.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q455511) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q455511 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "bob ross",
          "TopicEntityName": "Bob Ross",
          "TopicEntityMid": "m.02hv0w",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jdk0",
              "EntityName": "Lymphoma"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-819",
      "RawQuestion": "where did martin luther live in?",
      "ProcessedQuestion": "where did martin luther live in",
      "Parses": [
        {
          "ParseId": "WebQTrn-819.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9554) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9554 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "martin luther",
          "TopicEntityName": "Martin Luther",
          "TopicEntityMid": "m.04yd_",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.044dng",
              "EntityName": "Eisleben"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0577d",
              "EntityName": "Magdeburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cz504",
              "EntityName": "Mansfeld"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g8gq",
              "EntityName": "Eisenach"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-829",
      "RawQuestion": "who was rudolf virchow?",
      "ProcessedQuestion": "who was rudolf virchow",
      "Parses": [
        {
          "ParseId": "WebQTrn-829.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76432) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76432 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "rudolf virchow",
          "TopicEntityName": "Rudolf Virchow",
          "TopicEntityMid": "m.011kz4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gq2jw",
              "EntityName": "Pathologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-837",
      "RawQuestion": "where did jennifer hudson go to school?",
      "ProcessedQuestion": "where did jennifer hudson go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-837.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192410) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192410 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jennifer hudson",
          "TopicEntityName": "Jennifer Hudson",
          "TopicEntityMid": "m.02ktrs",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lgjy",
              "EntityName": "Langston University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09v6gkq",
              "EntityName": "Dunbar Vocational High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-839",
      "RawQuestion": "when did toronto blue jays become a team?",
      "ProcessedQuestion": "when did toronto blue jays become a team",
      "Parses": [
        {
          "ParseId": "WebQTrn-839.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q650829) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q650829 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "toronto blue jays",
          "TopicEntityName": "Toronto Blue Jays",
          "TopicEntityMid": "m.07l4z",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1977",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-840",
      "RawQuestion": "what is the zip code for moorpark ca?",
      "ProcessedQuestion": "what is the zip code for moorpark ca",
      "Parses": [
        {
          "ParseId": "WebQTrn-840.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q983829) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q983829 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "moorpark ca",
          "TopicEntityName": "Moorpark",
          "TopicEntityMid": "m.0r87z",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zjg2j",
              "EntityName": "93021"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq1bc",
              "EntityName": "93020"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-845",
      "RawQuestion": "what did mozart do to become famous?",
      "ProcessedQuestion": "what did mozart do to become famous",
      "Parses": [
        {
          "ParseId": "WebQTrn-845.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q254) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q254 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "mozart",
          "TopicEntityName": "Wolfgang Amadeus Mozart",
          "TopicEntityMid": "m.082db",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012vv0",
              "EntityName": "Violist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vyk",
              "EntityName": "Pianist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-846",
      "RawQuestion": "where was avril lavigne born?",
      "ProcessedQuestion": "where was avril lavigne born",
      "Parses": [
        {
          "ParseId": "WebQTrn-846.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30449) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30449 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "avril lavigne",
          "TopicEntityName": "Avril Lavigne",
          "TopicEntityMid": "m.0161c2",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018dhx",
              "EntityName": "Belleville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-850",
      "RawQuestion": "what county is tampa located in?",
      "ProcessedQuestion": "what county is tampa located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-850.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49255) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49255 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "tampa",
          "TopicEntityName": "Tampa",
          "TopicEntityMid": "m.0n1rj",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jj6k",
              "EntityName": "Hillsborough County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-854",
      "RawQuestion": "where are they now jessica mcclure?",
      "ProcessedQuestion": "where are they now jessica mcclure",
      "Parses": [
        {
          "ParseId": "WebQTrn-854.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? the intent of the question is not completely clear"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2063360) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2063360 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "jessica mcclure",
          "TopicEntityName": "Jessica McClure",
          "TopicEntityMid": "m.01_fvt",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013n2h",
              "EntityName": "Midland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-863",
      "RawQuestion": "what instruments does john williams use?",
      "ProcessedQuestion": "what instruments does john williams use",
      "Parses": [
        {
          "ParseId": "WebQTrn-863.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q370293) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q370293 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "john williams",
          "TopicEntityName": "John Williams",
          "TopicEntityMid": "m.0146pz",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-863.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0146pg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0146pg ns:music.group_member.instruments_played ?x .\n}\n",
          "PotentialTopicEntityMention": "john williams",
          "TopicEntityName": "John Williams",
          "TopicEntityMid": "m.0146pg",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wy6",
              "EntityName": "Clarinet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07c6l",
              "EntityName": "Trombone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-869",
      "RawQuestion": "what timezone is toronto canada?",
      "ProcessedQuestion": "what timezone is toronto canada",
      "Parses": [
        {
          "ParseId": "WebQTrn-869.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q172) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q172 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "toronto",
          "TopicEntityName": "Toronto",
          "TopicEntityMid": "m.0h7h6",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-876",
      "RawQuestion": "what team chris paul play for?",
      "ProcessedQuestion": "what team chris paul play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-876.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46040 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "chris paul",
          "TopicEntityName": "Chris Paul",
          "TopicEntityMid": "m.0cymln",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-883",
      "RawQuestion": "what teams has lionel messi played for?",
      "ProcessedQuestion": "what teams has lionel messi played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-883.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q615) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q615 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "lionel messi",
          "TopicEntityName": "Lionel Messi",
          "TopicEntityMid": "m.06qjgc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0276tq4",
              "EntityName": "FC Barcelona C"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.096cw_",
              "EntityName": "FC Barcelona B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-885",
      "RawQuestion": "what time zone is colorado springs co?",
      "ProcessedQuestion": "what time zone is colorado springs co",
      "Parses": [
        {
          "ParseId": "WebQTrn-885.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49258) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49258 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "colorado springs co",
          "TopicEntityName": "Colorado Springs",
          "TopicEntityMid": "m.01vsl",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-886",
      "RawQuestion": "what school did sergio romo go to?",
      "ProcessedQuestion": "what school did sergio romo go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-886.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3041597) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3041597 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "sergio romo",
          "TopicEntityName": "Sergio Romo",
          "TopicEntityMid": "m.04cyz8g",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hscq",
              "EntityName": "University of North Alabama"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-891",
      "RawQuestion": "where did john howard live?",
      "ProcessedQuestion": "where did john howard live",
      "Parses": [
        {
          "ParseId": "WebQTrn-891.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q51330) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q51330 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "john howard",
          "TopicEntityName": "John Howard",
          "TopicEntityMid": "m.0chh05",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y57",
              "EntityName": "Sydney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-892",
      "RawQuestion": "what music did beethoven composed?",
      "ProcessedQuestion": "what music did beethoven composed",
      "Parses": [
        {
          "ParseId": "WebQTrn-892.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q255) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q255 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "beethoven",
          "TopicEntityName": "Ludwig van Beethoven",
          "TopicEntityMid": "m.04k15",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-893",
      "RawQuestion": "what does the name rome mean?",
      "ProcessedQuestion": "what does the name rome mean",
      "Parses": [
        {
          "ParseId": "WebQTrn-893.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q220) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q220 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "rome",
          "TopicEntityName": "Rome",
          "TopicEntityMid": "m.06c62",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ghqr",
              "EntityName": "Romulus and Remus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-894",
      "RawQuestion": "what inspired scott fitzgerald?",
      "ProcessedQuestion": "what inspired scott fitzgerald",
      "Parses": [
        {
          "ParseId": "WebQTrn-894.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93354) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93354 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "scott fitzgerald",
          "TopicEntityName": "F. Scott Fitzgerald",
          "TopicEntityMid": "m.02zjd",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0154x6",
              "EntityName": "Edith Wharton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023jy9",
              "EntityName": "Sherwood Anderson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0249ld",
              "EntityName": "R. D. Blackmore"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03p_bz",
              "EntityName": "Sara Murphy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040dxk",
              "EntityName": "Shane Leslie"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0465_",
              "EntityName": "John Keats"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05nj0",
              "EntityName": "Oswald Spengler"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07g2b",
              "EntityName": "T. S. Eliot"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-895",
      "RawQuestion": "what did george steinbrenner do?",
      "ProcessedQuestion": "what did george steinbrenner do",
      "Parses": [
        {
          "ParseId": "WebQTrn-895.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q220210) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q220210 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "george steinbrenner",
          "TopicEntityName": "George Steinbrenner",
          "TopicEntityMid": "m.01q5t3",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sppp",
              "EntityName": "Investor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05sxg2",
              "EntityName": "Theatrical producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-897",
      "RawQuestion": "what influenced langston hughes to write?",
      "ProcessedQuestion": "what influenced langston hughes to write",
      "Parses": [
        {
          "ParseId": "WebQTrn-897.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188093) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188093 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "langston hughes",
          "TopicEntityName": "Langston Hughes",
          "TopicEntityMid": "m.0bv62",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.085gk",
              "EntityName": "Walt Whitman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-898",
      "RawQuestion": "where did pablo picasso die?",
      "ProcessedQuestion": "where did pablo picasso die",
      "Parses": [
        {
          "ParseId": "WebQTrn-898.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5593) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5593 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "pablo picasso",
          "TopicEntityName": "Pablo Picasso",
          "TopicEntityMid": "m.060_7",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cy97d",
              "EntityName": "Mougins"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-906",
      "RawQuestion": "what time is nebraska now?",
      "ProcessedQuestion": "what time is nebraska now",
      "Parses": [
        {
          "ParseId": "WebQTrn-906.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1553) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1553 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "nebraska",
          "TopicEntityName": "Nebraska",
          "TopicEntityMid": "m.05fhy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-908",
      "RawQuestion": "who is james dean?",
      "ProcessedQuestion": "who is james dean",
      "Parses": [
        {
          "ParseId": "WebQTrn-908.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83359) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83359 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "james dean",
          "TopicEntityName": "James Dean",
          "TopicEntityMid": "m.01w32s8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-909",
      "RawQuestion": "where did bob dylan live?",
      "ProcessedQuestion": "where did bob dylan live",
      "Parses": [
        {
          "ParseId": "WebQTrn-909.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q392) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q392 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "bob dylan",
          "TopicEntityName": "Bob Dylan",
          "TopicEntityMid": "m.01vrncs",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fpzwf",
              "EntityName": "Minneapolis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h1k6",
              "EntityName": "Duluth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r0m6",
              "EntityName": "Malibu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wjjx",
              "EntityName": "Hibbing"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-911",
      "RawQuestion": "where did pres. obama go to school?",
      "ProcessedQuestion": "where did pres. obama go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-911.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-915",
      "RawQuestion": "who is larry ellison oracle?",
      "ProcessedQuestion": "who is larry ellison oracle",
      "Parses": [
        {
          "ParseId": "WebQTrn-915.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q92759) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q92759 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "larry ellison",
          "TopicEntityName": "Larry Ellison",
          "TopicEntityMid": "m.01762z",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sppp",
              "EntityName": "Investor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-916",
      "RawQuestion": "what is the zip code for fort stockton texas?",
      "ProcessedQuestion": "what is the zip code for fort stockton texas",
      "Parses": [
        {
          "ParseId": "WebQTrn-916.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q979901) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q979901 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "fort stockton texas",
          "TopicEntityName": "Fort Stockton",
          "TopicEntityMid": "m.0107qn",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0211sw9",
              "EntityName": "79735"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-917",
      "RawQuestion": "what teams drafted the morris twins?",
      "ProcessedQuestion": "what teams drafted the morris twins",
      "Parses": [
        {
          "ParseId": "WebQTrn-917.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? only one of the twins; no drafted relation, use the first team instead"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2629179) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2629179 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "morris twins",
          "TopicEntityName": "Markieff Morris",
          "TopicEntityMid": "m.0gmbzmg",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jml5",
              "EntityName": "Phoenix Suns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-922",
      "RawQuestion": "what did whitney houston die off?",
      "ProcessedQuestion": "what did whitney houston die off",
      "Parses": [
        {
          "ParseId": "WebQTrn-922.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34389 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "whitney houston",
          "TopicEntityName": "Whitney Houston",
          "TopicEntityMid": "m.086qd",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g27f",
              "EntityName": "Drowning"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01s1m",
              "EntityName": "Coronary artery disease"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nx6jb",
              "EntityName": "Cocaine overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-926",
      "RawQuestion": "what was van gogh famous for?",
      "ProcessedQuestion": "what was van gogh famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-926.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5582 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "van gogh",
          "TopicEntityName": "Vincent van Gogh",
          "TopicEntityMid": "m.07_m2",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nxqmh",
              "EntityName": "Painter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hz6vv",
              "EntityName": "Visual Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-927",
      "RawQuestion": "where did jane goodall go to school?",
      "ProcessedQuestion": "where did jane goodall go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-927.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q184746) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q184746 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jane goodall",
          "TopicEntityName": "Jane Goodall",
          "TopicEntityMid": "m.0cbqk",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hmw9",
              "EntityName": "Newnham College, Cambridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqqm",
              "EntityName": "Darwin College, Cambridge"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-931",
      "RawQuestion": "where did emily murphy go to school?",
      "ProcessedQuestion": "where did emily murphy go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-931.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q439355) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q439355 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "emily murphy",
          "TopicEntityName": "Emily Murphy",
          "TopicEntityMid": "m.033_v2",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05n93p",
              "EntityName": "Bishop Strachan School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-936",
      "RawQuestion": "where president nixon was born?",
      "ProcessedQuestion": "where president nixon was born",
      "Parses": [
        {
          "ParseId": "WebQTrn-936.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9588 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "president nixon",
          "TopicEntityName": "Richard Nixon",
          "TopicEntityMid": "m.06c97",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r2rk",
              "EntityName": "Yorba Linda"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-939",
      "RawQuestion": "who founded collegehumor?",
      "ProcessedQuestion": "who founded collegehumor",
      "Parses": [
        {
          "ParseId": "WebQTrn-939.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4036407) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4036407 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "collegehumor",
          "TopicEntityName": "CollegeHumor",
          "TopicEntityMid": "m.05_s3l",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bvkch",
              "EntityName": "Josh Abramson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04n5ycy",
              "EntityName": "Ricky Van Veen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-940",
      "RawQuestion": "where did barack obama attend school?",
      "ProcessedQuestion": "where did barack obama attend school",
      "Parses": [
        {
          "ParseId": "WebQTrn-940.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-941",
      "RawQuestion": "what jobs did albert einstein have?",
      "ProcessedQuestion": "what jobs did albert einstein have",
      "Parses": [
        {
          "ParseId": "WebQTrn-941.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q937) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q937 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "albert einstein",
          "TopicEntityName": "Albert Einstein",
          "TopicEntityMid": "m.0jcx",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ktm6n",
              "EntityName": "Theoretical Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-945",
      "RawQuestion": "what timezone is illinois on?",
      "ProcessedQuestion": "what timezone is illinois on",
      "Parses": [
        {
          "ParseId": "WebQTrn-945.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1204) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1204 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "illinois",
          "TopicEntityName": "Illinois",
          "TopicEntityMid": "m.03v0t",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-949",
      "RawQuestion": "where was martin cooper from?",
      "ProcessedQuestion": "where was martin cooper from",
      "Parses": [
        {
          "ParseId": "WebQTrn-949.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q319383) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q319383 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "martin cooper",
          "TopicEntityName": "Martin Cooper",
          "TopicEntityMid": "m.0bt6kc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_d4",
              "EntityName": "Chicago"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-960",
      "RawQuestion": "where north dakota located?",
      "ProcessedQuestion": "where north dakota located",
      "Parses": [
        {
          "ParseId": "WebQTrn-960.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1207 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-960.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fky ns:base.biblioness.bibs_location.country ?x .\n}\n",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-960.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fky ns:base.locations.states_and_provences.country ?x .\n}\n",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "base.locations.states_and_provences.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-960.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fky ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-960.P4",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fky ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-960.P5",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05fky)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05fky ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "north dakota",
          "TopicEntityName": "North Dakota",
          "TopicEntityMid": "m.05fky",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03pz_y",
              "EntityName": "West North Central States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_1l0v",
              "EntityName": "Contiguous United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hzc9m5",
              "EntityName": "United States, with Territories"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0q76g",
              "EntityName": "Midwestern United States"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-963",
      "RawQuestion": "where was the battle of vicksburg held?",
      "ProcessedQuestion": "where was the battle of vicksburg held",
      "Parses": [
        {
          "ParseId": "WebQTrn-963.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1066253) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1066253 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tgp",
              "EntityName": "Mississippi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nfv_",
              "EntityName": "Warren County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-971",
      "RawQuestion": "in what state did the bloody battle of antietam take place?",
      "ProcessedQuestion": "in what state did the bloody battle of antietam take place",
      "Parses": [
        {
          "ParseId": "WebQTrn-971.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q719252) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q719252 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of antietam",
          "TopicEntityName": "Battle of Antietam",
          "TopicEntityMid": "m.0lkxb",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04rrd",
              "EntityName": "Maryland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0txnb",
              "EntityName": "Sharpsburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-973",
      "RawQuestion": "who was dan cody?",
      "ProcessedQuestion": "who was dan cody",
      "Parses": [
        {
          "ParseId": "WebQTrn-973.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5213273) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5213273 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "dan cody",
          "TopicEntityName": "Dan Cody",
          "TopicEntityMid": "m.07m5fb",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-989",
      "RawQuestion": "where did prophet daniel died?",
      "ProcessedQuestion": "where did prophet daniel died",
      "Parses": [
        {
          "ParseId": "WebQTrn-989.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q171724) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q171724 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "daniel",
          "TopicEntityName": "Daniel",
          "TopicEntityMid": "m.02cts",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cyh",
              "EntityName": "Babylon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-993",
      "RawQuestion": "where did lebron james go to highschool?",
      "ProcessedQuestion": "where did lebron james go to highschool",
      "Parses": [
        {
          "ParseId": "WebQTrn-993.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36159) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36159 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "lebron james",
          "TopicEntityName": "LeBron James",
          "TopicEntityMid": "m.01jz6d",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gpg1h",
              "EntityName": "St. Vincent–St. Mary High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-994",
      "RawQuestion": "where was toussaint l'ouverture from?",
      "ProcessedQuestion": "where was toussaint l'ouverture from",
      "Parses": [
        {
          "ParseId": "WebQTrn-994.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205783 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "toussaint l ' ouverture",
          "TopicEntityName": "Toussaint Louverture",
          "TopicEntityMid": "m.011wgw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01f5d8",
              "EntityName": "Saint-Domingue"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-995",
      "RawQuestion": "where do the fla marlins play?",
      "ProcessedQuestion": "where do the fla marlins play",
      "Parses": [
        {
          "ParseId": "WebQTrn-995.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q652879) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q652879 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "marlins",
          "TopicEntityName": "Miami Marlins",
          "TopicEntityMid": "m.02__x",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04m_xv0",
              "EntityName": "Marlins Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-999",
      "RawQuestion": "what influenced william morris to be an artist?",
      "ProcessedQuestion": "what influenced william morris to be an artist",
      "Parses": [
        {
          "ParseId": "WebQTrn-999.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q182589) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q182589 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "william morris",
          "TopicEntityName": "William Morris",
          "TopicEntityMid": "m.08304",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k5mt",
              "EntityName": "John Ruskin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1002",
      "RawQuestion": "where was rod stewart born?",
      "ProcessedQuestion": "where was rod stewart born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1002.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q182655) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q182655 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "rod stewart",
          "TopicEntityName": "Rod Stewart",
          "TopicEntityMid": "m.0qf11",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n9_t",
              "EntityName": "Highgate"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1008",
      "RawQuestion": "what important office did abraham lincoln hold?",
      "ProcessedQuestion": "what important office did abraham lincoln hold",
      "Parses": [
        {
          "ParseId": "WebQTrn-1008.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.052m6c2",
              "EntityName": "Member of Illinois House of Representatives"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060d2",
              "EntityName": "President of the United States"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1012",
      "RawQuestion": "what timezone is minneapolis in?",
      "ProcessedQuestion": "what timezone is minneapolis in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1012.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36091) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36091 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "minneapolis",
          "TopicEntityName": "Minneapolis",
          "TopicEntityMid": "m.0fpzwf",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1013",
      "RawQuestion": "who is aidan davis?",
      "ProcessedQuestion": "who is aidan davis",
      "Parses": [
        {
          "ParseId": "WebQTrn-1013.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4696678) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4696678 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "aidan davis",
          "TopicEntityName": "Aidan Davis",
          "TopicEntityMid": "m.080p6xw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1015",
      "RawQuestion": "what was nicolaus copernicus occupation?",
      "ProcessedQuestion": "what was nicolaus copernicus occupation",
      "Parses": [
        {
          "ParseId": "WebQTrn-1015.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q619) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q619 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "nicolaus copernicus",
          "TopicEntityName": "Nicolaus Copernicus",
          "TopicEntityMid": "m.01vvm4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080ntlp",
              "EntityName": "Diplomat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0frz0",
              "EntityName": "Economist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1025",
      "RawQuestion": "what did bella abzug do?",
      "ProcessedQuestion": "what did bella abzug do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1025.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464724) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464724 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "bella abzug",
          "TopicEntityName": "Bella Abzug",
          "TopicEntityMid": "m.02dqgj",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hx60",
              "EntityName": "Social activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1030",
      "RawQuestion": "where was alice paul born?",
      "ProcessedQuestion": "where was alice paul born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1030.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127328) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127328 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "alice paul",
          "TopicEntityName": "Alice Stokes Paul",
          "TopicEntityMid": "m.02lp71",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xl8s",
              "EntityName": "Moorestown"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1031",
      "RawQuestion": "what did john quincy adams died of?",
      "ProcessedQuestion": "what did john quincy adams died of",
      "Parses": [
        {
          "ParseId": "WebQTrn-1031.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11816 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "john quincy adams",
          "TopicEntityName": "John Quincy Adams",
          "TopicEntityMid": "m.03_nq",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08g5q7",
              "EntityName": "Cerebral hemorrhage"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1034",
      "RawQuestion": "what time zone in the uk?",
      "ProcessedQuestion": "what time zone in the uk",
      "Parses": [
        {
          "ParseId": "WebQTrn-1034.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "uk",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1037",
      "RawQuestion": "who is raquel welch's daughter?",
      "ProcessedQuestion": "who is raquel welch 's daughter",
      "Parses": [
        {
          "ParseId": "WebQTrn-1037.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229545) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229545 wdt:P40 ?x . ?x wdt:P21 wd:Q43445 . } ",
          "PotentialTopicEntityMention": "raquel welch",
          "TopicEntityName": "Raquel Welch",
          "TopicEntityMid": "m.012s5j",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02zsn",
              "EntityName": "Female",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03tgq6",
              "EntityName": "Tahnee Welch"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1039",
      "RawQuestion": "what does the zambezi river flow into?",
      "ProcessedQuestion": "what does the zambezi river flow into",
      "Parses": [
        {
          "ParseId": "WebQTrn-1039.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43106) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43106 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "zambezi river",
          "TopicEntityName": "Zambezi",
          "TopicEntityMid": "m.0p_70",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rz4",
              "EntityName": "Indian Ocean"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1044",
      "RawQuestion": "what is the zip code of new york city?",
      "ProcessedQuestion": "what is the zip code of new york city",
      "Parses": [
        {
          "ParseId": "WebQTrn-1044.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q60) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q60 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "new york city",
          "TopicEntityName": "New York City",
          "TopicEntityMid": "m.02_286",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_mhlxy",
              "EntityName": "10025-5381"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_w67hg",
              "EntityName": "10017-4019"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0107dzx4",
              "EntityName": "11217-1415"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016cddv",
              "EntityName": "10203"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020c50v",
              "EntityName": "11217"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cl_8",
              "EntityName": "10025"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cltt",
              "EntityName": "10019"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020clxq",
              "EntityName": "10014"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020clzc",
              "EntityName": "10040"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm14",
              "EntityName": "10005"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm2l",
              "EntityName": "10021"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm48",
              "EntityName": "10028"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm5s",
              "EntityName": "10013"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm7r",
              "EntityName": "10009"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cm8s",
              "EntityName": "10016"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmcd",
              "EntityName": "10036"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmkn",
              "EntityName": "10012"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmps",
              "EntityName": "10024"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmr8",
              "EntityName": "10002"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmv1",
              "EntityName": "10018"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cmyr",
              "EntityName": "10022"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cn_r",
              "EntityName": "10004"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cn0m",
              "EntityName": "10003"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cn6r",
              "EntityName": "10023"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cng6",
              "EntityName": "10017"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cnj9",
              "EntityName": "10038"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cnlw",
              "EntityName": "10026"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cnmw",
              "EntityName": "10011"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cnsq",
              "EntityName": "10010"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cp3y",
              "EntityName": "10001"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cp8s",
              "EntityName": "10029"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cq__",
              "EntityName": "10031"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cqz5",
              "EntityName": "10128"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cr5d",
              "EntityName": "10281"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020crcb",
              "EntityName": "10027"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cwxl",
              "EntityName": "10020"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cx3d",
              "EntityName": "10007"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020cxr5",
              "EntityName": "10169"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d1nr",
              "EntityName": "10006"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d4r3",
              "EntityName": "10034"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d4sy",
              "EntityName": "10039"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d8m0",
              "EntityName": "10280"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020d8y2",
              "EntityName": "10166"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020dg8t",
              "EntityName": "10032"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020dhp6",
              "EntityName": "10035"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020dtg6",
              "EntityName": "10030"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020f865",
              "EntityName": "10103"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020fscw",
              "EntityName": "10104"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020fynd",
              "EntityName": "10033"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020fzxq",
              "EntityName": "10119"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020tdj5",
              "EntityName": "10107"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0290rz5",
              "EntityName": "10110"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h3_7t",
              "EntityName": "10167"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vkh17",
              "EntityName": "10170"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bqhf8",
              "EntityName": "10116"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtw7x",
              "EntityName": "10037"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtw8w",
              "EntityName": "10041"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtw98",
              "EntityName": "10044"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtw9w",
              "EntityName": "10069"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwbg",
              "EntityName": "10111"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwbw",
              "EntityName": "10112"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwc8",
              "EntityName": "10115"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwd1",
              "EntityName": "10152"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwdg",
              "EntityName": "10153"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwdw",
              "EntityName": "10154"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwf8",
              "EntityName": "10162"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwfp",
              "EntityName": "10165"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwgh",
              "EntityName": "10171"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwgx",
              "EntityName": "10172"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwh9",
              "EntityName": "10173"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwhq",
              "EntityName": "10177"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwj3",
              "EntityName": "10271"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwjj",
              "EntityName": "10278"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwjy",
              "EntityName": "10279"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtwkj",
              "EntityName": "10282"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtz_s",
              "EntityName": "11692"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtz5z",
              "EntityName": "11411"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtz7_",
              "EntityName": "11416"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtz8d",
              "EntityName": "11417"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtzdg",
              "EntityName": "11429"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qs2cj",
              "EntityName": "10106"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.045p8jl",
              "EntityName": "10124"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.046vzr7",
              "EntityName": "10118"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dxqrf",
              "EntityName": "10270"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04k_fg6",
              "EntityName": "10105"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l021b",
              "EntityName": "10043"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lqcpy",
              "EntityName": "10065"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05hr2bj",
              "EntityName": "10286"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05nlt8h",
              "EntityName": "10055"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrq_1",
              "EntityName": "10072"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrq_h",
              "EntityName": "10060"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrq_y",
              "EntityName": "10046"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqfh",
              "EntityName": "10292"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqfy",
              "EntityName": "10285"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqg4",
              "EntityName": "10277"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqgc",
              "EntityName": "10276"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqgl",
              "EntityName": "10275"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqgt",
              "EntityName": "10274"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqh0",
              "EntityName": "10273"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqh7",
              "EntityName": "10272"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqhp",
              "EntityName": "10269"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqhx",
              "EntityName": "10268"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqj_",
              "EntityName": "10258"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqj3",
              "EntityName": "10265"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqjb",
              "EntityName": "10261"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqjk",
              "EntityName": "10260"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqjs",
              "EntityName": "10259"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqk6",
              "EntityName": "10257"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqkf",
              "EntityName": "10256"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqkn",
              "EntityName": "10249"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqkw",
              "EntityName": "10242"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrql2",
              "EntityName": "10213"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrql9",
              "EntityName": "10212"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqlj",
              "EntityName": "10211"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqlw",
              "EntityName": "10199"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqm2",
              "EntityName": "10197"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqm9",
              "EntityName": "10196"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqmj",
              "EntityName": "10185"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqmv",
              "EntityName": "10184"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqn_",
              "EntityName": "10174"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqn1",
              "EntityName": "10179"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqnb",
              "EntityName": "10178"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqnk",
              "EntityName": "10176"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqns",
              "EntityName": "10175"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqp6",
              "EntityName": "10168"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqpf",
              "EntityName": "10164"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqpn",
              "EntityName": "10163"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqpw",
              "EntityName": "10161"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqq2",
              "EntityName": "10160"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqq9",
              "EntityName": "10159"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqqj",
              "EntityName": "10158"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqqr",
              "EntityName": "10157"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqqz",
              "EntityName": "10156"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqr5",
              "EntityName": "10155"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqrd",
              "EntityName": "10151"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqrm",
              "EntityName": "10150"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqrv",
              "EntityName": "10149"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqs1",
              "EntityName": "10138"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqs8",
              "EntityName": "10133"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqsh",
              "EntityName": "10132"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqsq",
              "EntityName": "10131"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqsy",
              "EntityName": "10130"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqt4",
              "EntityName": "10129"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqtc",
              "EntityName": "10126"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqtl",
              "EntityName": "10125"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqv0",
              "EntityName": "10123"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqv7",
              "EntityName": "10122"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqvg",
              "EntityName": "10121"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqvp",
              "EntityName": "10120"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqw3",
              "EntityName": "10117"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqwb",
              "EntityName": "10114"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqwk",
              "EntityName": "10113"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqws",
              "EntityName": "10109"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqx6",
              "EntityName": "10102"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqxf",
              "EntityName": "10099"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqxn",
              "EntityName": "10098"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqxw",
              "EntityName": "10096"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqy2",
              "EntityName": "10095"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqy9",
              "EntityName": "10094"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqyj",
              "EntityName": "10090"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqyr",
              "EntityName": "10087"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqyz",
              "EntityName": "10082"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqz5",
              "EntityName": "10081"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqzd",
              "EntityName": "10080"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqzm",
              "EntityName": "10079"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrqzv",
              "EntityName": "10075"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrr04",
              "EntityName": "10045"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tnk2q",
              "EntityName": "10108"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tnk2y",
              "EntityName": "10101"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09r__f4",
              "EntityName": "10017-3147"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09rz8fm",
              "EntityName": "10048"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sbscr",
              "EntityName": "10048-0203"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sfpb1",
              "EntityName": "10017-3954"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sh45t",
              "EntityName": "10017-2299"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09shyxm",
              "EntityName": "10166-3399"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sl6l2",
              "EntityName": "10261-1094"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09smbyz",
              "EntityName": "10271-0080"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gtbdpl",
              "EntityName": "10024-1826"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gw4pc8",
              "EntityName": "10031-6282"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gw5p40",
              "EntityName": "11429-2708"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gwdbvx",
              "EntityName": "10024-2748"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h7ryg8",
              "EntityName": "10029-6574"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zf6j8h",
              "EntityName": "10007-2136"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1046",
      "RawQuestion": "where did jrr tolkien live?",
      "ProcessedQuestion": "where did jrr tolkien live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1046.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q892) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q892 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "jrr tolkien",
          "TopicEntityName": "J. R. R. Tolkien",
          "TopicEntityMid": "m.041h0",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k33p",
              "EntityName": "Birmingham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1055",
      "RawQuestion": "what team does sergio aguero play for?",
      "ProcessedQuestion": "what team does sergio aguero play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1055.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q119562) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q119562 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sergio aguero",
          "TopicEntityName": "Sergio Agüero",
          "TopicEntityMid": "m.099vgz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01634x",
              "EntityName": "Manchester City F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1060",
      "RawQuestion": "who is susan st james?",
      "ProcessedQuestion": "who is susan st james",
      "Parses": [
        {
          "ParseId": "WebQTrn-1060.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q259559) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q259559 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "susan st james",
          "TopicEntityName": "Susan Saint James",
          "TopicEntityMid": "m.03rp65",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1061",
      "RawQuestion": "what is chris paul's son name?",
      "ProcessedQuestion": "what is chris paul 's son name",
      "Parses": [
        {
          "ParseId": "WebQTrn-1061.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46040 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "chris paul",
          "TopicEntityName": "Chris Paul",
          "TopicEntityMid": "m.0cymln",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j2l1rs",
              "EntityName": "Christopher Emmanuel Paul II"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1070",
      "RawQuestion": "where marie curie come from?",
      "ProcessedQuestion": "where marie curie come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1070.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7186) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7186 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "marie curie",
          "TopicEntityName": "Marie Curie",
          "TopicEntityMid": "m.053_d",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081m_",
              "EntityName": "Warsaw"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1071",
      "RawQuestion": "who is facebook's founder?",
      "ProcessedQuestion": "who is facebook 's founder",
      "Parses": [
        {
          "ParseId": "WebQTrn-1071.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q380) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q380 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "facebook '",
          "TopicEntityName": "Facebook, Inc.",
          "TopicEntityMid": "m.0hmyfsv",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.076zfg8",
              "EntityName": "Eduardo Saverin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.086dny",
              "EntityName": "Mark Zuckerberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cm9z65",
              "EntityName": "Andrew McCollum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8xb7",
              "EntityName": "Dustin Moskovitz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gh3lq",
              "EntityName": "Chris Hughes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1074",
      "RawQuestion": "what kind of music does john mayer play?",
      "ProcessedQuestion": "what kind of music does john mayer play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1074.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215215) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215215 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "john mayer",
          "TopicEntityName": "John Mayer",
          "TopicEntityMid": "m.01s21dg",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01243b",
              "EntityName": "Indie rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016clz",
              "EntityName": "Alternative rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016jny",
              "EntityName": "Folk rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lyv",
              "EntityName": "Country"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027pgn0",
              "EntityName": "Soul rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_kn",
              "EntityName": "Soft rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qdgx",
              "EntityName": "Blue-eyed soul"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w4v",
              "EntityName": "Folk music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09qxq7",
              "EntityName": "Acoustic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gywn",
              "EntityName": "Soul music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mhfr",
              "EntityName": "Country rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1078",
      "RawQuestion": "where is the world series 2012 being played?",
      "ProcessedQuestion": "where is the world series 2012 being played",
      "Parses": [
        {
          "ParseId": "WebQTrn-1078.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1190373) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1190373 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "the world series 2012",
          "TopicEntityName": "2012 World Series",
          "TopicEntityMid": "m.0ds8qct",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_gsg",
              "EntityName": "AT&T Park"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wn2j",
              "EntityName": "Comerica Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1081",
      "RawQuestion": "where does allen iverson live now?",
      "ProcessedQuestion": "where does allen iverson live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-1081.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "need \"to\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190094) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190094 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "allen iverson",
          "TopicEntityName": "Allen Iverson",
          "TopicEntityMid": "m.01sg7_",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013yq",
              "EntityName": "Atlanta"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dclg",
              "EntityName": "Philadelphia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mnsf",
              "EntityName": "Hampton"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1082",
      "RawQuestion": "where was dwight howard born?",
      "ProcessedQuestion": "where was dwight howard born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1082.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25278) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25278 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "dwight howard",
          "TopicEntityName": "Dwight Howard",
          "TopicEntityMid": "m.02fg_f",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013yq",
              "EntityName": "Atlanta"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1084",
      "RawQuestion": "what timezone is texas san antonio in?",
      "ProcessedQuestion": "what timezone is texas san antonio in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1084.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q975) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q975 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "san antonio",
          "TopicEntityName": "San Antonio",
          "TopicEntityMid": "m.0f2w0",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1085",
      "RawQuestion": "where is alexandria located?",
      "ProcessedQuestion": "where is alexandria located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1085.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q87) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q87 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "alexandria",
          "TopicEntityName": "Alexandria",
          "TopicEntityMid": "m.013g3",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k54",
              "EntityName": "Egypt"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1085.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013g3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013g3 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "alexandria",
          "TopicEntityName": "Alexandria",
          "TopicEntityMid": "m.013g3",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d5q2",
              "EntityName": "Alexandria Governorate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k54",
              "EntityName": "Egypt"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1089",
      "RawQuestion": "what team does chris humphrey play for?",
      "ProcessedQuestion": "what team does chris humphrey play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1089.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q797835) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q797835 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "chris humphrey",
          "TopicEntityName": "Chris Humphrey",
          "TopicEntityMid": "m.0kr_15",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027ffq",
              "EntityName": "Preston North End F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03zbg0",
              "EntityName": "Jamaica national football team"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1095",
      "RawQuestion": "where did pixie lott go to school?",
      "ProcessedQuestion": "where did pixie lott go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1095.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207177) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207177 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "pixie lott",
          "TopicEntityName": "Pixie Lott",
          "TopicEntityMid": "m.05p300p",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08tyb_",
              "EntityName": "Italia Conti Academy of Theatre Arts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1096",
      "RawQuestion": "what date did we invade iraq?",
      "ProcessedQuestion": "what date did we invade iraq",
      "Parses": [
        {
          "ParseId": "WebQTrn-1096.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? ambiguos \"we\" and which war with Iraq they are talking about."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q107802) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q107802 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "invade iraq",
          "TopicEntityName": "2003 invasion of Iraq",
          "TopicEntityMid": "m.01cpp0",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2003-03-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1100",
      "RawQuestion": "what do the buddha believe in?",
      "ProcessedQuestion": "what do the buddha believe in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1100.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9441) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9441 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "buddha",
          "TopicEntityName": "Gautama Buddha",
          "TopicEntityMid": "m.015k7",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.092bf5",
              "EntityName": "Buddhism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1102",
      "RawQuestion": "what is the name of walt disney's son?",
      "ProcessedQuestion": "what is the name of walt disney 's son",
      "Parses": [
        {
          "ParseId": "WebQTrn-1102.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "no sons, just daughters"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8704) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8704 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "walt disney",
          "TopicEntityName": "Walt Disney",
          "TopicEntityMid": "m.081nh",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1106",
      "RawQuestion": "what time zone is it in london england?",
      "ProcessedQuestion": "what time zone is it in london england",
      "Parses": [
        {
          "ParseId": "WebQTrn-1106.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q84) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q84 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "london",
          "TopicEntityName": "London",
          "TopicEntityMid": "m.04jpl",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1111",
      "RawQuestion": "what is the name of the new orleans saints football stadium?",
      "ProcessedQuestion": "what is the name of the new orleans saints football stadium",
      "Parses": [
        {
          "ParseId": "WebQTrn-1111.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q172435) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q172435 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "new orleans saints",
          "TopicEntityName": "New Orleans Saints",
          "TopicEntityMid": "m.05g3v",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y3xn",
              "EntityName": "Mercedes-Benz Superdome"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1116",
      "RawQuestion": "what type of music was scott joplin noted for?",
      "ProcessedQuestion": "what type of music was scott joplin noted for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1116.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q191499) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q191499 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "scott joplin",
          "TopicEntityName": "Scott Joplin",
          "TopicEntityMid": "m.07b69",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06m6j",
              "EntityName": "Ragtime"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cdr_y",
              "EntityName": "March"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1119",
      "RawQuestion": "where is adam smith from?",
      "ProcessedQuestion": "where is adam smith from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1119.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9381) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9381 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "adam smith",
          "TopicEntityName": "Adam Smith",
          "TopicEntityMid": "m.0tfc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zrs_",
              "EntityName": "Kirkcaldy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1123",
      "RawQuestion": "where is north port florida located?",
      "ProcessedQuestion": "where is north port florida located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1123.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2155370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2155370 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "north port florida",
          "TopicEntityName": "North Port",
          "TopicEntityMid": "m.01z_vzm",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jxkf",
              "EntityName": "Sarasota County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1123.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01z_vzm)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01z_vzm ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "north port florida",
          "TopicEntityName": "North Port",
          "TopicEntityMid": "m.01z_vzm",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xry",
              "EntityName": "Florida"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jxkf",
              "EntityName": "Sarasota County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1128",
      "RawQuestion": "who is abraham maslow?",
      "ProcessedQuestion": "who is abraham maslow",
      "Parses": [
        {
          "ParseId": "WebQTrn-1128.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23357) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23357 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "abraham maslow",
          "TopicEntityName": "Abraham Maslow",
          "TopicEntityMid": "m.01r_fw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jgxn",
              "EntityName": "Psychologist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1129",
      "RawQuestion": "where did the cuban missile crisis happen?",
      "ProcessedQuestion": "where did the cuban missile crisis happen",
      "Parses": [
        {
          "ParseId": "WebQTrn-1129.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128160) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128160 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "cuban missile crisis",
          "TopicEntityName": "Cuban Missile Crisis",
          "TopicEntityMid": "m.01zxx",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02613",
              "EntityName": "Caribbean Sea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d04z6",
              "EntityName": "Cuba"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1134",
      "RawQuestion": "where is port lavaca tx?",
      "ProcessedQuestion": "where is port lavaca tx",
      "Parses": [
        {
          "ParseId": "WebQTrn-1134.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q982477) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q982477 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "port lavaca tx",
          "TopicEntityName": "Port Lavaca",
          "TopicEntityMid": "m.0_z4x",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0msd9",
              "EntityName": "Calhoun County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1134.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0_z4x)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0_z4x ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "port lavaca tx",
          "TopicEntityName": "Port Lavaca",
          "TopicEntityMid": "m.0_z4x",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07b_l",
              "EntityName": "Texas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0msd9",
              "EntityName": "Calhoun County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1135",
      "RawQuestion": "which team does ronaldinho play for 2013?",
      "ProcessedQuestion": "which team does ronaldinho play for 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-1135.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39444 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019m6z",
              "EntityName": "Clube Atlético Mineiro"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1141",
      "RawQuestion": "what business does raj kundra do?",
      "ProcessedQuestion": "what business does raj kundra do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1141.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7285320) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7285320 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "raj kundra",
          "TopicEntityName": "Raj Kundra",
          "TopicEntityMid": "m.09k687g",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1143",
      "RawQuestion": "what is the time zone in california called?",
      "ProcessedQuestion": "what is the time zone in california called",
      "Parses": [
        {
          "ParseId": "WebQTrn-1143.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q99) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q99 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "california",
          "TopicEntityName": "California",
          "TopicEntityMid": "m.01n7q",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1144",
      "RawQuestion": "what team does drogba play for 2013?",
      "ProcessedQuestion": "what team does drogba play for 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-1144.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48892) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48892 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "drogba",
          "TopicEntityName": "Didier Drogba",
          "TopicEntityMid": "m.03_y2f",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040pyq",
              "EntityName": "Ivory Coast national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kd5d",
              "EntityName": "Shanghai Greenland Shenhua F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06zpgb2",
              "EntityName": "Galatasaray S.K."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1151",
      "RawQuestion": "what timezone does sweden have?",
      "ProcessedQuestion": "what timezone does sweden have",
      "Parses": [
        {
          "ParseId": "WebQTrn-1151.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "sweden",
          "TopicEntityName": "Sweden",
          "TopicEntityMid": "m.0d0vqn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02llzg",
              "EntityName": "Central European Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1152",
      "RawQuestion": "who played lois en superman?",
      "ProcessedQuestion": "who played lois en superman",
      "Parses": [
        {
          "ParseId": "WebQTrn-1152.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? Chose superman film instead of tv series or the original movies"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q622769) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q622769 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q845922 . } ",
          "PotentialTopicEntityMention": "superman",
          "TopicEntityName": "Man of Steel",
          "TopicEntityMid": "m.0gjc4d3",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04pzy",
              "EntityName": "Lois Lane",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b25vg",
              "EntityName": "Amy Adams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1153",
      "RawQuestion": "where does the zambezi river end?",
      "ProcessedQuestion": "where does the zambezi river end",
      "Parses": [
        {
          "ParseId": "WebQTrn-1153.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43106) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43106 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "zambezi river",
          "TopicEntityName": "Zambezi",
          "TopicEntityMid": "m.0p_70",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rz4",
              "EntityName": "Indian Ocean"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1157",
      "RawQuestion": "where is mount vernon virginia?",
      "ProcessedQuestion": "where is mount vernon virginia",
      "Parses": [
        {
          "ParseId": "WebQTrn-1157.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1375384) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1375384 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "mount vernon virginia",
          "TopicEntityName": "Mount Vernon",
          "TopicEntityMid": "m.010m5w",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mnz0",
              "EntityName": "Fairfax County, Virginia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1157.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.013v2f)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.013v2f ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "mount vernon virginia",
          "TopicEntityName": "Mount Vernon",
          "TopicEntityMid": "m.013v2f",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010m5w",
              "EntityName": "Mount Vernon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07z1m",
              "EntityName": "Virginia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mnz0",
              "EntityName": "Fairfax County, Virginia"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1157.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010m5w)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010m5w ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "mount vernon virginia",
          "TopicEntityName": "Mount Vernon",
          "TopicEntityMid": "m.010m5w",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sh_8",
              "EntityName": "Washington metropolitan area"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07z1m",
              "EntityName": "Virginia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mnz0",
              "EntityName": "Fairfax County, Virginia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1160",
      "RawQuestion": "when did george w bush take office?",
      "ProcessedQuestion": "when did george w bush take office",
      "Parses": [
        {
          "ParseId": "WebQTrn-1160.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "george w bush",
          "TopicEntityName": "George W. Bush",
          "TopicEntityMid": "m.09b6zr",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2001-01-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1165",
      "RawQuestion": "who is lincoln steffens?",
      "ProcessedQuestion": "who is lincoln steffens",
      "Parses": [
        {
          "ParseId": "WebQTrn-1165.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1825813) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1825813 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "lincoln steffens",
          "TopicEntityName": "Lincoln Steffens",
          "TopicEntityMid": "m.01bw1c",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1173",
      "RawQuestion": "who was arthur miller influenced by?",
      "ProcessedQuestion": "who was arthur miller influenced by",
      "Parses": [
        {
          "ParseId": "WebQTrn-1173.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q80596) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q80596 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "arthur miller",
          "TopicEntityName": "Arthur Miller",
          "TopicEntityMid": "m.0yfp",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03pm9",
              "EntityName": "Henrik Ibsen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06pzl",
              "EntityName": "Sophocles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081k8",
              "EntityName": "William Shakespeare"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1179",
      "RawQuestion": "what happened to nina simone?",
      "ProcessedQuestion": "what happened to nina simone",
      "Parses": [
        {
          "ParseId": "WebQTrn-1179.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q174957) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q174957 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "nina simone",
          "TopicEntityName": "Nina Simone",
          "TopicEntityMid": "m.03f3_p3",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8hd",
              "EntityName": "Breast cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1183",
      "RawQuestion": "where did galileo go to school?",
      "ProcessedQuestion": "where did galileo go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1183.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q307) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q307 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "galileo",
          "TopicEntityName": "Galileo Galilei",
          "TopicEntityMid": "m.034ks",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bbyw",
              "EntityName": "University of Pisa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1185",
      "RawQuestion": "who did david villa play for?",
      "ProcessedQuestion": "who did david villa play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1185.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83006) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83006 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "david villa",
          "TopicEntityName": "David Villa",
          "TopicEntityMid": "m.08zpzz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0270my1",
              "EntityName": "Asturias autonomous football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w64f",
              "EntityName": "Spain national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wftzq",
              "EntityName": "Sporting de Gijón B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kbtr4",
              "EntityName": "Melbourne City FC"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080_y",
              "EntityName": "Valencia CF"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kr10",
              "EntityName": "Sporting de Gijón"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lg7v",
              "EntityName": "Atlético Madrid"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lhp1",
              "EntityName": "Real Zaragoza"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0t_f17t",
              "EntityName": "New York City FC"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1188",
      "RawQuestion": "where robert frost went to school?",
      "ProcessedQuestion": "where robert frost went to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1188.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q168728) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q168728 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "robert frost",
          "TopicEntityName": "Robert Frost",
          "TopicEntityMid": "m.06gq_",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bqy",
              "EntityName": "Dartmouth College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ksy",
              "EntityName": "Harvard University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1191",
      "RawQuestion": "what county is plainfield il in?",
      "ProcessedQuestion": "what county is plainfield il in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1191.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1012017) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1012017 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "plainfield",
          "TopicEntityName": "Plainfield",
          "TopicEntityMid": "m.0sjdw",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l3kx",
              "EntityName": "Will County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1191.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0sjdw)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0sjdw ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "plainfield",
          "TopicEntityName": "Plainfield",
          "TopicEntityMid": "m.0sjdw",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l3kx",
              "EntityName": "Will County"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nvfd",
              "EntityName": "Kendall County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1193",
      "RawQuestion": "who founded the sisters of saint joseph?",
      "ProcessedQuestion": "who founded the sisters of saint joseph",
      "Parses": [
        {
          "ParseId": "WebQTrn-1193.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33117) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33117 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "sisters of saint joseph",
          "TopicEntityName": "Sisters of St. Joseph",
          "TopicEntityMid": "m.06jc5d",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06jb6m",
              "EntityName": "Mary MacKillop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06jc3_",
              "EntityName": "Julian Tenison-Woods"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1203",
      "RawQuestion": "what country does nike operate in?",
      "ProcessedQuestion": "what country does nike operate in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1203.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? there's no relation for operations, but this answers a similar question."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q483915) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q483915 wdt:P159 ?y . ?y wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "nike",
          "TopicEntityName": "Nike, Inc.",
          "TopicEntityMid": "m.0lwkh",
          "InferentialChain": [
            "organization.organization.headquarters",
            "location.mailing_address.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1206",
      "RawQuestion": "where will euro 2012 be?",
      "ProcessedQuestion": "where will euro 2012 be",
      "Parses": [
        {
          "ParseId": "WebQTrn-1206.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q22669) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q22669 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "euro 2012",
          "TopicEntityName": "UEFA Euro 2012",
          "TopicEntityMid": "m.06t1s0",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qbpd",
              "EntityName": "Donetsk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sn34",
              "EntityName": "Kiev"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035m6",
              "EntityName": "Gdańsk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xnv",
              "EntityName": "Poznań"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081m_",
              "EntityName": "Warsaw"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.082sy9",
              "EntityName": "Kharkiv"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0845b",
              "EntityName": "Wrocław"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d7_n",
              "EntityName": "Lviv"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1208",
      "RawQuestion": "when did the 7th harry potter book come out?",
      "ProcessedQuestion": "when did the 7th harry potter book come out",
      "Parses": [
        {
          "ParseId": "WebQTrn-1208.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46758) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46758 wdt:P577 ?x . } ",
          "PotentialTopicEntityMention": "7th harry potter book",
          "TopicEntityName": "Harry Potter and the Deathly Hallows",
          "TopicEntityMid": "m.03bkkv",
          "InferentialChain": [
            "book.written_work.date_of_first_publication"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2007-07-21",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1210",
      "RawQuestion": "where is south carolina located?",
      "ProcessedQuestion": "where is south carolina located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1210.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1456) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1456 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:base.biblioness.bibs_location.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:base.locations.states_and_provences.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "base.locations.states_and_provences.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P4",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1210.P5",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06yxd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06yxd ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "south carolina",
          "TopicEntityName": "South Carolina",
          "TopicEntityMid": "m.06yxd",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dwt_",
              "EntityName": "Southeastern United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ph5j",
              "EntityName": "South Atlantic States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_1l0v",
              "EntityName": "Contiguous United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hzc9m5",
              "EntityName": "United States, with Territories"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1216",
      "RawQuestion": "what awards has morgan freeman won?",
      "ProcessedQuestion": "what awards has morgan freeman won",
      "Parses": [
        {
          "ParseId": "WebQTrn-1216.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48337) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48337 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "morgan freeman",
          "TopicEntityName": "Morgan Freeman",
          "TopicEntityMid": "m.055c8",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019f7x",
              "EntityName": "Golden Globe Award for Best Actor – Motion Picture Musical or Comedy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025j12",
              "EntityName": "Kennedy Center Honors"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027b9j5",
              "EntityName": "London Film Critics' Circle Award for Actor of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027c95y",
              "EntityName": "National Board of Review Award for Best Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02f2hd",
              "EntityName": "NAACP Image Award for Outstanding Actor in a Motion Picture"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02f2kw",
              "EntityName": "NAACP Image Award for Outstanding Supporting Actor in a Motion Picture"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02spb2",
              "EntityName": "AFI Life Achievement Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x73k6",
              "EntityName": "National Society of Film Critics Award for Best Supporting Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x8n1n",
              "EntityName": "Independent Spirit Award for Best Supporting Male"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.054ky1",
              "EntityName": "Golden Globe Cecil B. DeMille Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07n939s",
              "EntityName": "Golden Icon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sdmz",
              "EntityName": "Screen Actors Guild Award for Outstanding Performance by a Male Actor in a Supporting Role"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09tly71",
              "EntityName": "People's Choice Award for Favorite Cast"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gkmcgj",
              "EntityName": "Camie Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gqy2",
              "EntityName": "Academy Award for Best Actor in a Supporting Role"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hj8khy",
              "EntityName": "People's Choice Award for Favorite Movie Icon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lyxb7f",
              "EntityName": "American Society of Cinematographers Board of the Governors Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zbhqxc",
              "EntityName": "Obie Award for Performance"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1227",
      "RawQuestion": "what guitar did andres segovia use?",
      "ProcessedQuestion": "what guitar did andres segovia use",
      "Parses": [
        {
          "ParseId": "WebQTrn-1227.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192529) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192529 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "andres segovia",
          "TopicEntityName": "Andrés Segovia",
          "TopicEntityMid": "m.0jg34",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1231",
      "RawQuestion": "what country did osama bin laden live in?",
      "ProcessedQuestion": "what country did osama bin laden live in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1231.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1317 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "osama bin laden",
          "TopicEntityName": "Osama bin Laden",
          "TopicEntityMid": "m.05mg9",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z215",
              "EntityName": "Saudi Arabia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05sb1",
              "EntityName": "Pakistan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06tw8",
              "EntityName": "Sudan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jdd",
              "EntityName": "Afghanistan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1235",
      "RawQuestion": "what time zone is cincinnati oh in?",
      "ProcessedQuestion": "what time zone is cincinnati oh in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1235.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43196) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43196 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "cincinnati",
          "TopicEntityName": "Cincinnati",
          "TopicEntityMid": "m.01snm",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1237",
      "RawQuestion": "where does peter king live?",
      "ProcessedQuestion": "where does peter king live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1237.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7175203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7175203 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "peter king",
          "TopicEntityName": "Peter King",
          "TopicEntityMid": "m.054xd6",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mzvm",
              "EntityName": "Springfield"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1246",
      "RawQuestion": "what style of music did jimi hendrix play?",
      "ProcessedQuestion": "what style of music did jimi hendrix play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1246.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5928) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5928 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "jimi hendrix",
          "TopicEntityName": "Jimi Hendrix",
          "TopicEntityMid": "m.01vsy3q",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02l96k",
              "EntityName": "Acid rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03lty",
              "EntityName": "Heavy metal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05w3f",
              "EntityName": "Psychedelic rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06j6l",
              "EntityName": "Rhythm and blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08jyyk",
              "EntityName": "Experimental rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09nwwf",
              "EntityName": "Funk rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cgxt",
              "EntityName": "Psychedelia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dl5d",
              "EntityName": "Progressive rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xhtw",
              "EntityName": "Hard rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1248",
      "RawQuestion": "who played anakin skywalker in phantom menace?",
      "ProcessedQuestion": "who played anakin skywalker in phantom menace",
      "Parses": [
        {
          "ParseId": "WebQTrn-1248.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165713) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165713 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "phantom menace",
          "TopicEntityName": "Star Wars Episode I: The Phantom Menace",
          "TopicEntityMid": "m.0ddt_",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1248.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddt_ .\n}\n",
          "PotentialTopicEntityMention": "anakin skywalker",
          "TopicEntityName": "Darth Vader",
          "TopicEntityMid": "m.0f2y0",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0ddt_",
              "EntityName": "Star Wars Episode I: The Phantom Menace",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p8dm",
              "EntityName": "Jake Lloyd"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1252",
      "RawQuestion": "where was the battle of vicksburg located?",
      "ProcessedQuestion": "where was the battle of vicksburg located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1252.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1066253) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1066253 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of vicksburg",
          "TopicEntityName": "Siege of Vicksburg",
          "TopicEntityMid": "m.01hf7f",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tgp",
              "EntityName": "Mississippi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nfv_",
              "EntityName": "Warren County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1254",
      "RawQuestion": "where was the gallipoli campaign waged?",
      "ProcessedQuestion": "where was the gallipoli campaign waged",
      "Parses": [
        {
          "ParseId": "WebQTrn-1254.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q164983) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q164983 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "gallipoli",
          "TopicEntityName": "Gallipoli Campaign",
          "TopicEntityMid": "m.01fc7p",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03czv",
              "EntityName": "Gallipoli"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1257",
      "RawQuestion": "what did king george vi die of?",
      "ProcessedQuestion": "what did king george vi die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-1257.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q280856) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q280856 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "king george vi",
          "TopicEntityName": "George VI",
          "TopicEntityMid": "m.0cm83",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p3w",
              "EntityName": "Lung cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1260",
      "RawQuestion": "what city was robert kennedy killed in?",
      "ProcessedQuestion": "what city was robert kennedy killed in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1260.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25310) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25310 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "robert kennedy",
          "TopicEntityName": "Robert F. Kennedy",
          "TopicEntityMid": "m.06hx2",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1263",
      "RawQuestion": "who was killed first tupac or biggie?",
      "ProcessedQuestion": "who was killed first tupac or biggie",
      "Parses": [
        {
          "ParseId": "WebQTrn-1263.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date Comparision. Original comment: F Need to join two entities and find the smaller Date of Death"
          },
          "Sparql": "#MANUAL SPARQL SELECT ?x WHERE {   ?x wdt:P570 ?d .   FILTER (?x = wd:Q6107||?x = wd:Q179157) } ORDER BY ?d LIMIT 1",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07pzc",
              "EntityName": "Tupac Shakur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1265",
      "RawQuestion": "who won the nobel peace prize in 2007?",
      "ProcessedQuestion": "who won the nobel peace prize in 2007",
      "Parses": [
        {
          "ParseId": "WebQTrn-1265.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35637) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35637 wdt:P1346 ?y . ?y wdt:P1346 ?x . FILTER(NOT EXISTS {?y wdt:P585 ?sk0} ||  EXISTS {?y wdt:P585 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2007-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P585 ?sk2} ||  EXISTS {?y wdt:P585 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2007-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "nobel peace prize",
          "TopicEntityName": "Nobel Peace Prize",
          "TopicEntityMid": "m.05f3q",
          "InferentialChain": [
            "award.award_category.winners",
            "award.award_honor.award_winner"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2007-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2007-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2007-01-01",
            "End": "2007-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2007"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wfs",
              "EntityName": "Intergovernmental Panel on Climate Change"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d05fv",
              "EntityName": "Al Gore"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hncyss",
              "EntityName": "Malala Yousafzai"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1271",
      "RawQuestion": "what type of music is tchaikovsky?",
      "ProcessedQuestion": "what type of music is tchaikovsky",
      "Parses": [
        {
          "ParseId": "WebQTrn-1271.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7315) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7315 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "tchaikovsky",
          "TopicEntityName": "Pyotr Ilyich Tchaikovsky",
          "TopicEntityMid": "m.063tn",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021dvj",
              "EntityName": "Ballet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05lls",
              "EntityName": "Opera"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q6jz",
              "EntityName": "Art song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1274",
      "RawQuestion": "where did helen keller go to school?",
      "ProcessedQuestion": "where did helen keller go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1274.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38203 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "helen keller",
          "TopicEntityName": "Helen Keller",
          "TopicEntityMid": "m.03ppx",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01h4dd",
              "EntityName": "Perkins School for the Blind"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k7xz",
              "EntityName": "Radcliffe College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06b84v",
              "EntityName": "The Cambridge School of Weston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tr9z",
              "EntityName": "Wright-Humason School for the Deaf"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bydgq",
              "EntityName": "Horace Mann School for the Deaf and Hard of Hearing"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1281",
      "RawQuestion": "what did larry hagman die of?",
      "ProcessedQuestion": "what did larry hagman die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-1281.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q100440) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q100440 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "larry hagman",
          "TopicEntityName": "Larry Hagman",
          "TopicEntityMid": "m.01vyv9",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0369n2",
              "EntityName": "Head and neck cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04psf",
              "EntityName": "Leukemia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1283",
      "RawQuestion": "what timezone is michigan usa?",
      "ProcessedQuestion": "what timezone is michigan usa",
      "Parses": [
        {
          "ParseId": "WebQTrn-1283.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1166) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1166 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "michigan",
          "TopicEntityName": "Michigan",
          "TopicEntityMid": "m.04rrx",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1297",
      "RawQuestion": "where did justin bieber grew up?",
      "ProcessedQuestion": "where did justin bieber grew up",
      "Parses": [
        {
          "ParseId": "WebQTrn-1297.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34086) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34086 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "justin bieber",
          "TopicEntityName": "Justin Bieber",
          "TopicEntityMid": "m.06w2sn5",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b1t1",
              "EntityName": "London"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1302",
      "RawQuestion": "what is zip code for chicago illinois?",
      "ProcessedQuestion": "what is zip code for chicago illinois",
      "Parses": [
        {
          "ParseId": "WebQTrn-1302.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1297) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1297 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "chicago illinois",
          "TopicEntityName": "Chicago",
          "TopicEntityMid": "m.01_d4",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p_k",
              "EntityName": "60626"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p6k",
              "EntityName": "60618"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p8l",
              "EntityName": "60601"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p9s",
              "EntityName": "60610"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pdj",
              "EntityName": "60602"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pgd",
              "EntityName": "60622"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6ph7",
              "EntityName": "60614"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pmb",
              "EntityName": "60607"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pnb",
              "EntityName": "60649"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pp5",
              "EntityName": "60660"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6ps8",
              "EntityName": "60611"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pvy",
              "EntityName": "60646"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pxw",
              "EntityName": "60657"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q0k",
              "EntityName": "60613"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q1q",
              "EntityName": "60640"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q8p",
              "EntityName": "60619"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q9q",
              "EntityName": "60605"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qcm",
              "EntityName": "60659"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qjr",
              "EntityName": "60616"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qp4",
              "EntityName": "60608"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qrp",
              "EntityName": "60661"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qsj",
              "EntityName": "60625"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qz6",
              "EntityName": "60647"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r1z",
              "EntityName": "60630"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r78",
              "EntityName": "60603"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r82",
              "EntityName": "60631"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6rf1",
              "EntityName": "60606"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6rfw",
              "EntityName": "60655"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6s_6",
              "EntityName": "60634"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6s0l",
              "EntityName": "60617"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6smy",
              "EntityName": "60609"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6sws",
              "EntityName": "60632"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t1b",
              "EntityName": "60623"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t43",
              "EntityName": "60629"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t4y",
              "EntityName": "60652"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t5r",
              "EntityName": "60638"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t95",
              "EntityName": "60645"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6tgy",
              "EntityName": "60615"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6v4j",
              "EntityName": "60604"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6v6w",
              "EntityName": "60637"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6y3n",
              "EntityName": "60643"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6zk1",
              "EntityName": "60624"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_7140",
              "EntityName": "60653"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_71cx",
              "EntityName": "60666"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_72xz",
              "EntityName": "60628"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_73_n",
              "EntityName": "60641"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_75zb",
              "EntityName": "60612"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_77qt",
              "EntityName": "60639"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_77x6",
              "EntityName": "60636"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78lh",
              "EntityName": "60651"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78nm",
              "EntityName": "60620"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78wb",
              "EntityName": "60654"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_795b",
              "EntityName": "60644"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_7gfz",
              "EntityName": "60656"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dpqpb",
              "EntityName": "60621"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dpqrm",
              "EntityName": "60633"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065rklh",
              "EntityName": "60642"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmf7",
              "EntityName": "60701"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfg",
              "EntityName": "60699"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfp",
              "EntityName": "60697"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfx",
              "EntityName": "60696"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmg_",
              "EntityName": "60690"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmg3",
              "EntityName": "60695"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgb",
              "EntityName": "60694"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgk",
              "EntityName": "60693"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgs",
              "EntityName": "60691"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmh6",
              "EntityName": "60689"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhf",
              "EntityName": "60688"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhn",
              "EntityName": "60687"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhw",
              "EntityName": "60686"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmj2",
              "EntityName": "60685"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmj9",
              "EntityName": "60684"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjj",
              "EntityName": "60682"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjr",
              "EntityName": "60681"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjz",
              "EntityName": "60680"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmk5",
              "EntityName": "60678"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkd",
              "EntityName": "60677"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkm",
              "EntityName": "60675"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkv",
              "EntityName": "60674"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqml1",
              "EntityName": "60673"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqml8",
              "EntityName": "60670"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmlh",
              "EntityName": "60669"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmlq",
              "EntityName": "60668"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmly",
              "EntityName": "60664"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqms5",
              "EntityName": "60290"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sh942",
              "EntityName": "60657-3241"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gs227r",
              "EntityName": "60637-1424"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1316",
      "RawQuestion": "where does the philadelphia union soccer team play?",
      "ProcessedQuestion": "where does the philadelphia union soccer team play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1316.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q689874) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q689874 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "philadelphia union",
          "TopicEntityName": "Philadelphia Union",
          "TopicEntityMid": "m.03mck3c",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03clwrg",
              "EntityName": "PPL Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1322",
      "RawQuestion": "where did anne frank live before the war?",
      "ProcessedQuestion": "where did anne frank live before the war",
      "Parses": [
        {
          "ParseId": "WebQTrn-1322.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. Original comment: F cannot handle before question"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE {     wd:Q4583 wdt:P551 ?y .  # ann frank     ?y wdt:P551 ?x ;        wdt:P580 ?start_date .     wd:Q362 wdt:P580 ?war_start_date .     FILTER (xsd:datetime(?start_date) - xsd:datetime(?war_start_date) < 0) }",
          "PotentialTopicEntityMention": "anne frank",
          "TopicEntityName": "Anne Frank",
          "TopicEntityMid": "m.03d9rk",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z0j",
              "EntityName": "Frankfurt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k3p",
              "EntityName": "Amsterdam"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1323",
      "RawQuestion": "where was joseph p kennedy born?",
      "ProcessedQuestion": "where was joseph p kennedy born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1323.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313696 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "joseph p kennedy",
          "TopicEntityName": "Joseph P. Kennedy, Sr.",
          "TopicEntityMid": "m.01qlg1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cx_",
              "EntityName": "Boston"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1326",
      "RawQuestion": "where do the san francisco giants play baseball?",
      "ProcessedQuestion": "where do the san francisco giants play baseball",
      "Parses": [
        {
          "ParseId": "WebQTrn-1326.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q308966) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q308966 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "san francisco giants",
          "TopicEntityName": "San Francisco Giants",
          "TopicEntityMid": "m.0713r",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_gsg",
              "EntityName": "AT&T Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1329",
      "RawQuestion": "what club team is diego forlan on?",
      "ProcessedQuestion": "what club team is diego forlan on",
      "Parses": [
        {
          "ParseId": "WebQTrn-1329.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "missing filter for \"club team\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q261534) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q261534 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "diego forlan",
          "TopicEntityName": "Diego Forlán",
          "TopicEntityMid": "m.03g66x",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0329r5",
              "EntityName": "Uruguay national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04d8fm",
              "EntityName": "Cerezo Osaka"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1332",
      "RawQuestion": "what timezone are the bahamas?",
      "ProcessedQuestion": "what timezone are the bahamas",
      "Parses": [
        {
          "ParseId": "WebQTrn-1332.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q778) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q778 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "bahamas",
          "TopicEntityName": "Bahamas",
          "TopicEntityMid": "m.0160w",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1333",
      "RawQuestion": "where did l frank baum die?",
      "ProcessedQuestion": "where did l frank baum die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1333.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207544) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207544 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "l frank baum",
          "TopicEntityName": "L. Frank Baum",
          "TopicEntityMid": "m.04mby",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2wj",
              "EntityName": "Hollywood"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1335",
      "RawQuestion": "what inspired steinbeck to write?",
      "ProcessedQuestion": "what inspired steinbeck to write",
      "Parses": [
        {
          "ParseId": "WebQTrn-1335.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39212) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39212 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "steinbeck",
          "TopicEntityName": "John Steinbeck",
          "TopicEntityMid": "m.04107",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023jy9",
              "EntityName": "Sherwood Anderson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jrh",
              "EntityName": "Thomas Malory"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084w8",
              "EntityName": "William Faulkner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09482",
              "EntityName": "Robert Burns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1338",
      "RawQuestion": "what musical instruments did duke ellington play?",
      "ProcessedQuestion": "what musical instruments did duke ellington play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1338.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4030) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4030 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "duke ellington",
          "TopicEntityName": "Duke Ellington",
          "TopicEntityMid": "m.0bdlj",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ch55",
              "EntityName": "Jazz piano"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1347",
      "RawQuestion": "what did gerald ford die of?",
      "ProcessedQuestion": "what did gerald ford die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-1347.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9582 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "gerald ford",
          "TopicEntityName": "Gerald Ford",
          "TopicEntityMid": "m.0c_md_",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k6hp",
              "EntityName": "Cardiovascular disease"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1357",
      "RawQuestion": "what country did vasco da gama came from?",
      "ProcessedQuestion": "what country did vasco da gama came from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1357.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7328) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7328 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "vasco da gama",
          "TopicEntityName": "Vasco da Gama",
          "TopicEntityMid": "m.0c8dk",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01hk04",
              "EntityName": "Portuguese Empire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1363",
      "RawQuestion": "where did laura ingalls wilder live?",
      "ProcessedQuestion": "where did laura ingalls wilder live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1363.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q237514) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q237514 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "laura ingalls wilder",
          "TopicEntityName": "Laura Ingalls Wilder",
          "TopicEntityMid": "m.01bt87",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_r0n",
              "EntityName": "De Smet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mmj7",
              "EntityName": "Pepin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0488g",
              "EntityName": "Kansas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz6k_",
              "EntityName": "Burr Oak"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wg6f",
              "EntityName": "Walnut Grove"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x14p",
              "EntityName": "Mansfield"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1365",
      "RawQuestion": "where christopher columbus was born?",
      "ProcessedQuestion": "where christopher columbus was born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1365.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7322) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7322 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "christopher columbus",
          "TopicEntityName": "Christopher Columbus",
          "TopicEntityMid": "m.01pwz",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hknf",
              "EntityName": "Genoa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1366",
      "RawQuestion": "who did kat graham play in parent trap?",
      "ProcessedQuestion": "who did kat graham play in parent trap",
      "Parses": [
        {
          "ParseId": "WebQTrn-1366.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q729782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q729782 wdt:P161 ?y . ?y wdt:P453 ?x . ?y wdt:P161 wd:Q151118 . } ",
          "PotentialTopicEntityMention": "parent trap",
          "TopicEntityName": "The Parent Trap",
          "TopicEntityMid": "m.06y611",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.character"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04n1xdl",
              "EntityName": "Kat Graham",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.actor",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gft0zl",
              "EntityName": "Jackie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1369",
      "RawQuestion": "who is lamar odom playing for in 2012?",
      "ProcessedQuestion": "who is lamar odom playing for in 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-1369.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296403 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "lamar odom",
          "TopicEntityName": "Lamar Odom",
          "TopicEntityMid": "m.02_nkp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1372",
      "RawQuestion": "what is the zip code for trenton ga?",
      "ProcessedQuestion": "what is the zip code for trenton ga",
      "Parses": [
        {
          "ParseId": "WebQTrn-1372.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25330) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25330 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "trenton",
          "TopicEntityName": "Trenton",
          "TopicEntityMid": "m.0fvxz",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206ng_",
              "EntityName": "08628"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206njw",
              "EntityName": "08618"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206nlg",
              "EntityName": "08638"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qfx",
              "EntityName": "08610"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qgw",
              "EntityName": "08619"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qlh",
              "EntityName": "08620"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qq6",
              "EntityName": "08691"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0206qr2",
              "EntityName": "08611"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075l8",
              "EntityName": "08609"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075s5",
              "EntityName": "08608"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02075z3",
              "EntityName": "08629"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqlk",
              "EntityName": "08625"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqmy",
              "EntityName": "08641"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dtqnj",
              "EntityName": "08690"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtm_",
              "EntityName": "08695"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtn6",
              "EntityName": "08666"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnf",
              "EntityName": "08650"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnn",
              "EntityName": "08647"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtnw",
              "EntityName": "08646"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtp2",
              "EntityName": "08645"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtp9",
              "EntityName": "08607"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpj",
              "EntityName": "08606"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpr",
              "EntityName": "08605"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtpz",
              "EntityName": "08604"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtq5",
              "EntityName": "08603"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtqd",
              "EntityName": "08602"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nrtqm",
              "EntityName": "08601"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1377",
      "RawQuestion": "what are shirley temple kids names?",
      "ProcessedQuestion": "what are shirley temple kids names",
      "Parses": [
        {
          "ParseId": "WebQTrn-1377.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q182580) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q182580 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "shirley temple",
          "TopicEntityName": "Shirley Temple",
          "TopicEntityMid": "m.03d9v8",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028bpn9",
              "EntityName": "Lori Black"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gy7501",
              "EntityName": "Charles Alden Black Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gy7508",
              "EntityName": "Linda Susan Agar"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1379",
      "RawQuestion": "what position does terrell owens play?",
      "ProcessedQuestion": "what position does terrell owens play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1379.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1395269) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1395269 wdt:P54 ?y . ?y wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "terrell owens",
          "TopicEntityName": "Terrell Owens",
          "TopicEntityMid": "m.027ddp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02g_6x",
              "EntityName": "Wide receiver"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1381",
      "RawQuestion": "what did kourtney kardashian go to college for?",
      "ProcessedQuestion": "what did kourtney kardashian go to college for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1381.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q575689) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q575689 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "kourtney kardashian",
          "TopicEntityName": "Kourtney Kardashian",
          "TopicEntityMid": "m.043ttm7",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qsdpk",
              "EntityName": "Theatre"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1384",
      "RawQuestion": "who was louis xvi?",
      "ProcessedQuestion": "who was louis xvi",
      "Parses": [
        {
          "ParseId": "WebQTrn-1384.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7732) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7732 wdt:P97 ?y . ?y wdt:P97 ?x . } ",
          "PotentialTopicEntityMention": "louis xvi",
          "TopicEntityName": "Louis XVI of France",
          "TopicEntityMid": "m.0dj9w",
          "InferentialChain": [
            "royalty.noble_person.titles",
            "royalty.noble_title_tenure.noble_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0290vf",
              "EntityName": "Duke of Normandy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05st_0j",
              "EntityName": "King of France"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063032x",
              "EntityName": "King of Navarre"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1386",
      "RawQuestion": "what did donna summers die from?",
      "ProcessedQuestion": "what did donna summers die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1386.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q908933) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q908933 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "donna summers",
          "TopicEntityName": "Donna Summer",
          "TopicEntityMid": "m.0136p1",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p3w",
              "EntityName": "Lung cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1388",
      "RawQuestion": "where was selena gomez really born?",
      "ProcessedQuestion": "where was selena gomez really born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1388.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013mbz",
              "EntityName": "Grand Prairie"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1391",
      "RawQuestion": "when did the battle of thermopylae occur?",
      "ProcessedQuestion": "when did the battle of thermopylae occur",
      "Parses": [
        {
          "ParseId": "WebQTrn-1391.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131969 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "battle of thermopylae",
          "TopicEntityName": "Battle of Thermopylae",
          "TopicEntityMid": "m.014px1",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "-479",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1392",
      "RawQuestion": "where did eleanor roosevelt go to school?",
      "ProcessedQuestion": "where did eleanor roosevelt go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1392.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83396) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83396 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "eleanor roosevelt",
          "TopicEntityName": "Eleanor Roosevelt",
          "TopicEntityMid": "m.02n9k",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03j_v35",
              "EntityName": "Allenswood Academy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06thjt",
              "EntityName": "The New School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1403",
      "RawQuestion": "what university did bill clinton graduated from?",
      "ProcessedQuestion": "what university did bill clinton graduated from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1403.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1124) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1124 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1540185 . } ",
          "PotentialTopicEntityMention": "bill clinton",
          "TopicEntityName": "Bill Clinton",
          "TopicEntityMid": "m.0157m",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.013zdg",
              "EntityName": "Juris Doctor",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bq1j",
              "EntityName": "Yale Law School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1405",
      "RawQuestion": "where did president kennedy go to school?",
      "ProcessedQuestion": "where did president kennedy go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1405.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mpwj",
              "EntityName": "Harvard College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bb47",
              "EntityName": "Stanford Graduate School of Business"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hdpx",
              "EntityName": "Choate Rosemary Hall"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ksy",
              "EntityName": "Harvard University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qs17",
              "EntityName": "Noble and Greenough School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05yk0g",
              "EntityName": "Canterbury School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zl0",
              "EntityName": "Princeton University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08kml_",
              "EntityName": "Riverdale Country School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b7824",
              "EntityName": "Dexter School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ccg42",
              "EntityName": "Edward Devotion School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1408",
      "RawQuestion": "who was louis kossuth?",
      "ProcessedQuestion": "who was louis kossuth",
      "Parses": [
        {
          "ParseId": "WebQTrn-1408.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q157040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q157040 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "louis kossuth",
          "TopicEntityName": "Lajos Kossuth",
          "TopicEntityMid": "m.021xrk",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1411",
      "RawQuestion": "where did harry truman die?",
      "ProcessedQuestion": "where did harry truman die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1411.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11613) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11613 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "harry truman",
          "TopicEntityName": "Harry S. Truman",
          "TopicEntityMid": "m.09bg4l",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f_d",
              "EntityName": "Kansas City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1423",
      "RawQuestion": "what does rob kardashian do for living?",
      "ProcessedQuestion": "what does rob kardashian do for living",
      "Parses": [
        {
          "ParseId": "WebQTrn-1423.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26318) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26318 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "rob kardashian",
          "TopicEntityName": "Rob Kardashian",
          "TopicEntityMid": "m.043n6dp",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gkb0",
              "EntityName": "Socialite"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1429",
      "RawQuestion": "who is adam sandler?",
      "ProcessedQuestion": "who is adam sandler",
      "Parses": [
        {
          "ParseId": "WebQTrn-1429.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q132952) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q132952 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "adam sandler",
          "TopicEntityName": "Adam Sandler",
          "TopicEntityMid": "m.0pz91",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1432",
      "RawQuestion": "where was st elizabeth ann seton born?",
      "ProcessedQuestion": "where was st elizabeth ann seton born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1432.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q459032) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q459032 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "st elizabeth ann seton",
          "TopicEntityName": "Elizabeth Ann Seton",
          "TopicEntityMid": "m.01sl19",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1440",
      "RawQuestion": "who plays mary jane in spiderman 3?",
      "ProcessedQuestion": "who plays mary jane in spiderman 3",
      "Parses": [
        {
          "ParseId": "WebQTrn-1440.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q182212) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q182212 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q27810 . } ",
          "PotentialTopicEntityMention": "spiderman 3",
          "TopicEntityName": "Spider-Man 3",
          "TopicEntityMid": "m.0340hj",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01ppxz",
              "EntityName": "Mary Jane Watson",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fzk",
              "EntityName": "Kirsten Dunst"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1440.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ppxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ppxz ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0340hj .\n}\n",
          "PotentialTopicEntityMention": "mary jane",
          "TopicEntityName": "Mary Jane Watson",
          "TopicEntityMid": "m.01ppxz",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0340hj",
              "EntityName": "Spider-Man 3",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fzk",
              "EntityName": "Kirsten Dunst"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1441",
      "RawQuestion": "where was abraham lincoln buried?",
      "ProcessedQuestion": "where was abraham lincoln buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-1441.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04v7rs",
              "EntityName": "Oak Ridge Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1446",
      "RawQuestion": "where is devon sawa now?",
      "ProcessedQuestion": "where is devon sawa now",
      "Parses": [
        {
          "ParseId": "WebQTrn-1446.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q317308) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q317308 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "devon sawa",
          "TopicEntityName": "Devon Sawa",
          "TopicEntityMid": "m.0y58x",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080h2",
              "EntityName": "Vancouver"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1454",
      "RawQuestion": "where does ryan lochte live now?",
      "ProcessedQuestion": "where does ryan lochte live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-1454.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q201517) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q201517 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ryan lochte",
          "TopicEntityName": "Ryan Lochte",
          "TopicEntityMid": "m.0bfyrl",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rh7t",
              "EntityName": "Gainesville"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y1rf",
              "EntityName": "Rochester"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1455",
      "RawQuestion": "what timezone is tennessee nashville?",
      "ProcessedQuestion": "what timezone is tennessee nashville",
      "Parses": [
        {
          "ParseId": "WebQTrn-1455.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23197) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23197 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "nashville",
          "TopicEntityName": "Nashville",
          "TopicEntityMid": "m.05jbn",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1468",
      "RawQuestion": "what label is jojo signed to?",
      "ProcessedQuestion": "what label is jojo signed to",
      "Parses": [
        {
          "ParseId": "WebQTrn-1468.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215219) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215219 wdt:P264 ?x . } ",
          "PotentialTopicEntityMention": "jojo",
          "TopicEntityName": "JoJo",
          "TopicEntityMid": "m.01wjgjb",
          "InferentialChain": [
            "music.artist.label"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01trtc",
              "EntityName": "Interscope Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w40h",
              "EntityName": "Mercury Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03vlr_",
              "EntityName": "Edel AG"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fcjt",
              "EntityName": "Universal Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05clg8",
              "EntityName": "Universal Motown Republic Group"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05clhc",
              "EntityName": "Blackground Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g768",
              "EntityName": "Atlantic Records"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1470",
      "RawQuestion": "where did douglas macarthur die?",
      "ProcessedQuestion": "where did douglas macarthur die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1470.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127417 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "douglas macarthur",
          "TopicEntityName": "Douglas MacArthur",
          "TopicEntityMid": "m.0c_jc",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rh6k",
              "EntityName": "Washington, D.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1475",
      "RawQuestion": "who does david beckham play for in 2013?",
      "ProcessedQuestion": "who does david beckham play for in 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-1475.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "time period 2013"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_1kk",
              "EntityName": "Paris Saint-Germain F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1477",
      "RawQuestion": "who does blake griffin play for in the nba?",
      "ProcessedQuestion": "who does blake griffin play for in the nba",
      "Parses": [
        {
          "ParseId": "WebQTrn-1477.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q309783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q309783 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "blake griffin",
          "TopicEntityName": "Blake Griffin",
          "TopicEntityMid": "m.02qhzxp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1492",
      "RawQuestion": "what is jessica ennis sport?",
      "ProcessedQuestion": "what is jessica ennis sport",
      "Parses": [
        {
          "ParseId": "WebQTrn-1492.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6091) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6091 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jessica ennis",
          "TopicEntityName": "Jessica Ennis-Hill",
          "TopicEntityMid": "m.0b7nrg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.059846g",
              "EntityName": "Track and field athlete"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1495",
      "RawQuestion": "where did joe namath live?",
      "ProcessedQuestion": "where did joe namath live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1495.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q720558) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q720558 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "joe namath",
          "TopicEntityName": "Joe Namath",
          "TopicEntityMid": "m.01p_3k",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_3xy",
              "EntityName": "Fire Island"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zj_2",
              "EntityName": "Beaver Falls"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1498",
      "RawQuestion": "where do samsung lions play?",
      "ProcessedQuestion": "where do samsung lions play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1498.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q490418) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q490418 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "samsung lions",
          "TopicEntityName": "Samsung Lions",
          "TopicEntityMid": "m.08bbzt",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cmd6s",
              "EntityName": "Daegu Baseball Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1500",
      "RawQuestion": "what does annie leibovitz do?",
      "ProcessedQuestion": "what does annie leibovitz do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1500.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q225283) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q225283 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "annie leibovitz",
          "TopicEntityName": "Annie Leibovitz",
          "TopicEntityMid": "m.015m2c",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hz6vv",
              "EntityName": "Visual Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lgw7",
              "EntityName": "Photographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1502",
      "RawQuestion": "who did mike tomlin play for?",
      "ProcessedQuestion": "who did mike tomlin play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1502.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q371118) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q371118 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "mike tomlin",
          "TopicEntityName": "Mike Tomlin",
          "TopicEntityMid": "m.0c5f_j",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07s4hxr",
              "EntityName": "William & Mary Tribe football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1515",
      "RawQuestion": "where was lance armstrong born and in what year?",
      "ProcessedQuestion": "where was lance armstrong born and in what year",
      "Parses": [
        {
          "ParseId": "WebQTrn-1515.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2172) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2172 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "lance armstrong",
          "TopicEntityName": "Lance Armstrong",
          "TopicEntityMid": "m.0hfwb",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013m4v",
              "EntityName": "Plano"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1517",
      "RawQuestion": "where is george bush from?",
      "ProcessedQuestion": "where is george bush from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1517.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george bush",
          "TopicEntityName": "George W. Bush",
          "TopicEntityMid": "m.09b6zr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2nf",
              "EntityName": "New Haven"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1520",
      "RawQuestion": "what is the zip code for trenton ohio?",
      "ProcessedQuestion": "what is the zip code for trenton ohio",
      "Parses": [
        {
          "ParseId": "WebQTrn-1520.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2374079) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2374079 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "trenton",
          "TopicEntityName": "Trenton",
          "TopicEntityMid": "m.0ytcc",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dw2gg",
              "EntityName": "45067"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1528",
      "RawQuestion": "what school did tupac go to?",
      "ProcessedQuestion": "what school did tupac go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-1528.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6107) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6107 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0269lqm",
              "EntityName": "Paul Laurence Dunbar High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03jl5b",
              "EntityName": "Baltimore School for the Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06cbpm",
              "EntityName": "Tamalpais High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1534",
      "RawQuestion": "what county is minneapolis mn in?",
      "ProcessedQuestion": "what county is minneapolis mn in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1534.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36091) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36091 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "minneapolis mn",
          "TopicEntityName": "Minneapolis",
          "TopicEntityMid": "m.0fpzwf",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nhmw",
              "EntityName": "Hennepin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1538",
      "RawQuestion": "what team is ronaldinho on?",
      "ProcessedQuestion": "what team is ronaldinho on",
      "Parses": [
        {
          "ParseId": "WebQTrn-1538.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39444 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xn5n_",
              "EntityName": "Querétaro F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1550",
      "RawQuestion": "where was nicki minaj born?",
      "ProcessedQuestion": "where was nicki minaj born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1550.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q162202) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q162202 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "nicki minaj",
          "TopicEntityName": "Nicki Minaj",
          "TopicEntityMid": "m.047sxrj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gplfm",
              "EntityName": "Saint James, Trinidad and Tobago"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1553",
      "RawQuestion": "where was emperor hadrian born?",
      "ProcessedQuestion": "where was emperor hadrian born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1553.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1427) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1427 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "emperor hadrian",
          "TopicEntityName": "Hadrian",
          "TopicEntityMid": "m.03jxc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05dn72",
              "EntityName": "Italica"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1556",
      "RawQuestion": "where did martin luther king went to school?",
      "ProcessedQuestion": "where did martin luther king went to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1556.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_r9k",
              "EntityName": "Morehouse College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0479w_2",
              "EntityName": "Washington High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06yr21",
              "EntityName": "Crozer Theological Seminary"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gl5_",
              "EntityName": "Boston University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1563",
      "RawQuestion": "what timezone is the state of texas?",
      "ProcessedQuestion": "what timezone is the state of texas",
      "Parses": [
        {
          "ParseId": "WebQTrn-1563.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1439) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1439 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "texas",
          "TopicEntityName": "Texas",
          "TopicEntityMid": "m.07b_l",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1566",
      "RawQuestion": "where did kurt cobain die?",
      "ProcessedQuestion": "where did kurt cobain die",
      "Parses": [
        {
          "ParseId": "WebQTrn-1566.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8446) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8446 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "kurt cobain",
          "TopicEntityName": "Kurt Cobain",
          "TopicEntityMid": "m.0484q",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d9jr",
              "EntityName": "Seattle"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1567",
      "RawQuestion": "what county is jackson michigan in?",
      "ProcessedQuestion": "what county is jackson michigan in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1567.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q984374) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q984374 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "jackson michigan",
          "TopicEntityName": "Jackson",
          "TopicEntityMid": "m.042tq",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043z0",
              "EntityName": "Jackson County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1567.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.042tq)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.042tq ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "jackson michigan",
          "TopicEntityName": "Jackson",
          "TopicEntityMid": "m.042tq",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043z0",
              "EntityName": "Jackson County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1568",
      "RawQuestion": "where was the battle of verdun held?",
      "ProcessedQuestion": "where was the battle of verdun held",
      "Parses": [
        {
          "ParseId": "WebQTrn-1568.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q130847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q130847 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "verdun",
          "TopicEntityName": "Battle of Verdun",
          "TopicEntityMid": "m.0dl4g",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ny95",
              "EntityName": "Verdun"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1574",
      "RawQuestion": "what timezone is toronto gmt?",
      "ProcessedQuestion": "what timezone is toronto gmt",
      "Parses": [
        {
          "ParseId": "WebQTrn-1574.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q172) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q172 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "toronto",
          "TopicEntityName": "Toronto",
          "TopicEntityMid": "m.0h7h6",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1575",
      "RawQuestion": "what religion is king henry viii?",
      "ProcessedQuestion": "what religion is king henry viii",
      "Parses": [
        {
          "ParseId": "WebQTrn-1575.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38370 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "king henry viii",
          "TopicEntityName": "Henry VIII of England",
          "TopicEntityMid": "m.03p77",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01spm",
              "EntityName": "Church of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g9vs",
              "EntityName": "Anglo-Catholicism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n2g",
              "EntityName": "Anglicanism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1577",
      "RawQuestion": "where did james baldwin go to school?",
      "ProcessedQuestion": "where did james baldwin go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1577.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q273210) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q273210 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "james baldwin",
          "TopicEntityName": "James Baldwin",
          "TopicEntityMid": "m.017_pb",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06thjt",
              "EntityName": "The New School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09r4xx",
              "EntityName": "DeWitt Clinton High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1578",
      "RawQuestion": "who was joseph pulitzer and what did he do?",
      "ProcessedQuestion": "who was joseph pulitzer and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1578.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q173417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q173417 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "joseph pulitzer",
          "TopicEntityName": "Joseph Pulitzer",
          "TopicEntityMid": "m.019541",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h668d",
              "EntityName": "Publisher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1580",
      "RawQuestion": "where did jane austen grow up?",
      "ProcessedQuestion": "where did jane austen grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-1580.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36322) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36322 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jane austen",
          "TopicEntityName": "Jane Austen",
          "TopicEntityMid": "m.040dv",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ybhf",
              "EntityName": "Steventon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1581",
      "RawQuestion": "what was basketball player michael jordan's major in college?",
      "ProcessedQuestion": "what was basketball player michael jordan 's major in college",
      "Parses": [
        {
          "ParseId": "WebQTrn-1581.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41421 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "michael jordan",
          "TopicEntityName": "Michael Jordan",
          "TopicEntityMid": "m.054c1",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07xc_j",
              "EntityName": "Cultural geography"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1582",
      "RawQuestion": "who made the american red cross?",
      "ProcessedQuestion": "who made the american red cross",
      "Parses": [
        {
          "ParseId": "WebQTrn-1582.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q470110) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q470110 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "american red cross",
          "TopicEntityName": "American Red Cross",
          "TopicEntityMid": "m.0by8vb",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bww9",
              "EntityName": "Clara Barton"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1587",
      "RawQuestion": "what happened to umaga wwe?",
      "ProcessedQuestion": "what happened to umaga wwe",
      "Parses": [
        {
          "ParseId": "WebQTrn-1587.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q298315) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q298315 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "umaga",
          "TopicEntityName": "Umaga",
          "TopicEntityMid": "m.03s95m",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1589",
      "RawQuestion": "who does david beckham play for in 2012?",
      "ProcessedQuestion": "who does david beckham play for in 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-1589.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10520) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10520 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david beckham",
          "TopicEntityName": "David Beckham",
          "TopicEntityMid": "m.02d9k",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k2yr",
              "EntityName": "LA Galaxy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1595",
      "RawQuestion": "when richard nixon was president?",
      "ProcessedQuestion": "when richard nixon was president",
      "Parses": [
        {
          "ParseId": "WebQTrn-1595.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9588 wdt:P39 ?y . ?y wdt:P580 ?x . ?y wdt:P39 wd:Q11696 . } ",
          "PotentialTopicEntityMention": "richard nixon",
          "TopicEntityName": "Richard Nixon",
          "TopicEntityMid": "m.06c97",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.060d2",
              "EntityName": "President of the United States",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.office_position_or_title",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1969-01-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1596",
      "RawQuestion": "what job did martin luther king jr have?",
      "ProcessedQuestion": "what job did martin luther king jr have",
      "Parses": [
        {
          "ParseId": "WebQTrn-1596.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010b8yqs",
              "EntityName": "Civil rights activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fhsb",
              "EntityName": "Pastor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0377kt",
              "EntityName": "Minister"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065qmpf",
              "EntityName": "Humanitarian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0db79",
              "EntityName": "Clergy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1598",
      "RawQuestion": "where did macho camacho got shot at?",
      "ProcessedQuestion": "where did macho camacho got shot at",
      "Parses": [
        {
          "ParseId": "WebQTrn-1598.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q114355) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q114355 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "macho camacho",
          "TopicEntityName": "Héctor Camacho",
          "TopicEntityMid": "m.0lxcw",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fw4v",
              "EntityName": "San Juan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1601",
      "RawQuestion": "who is andrew carnegie and what did he do?",
      "ProcessedQuestion": "who is andrew carnegie and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1601.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q484265) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q484265 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "andrew carnegie",
          "TopicEntityName": "Andrew Carnegie",
          "TopicEntityMid": "m.0vdk",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025spv",
              "EntityName": "Business magnate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1604",
      "RawQuestion": "what influenced abraham lincoln to become president?",
      "ProcessedQuestion": "what influenced abraham lincoln to become president",
      "Parses": [
        {
          "ParseId": "WebQTrn-1604.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027549",
              "EntityName": "Theodore Parker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kwl",
              "EntityName": "Thomas Paine"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ct18",
              "EntityName": "Henry Clay"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1605",
      "RawQuestion": "who is jeremy sumpter?",
      "ProcessedQuestion": "who is jeremy sumpter",
      "Parses": [
        {
          "ParseId": "WebQTrn-1605.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q316964) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q316964 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jeremy sumpter",
          "TopicEntityName": "Jeremy Sumpter",
          "TopicEntityMid": "m.024xw1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1610",
      "RawQuestion": "who does cristiano ronaldo play for now 2011?",
      "ProcessedQuestion": "who does cristiano ronaldo play for now 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-1610.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1618",
      "RawQuestion": "what type of music does ella fitzgerald sing?",
      "ProcessedQuestion": "what type of music does ella fitzgerald sing",
      "Parses": [
        {
          "ParseId": "WebQTrn-1618.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1768) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1768 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "ella fitzgerald",
          "TopicEntityName": "Ella Fitzgerald",
          "TopicEntityMid": "m.0d9xq",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015y_n",
              "EntityName": "Swing music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gjw",
              "EntityName": "Ballad"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_d0",
              "EntityName": "Jazz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08lpkq",
              "EntityName": "Vocal jazz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cx6f",
              "EntityName": "Bebop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m40d",
              "EntityName": "Traditional pop music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1622",
      "RawQuestion": "what instrument does mike huckabee play?",
      "ProcessedQuestion": "what instrument does mike huckabee play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1622.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q158813) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q158813 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "mike huckabee",
          "TopicEntityName": "Mike Huckabee",
          "TopicEntityMid": "m.01rxqd",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018vs",
              "EntityName": "Bass guitar"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1624",
      "RawQuestion": "where is basque located?",
      "ProcessedQuestion": "where is basque located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1624.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3995) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3995 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "basque",
          "TopicEntityName": "Basque Country",
          "TopicEntityMid": "m.0dwvx1",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1624.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dwvx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dwvx1 ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "basque",
          "TopicEntityName": "Basque Country",
          "TopicEntityMid": "m.0dwvx1",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1624.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dwvx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dwvx1 ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "basque",
          "TopicEntityName": "Basque Country",
          "TopicEntityMid": "m.0dwvx1",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1624.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0dwvx1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0dwvx1 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "basque",
          "TopicEntityName": "Basque Country",
          "TopicEntityMid": "m.0dwvx1",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.032n5l",
              "EntityName": "Basque Country"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03v9w",
              "EntityName": "Iberian Peninsula"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1635",
      "RawQuestion": "what teams did gretzky play on?",
      "ProcessedQuestion": "what teams did gretzky play on",
      "Parses": [
        {
          "ParseId": "WebQTrn-1635.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209518) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209518 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "gretzky",
          "TopicEntityName": "Wayne Gretzky",
          "TopicEntityMid": "m.0839s",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnmj",
              "EntityName": "Edmonton Oilers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1636",
      "RawQuestion": "where was obama educated?",
      "ProcessedQuestion": "where was obama educated",
      "Parses": [
        {
          "ParseId": "WebQTrn-1636.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1637",
      "RawQuestion": "who did wayne gretzky play 4?",
      "ProcessedQuestion": "who did wayne gretzky play 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-1637.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209518) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209518 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "wayne gretzky",
          "TopicEntityName": "Wayne Gretzky",
          "TopicEntityMid": "m.0839s",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnmj",
              "EntityName": "Edmonton Oilers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1645",
      "RawQuestion": "where did the battle of new orleans start?",
      "ProcessedQuestion": "where did the battle of new orleans start",
      "Parses": [
        {
          "ParseId": "WebQTrn-1645.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? start location unclear"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41894) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41894 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of new orleans",
          "TopicEntityName": "Battle of New Orleans",
          "TopicEntityMid": "m.012vkj",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_gtcg",
              "EntityName": "Chalmette"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1648",
      "RawQuestion": "who is paul revere and what did he do?",
      "ProcessedQuestion": "who is paul revere and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1648.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q327071) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q327071 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "paul revere",
          "TopicEntityName": "Paul Revere",
          "TopicEntityMid": "m.0db0x",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.125_hzb47",
              "EntityName": "Spy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vs_x",
              "EntityName": "Silversmith"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1651",
      "RawQuestion": "where did cutler jay go to college?",
      "ProcessedQuestion": "where did cutler jay go to college",
      "Parses": [
        {
          "ParseId": "WebQTrn-1651.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q937778) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q937778 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "cutler",
          "TopicEntityName": "Jay Cutler",
          "TopicEntityMid": "m.097hft",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pq4w",
              "EntityName": "Vanderbilt University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q6v42",
              "EntityName": "Heritage Hills High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1654",
      "RawQuestion": "where is ann romney from?",
      "ProcessedQuestion": "where is ann romney from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1654.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1100946) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1100946 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "ann romney",
          "TopicEntityName": "Ann Romney",
          "TopicEntityMid": "m.02wvk7d",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dtg",
              "EntityName": "Detroit"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1655",
      "RawQuestion": "who was galileo galilei?",
      "ProcessedQuestion": "who was galileo galilei",
      "Parses": [
        {
          "ParseId": "WebQTrn-1655.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q307) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q307 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "galileo galilei",
          "TopicEntityName": "Galileo Galilei",
          "TopicEntityMid": "m.034ks",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rxky",
              "EntityName": "Astrologer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1656",
      "RawQuestion": "what school did bill gates go to?",
      "ProcessedQuestion": "what school did bill gates go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-1656.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5284) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5284 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "bill gates",
          "TopicEntityName": "Bill Gates",
          "TopicEntityMid": "m.017nt",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jv5g",
              "EntityName": "Lakeside School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mpwj",
              "EntityName": "Harvard College"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1658",
      "RawQuestion": "what country does dubai come under?",
      "ProcessedQuestion": "what country does dubai come under",
      "Parses": [
        {
          "ParseId": "WebQTrn-1658.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q612) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q612 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "dubai",
          "TopicEntityName": "Dubai",
          "TopicEntityMid": "m.01f08r",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j1z8",
              "EntityName": "United Arab Emirates"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1658.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01f08r)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01f08r ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "dubai",
          "TopicEntityName": "Dubai",
          "TopicEntityMid": "m.01f08r",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j1z8",
              "EntityName": "United Arab Emirates"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1659",
      "RawQuestion": "who do nate robinson play for?",
      "ProcessedQuestion": "who do nate robinson play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1659.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q315104) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q315104 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "nate robinson",
          "TopicEntityName": "Nate Robinson",
          "TopicEntityMid": "m.07c1_2",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fgg8c",
              "EntityName": "Washington Huskies football"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmdb",
              "EntityName": "Denver Nuggets"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1664",
      "RawQuestion": "who all has steve nash played for?",
      "ProcessedQuestion": "who all has steve nash played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1664.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192955) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192955 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "steve nash",
          "TopicEntityName": "Steve Nash",
          "TopicEntityMid": "m.01yqrk",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jml5",
              "EntityName": "Phoenix Suns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1665",
      "RawQuestion": "where does jason statham live?",
      "ProcessedQuestion": "where does jason statham live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1665.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q169963) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q169963 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "jason statham",
          "TopicEntityName": "Jason Statham",
          "TopicEntityMid": "m.034hyc",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ncb9",
              "EntityName": "Sydenham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p98z",
              "EntityName": "Great Yarmouth"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1685",
      "RawQuestion": "what is john steinbeck best known for?",
      "ProcessedQuestion": "what is john steinbeck best known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1685.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39212) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39212 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "john steinbeck",
          "TopicEntityName": "John Steinbeck",
          "TopicEntityMid": "m.04107",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1688",
      "RawQuestion": "who was the voice of darth vader in episode iii?",
      "ProcessedQuestion": "who was the voice of darth vader in episode iii",
      "Parses": [
        {
          "ParseId": "WebQTrn-1688.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42051) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42051 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "episode iii",
          "TopicEntityName": "Star Wars Episode III: Revenge of the Sith",
          "TopicEntityMid": "m.0fdv3",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f276",
              "EntityName": "Hayden Christensen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1698",
      "RawQuestion": "where is the battle of verdun located?",
      "ProcessedQuestion": "where is the battle of verdun located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1698.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q130847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q130847 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "verdun",
          "TopicEntityName": "Battle of Verdun",
          "TopicEntityMid": "m.0dl4g",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ny95",
              "EntityName": "Verdun"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1715",
      "RawQuestion": "where george washington carver go to school?",
      "ProcessedQuestion": "where george washington carver go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-1715.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296898) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296898 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "george washington carver",
          "TopicEntityName": "George Washington Carver",
          "TopicEntityMid": "m.03djm",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xssh",
              "EntityName": "Simpson College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03v6t",
              "EntityName": "Iowa State University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.076fk5z",
              "EntityName": "Minneapolis High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1717",
      "RawQuestion": "where was the earthquake in christchurch?",
      "ProcessedQuestion": "where was the earthquake in christchurch",
      "Parses": [
        {
          "ParseId": "WebQTrn-1717.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? entity linking is only the 2011 event, and the center or a more specific location of the earthquake is not there"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q151850) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q151850 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "earthquake in christchurch",
          "TopicEntityName": "2011 Christchurch earthquake",
          "TopicEntityMid": "m.0gg9kfr",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yc5b",
              "EntityName": "Christchurch"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1718",
      "RawQuestion": "what timezone is reno nv?",
      "ProcessedQuestion": "what timezone is reno nv",
      "Parses": [
        {
          "ParseId": "WebQTrn-1718.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49225) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49225 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "reno nv",
          "TopicEntityName": "Reno",
          "TopicEntityMid": "m.06kx2",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1719",
      "RawQuestion": "who was niccolo machiavelli influenced by?",
      "ProcessedQuestion": "who was niccolo machiavelli influenced by",
      "Parses": [
        {
          "ParseId": "WebQTrn-1719.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1399) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1399 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "niccolo machiavelli",
          "TopicEntityName": "Niccolò Machiavelli",
          "TopicEntityMid": "m.05cvs",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf5",
              "EntityName": "Cicero"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028p0",
              "EntityName": "Dante Alighieri"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rpq",
              "EntityName": "Desiderius Erasmus"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l7h",
              "EntityName": "Livy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04lg6",
              "EntityName": "Leonardo da Vinci"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qmj",
              "EntityName": "Plato"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063_9",
              "EntityName": "Plutarch"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07lbh",
              "EntityName": "Thucydides"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gz_",
              "EntityName": "Aristotle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pzhh",
              "EntityName": "Tacitus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1720",
      "RawQuestion": "what did cam newton do?",
      "ProcessedQuestion": "what did cam newton do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1720.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q591678) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q591678 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "cam newton",
          "TopicEntityName": "Cam Newton",
          "TopicEntityMid": "m.02phnp7",
          "InferentialChain": [
            "american_football.football_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06b1q",
              "EntityName": "Quarterback"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1720.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02phnp7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02phnp7 ns:sports.pro_athlete.teams ?y .\n?y ns:sports.sports_team_roster.position ?x .\n}\n",
          "PotentialTopicEntityMention": "cam newton",
          "TopicEntityName": "Cam Newton",
          "TopicEntityMid": "m.02phnp7",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.position"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06b1q",
              "EntityName": "Quarterback"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1729",
      "RawQuestion": "where is bob marley from where was he born?",
      "ProcessedQuestion": "where is bob marley from where was he born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1729.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q409) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q409 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "bob marley",
          "TopicEntityName": "Bob Marley",
          "TopicEntityMid": "m.0bkf4",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zvqpz",
              "EntityName": "Nine Mile"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1736",
      "RawQuestion": "where does roman abramovich live?",
      "ProcessedQuestion": "where does roman abramovich live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1736.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q171428) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q171428 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "roman abramovich",
          "TopicEntityName": "Roman Abramovich",
          "TopicEntityMid": "m.01zl71",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.036wcg",
              "EntityName": "Ukhta"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04swd",
              "EntityName": "Moscow"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1751",
      "RawQuestion": "who created youtube?",
      "ProcessedQuestion": "who created youtube",
      "Parses": [
        {
          "ParseId": "WebQTrn-1751.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q866) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q866 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "youtube",
          "TopicEntityName": "YouTube",
          "TopicEntityMid": "m.09jcvs",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d36_b",
              "EntityName": "Steve Chen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fzxjm",
              "EntityName": "Jawed Karim"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fzxmd",
              "EntityName": "Chad Hurley"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1754",
      "RawQuestion": "what influenced andy warhol's work?",
      "ProcessedQuestion": "what influenced andy warhol 's work",
      "Parses": [
        {
          "ParseId": "WebQTrn-1754.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5603) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5603 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "andy warhol",
          "TopicEntityName": "Andy Warhol",
          "TopicEntityMid": "m.0kc6",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014dq7",
              "EntityName": "Truman Capote"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017b13",
              "EntityName": "Frank Stella"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01sj_s",
              "EntityName": "Robert Rauschenberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.024hjy",
              "EntityName": "Tom of Finland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028xw4",
              "EntityName": "Ben Shahn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.041st",
              "EntityName": "Jean-Michel Basquiat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kwmh",
              "EntityName": "Jack Smith"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqch",
              "EntityName": "Marcel Duchamp"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gcjf",
              "EntityName": "Jasper Johns"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gskj",
              "EntityName": "Man Ray"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hgqq",
              "EntityName": "John Cage"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1755",
      "RawQuestion": "what is fresno state's zip code?",
      "ProcessedQuestion": "what is fresno state 's zip code",
      "Parses": [
        {
          "ParseId": "WebQTrn-1755.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43301) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43301 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "fresno",
          "TopicEntityName": "Fresno",
          "TopicEntityMid": "m.0mzy7",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zds_5",
              "EntityName": "93710"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdssx",
              "EntityName": "93728"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdsvs",
              "EntityName": "93711"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdsx_",
              "EntityName": "93726"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdsyv",
              "EntityName": "93704"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdt01",
              "EntityName": "93720"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdtcs",
              "EntityName": "93721"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdvcv",
              "EntityName": "93727"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdvwj",
              "EntityName": "93703"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdvxn",
              "EntityName": "93702"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zdww4",
              "EntityName": "93650"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zphxf",
              "EntityName": "93701"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnj5m",
              "EntityName": "93705"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnj60",
              "EntityName": "93706"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnj75",
              "EntityName": "93722"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dnj7l",
              "EntityName": "93725"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0fh",
              "EntityName": "93888"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0fq",
              "EntityName": "93844"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0fy",
              "EntityName": "93794"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0g4",
              "EntityName": "93793"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0gc",
              "EntityName": "93792"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0gl",
              "EntityName": "93791"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0gt",
              "EntityName": "93790"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0h0",
              "EntityName": "93786"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0h7",
              "EntityName": "93784"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0hg",
              "EntityName": "93780"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0hp",
              "EntityName": "93779"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0hx",
              "EntityName": "93778"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0j_",
              "EntityName": "93773"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0j3",
              "EntityName": "93777"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0jb",
              "EntityName": "93776"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0jk",
              "EntityName": "93775"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0js",
              "EntityName": "93774"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0k6",
              "EntityName": "93772"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0kf",
              "EntityName": "93771"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0kn",
              "EntityName": "93765"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0kw",
              "EntityName": "93764"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0l2",
              "EntityName": "93761"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0l9",
              "EntityName": "93760"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0lj",
              "EntityName": "93755"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0lr",
              "EntityName": "93750"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0lz",
              "EntityName": "93747"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0m5",
              "EntityName": "93745"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0md",
              "EntityName": "93744"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0mm",
              "EntityName": "93741"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0mv",
              "EntityName": "93740"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0n1",
              "EntityName": "93730"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0n8",
              "EntityName": "93729"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0nh",
              "EntityName": "93724"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0nq",
              "EntityName": "93723"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0ny",
              "EntityName": "93718"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0p4",
              "EntityName": "93717"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0pc",
              "EntityName": "93716"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0pl",
              "EntityName": "93715"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0pt",
              "EntityName": "93714"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0q0",
              "EntityName": "93712"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0q7",
              "EntityName": "93709"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0qg",
              "EntityName": "93708"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq0qp",
              "EntityName": "93707"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sbm5w",
              "EntityName": "93720-0329"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1757",
      "RawQuestion": "what kourtney kardashian baby girls name?",
      "ProcessedQuestion": "what kourtney kardashian baby girls name",
      "Parses": [
        {
          "ParseId": "WebQTrn-1757.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q575689) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q575689 wdt:P40 ?x . ?x wdt:P21 wd:Q43445 . } ",
          "PotentialTopicEntityMention": "kourtney kardashian",
          "TopicEntityName": "Kourtney Kardashian",
          "TopicEntityMid": "m.043ttm7",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02zsn",
              "EntityName": "Female",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k3cqw1",
              "EntityName": "Penelope Scotland Disick"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1763",
      "RawQuestion": "where does bill richardson live?",
      "ProcessedQuestion": "where does bill richardson live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1763.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311782 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "bill richardson",
          "TopicEntityName": "Bill Richardson",
          "TopicEntityMid": "m.020z31",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vs37k",
              "EntityName": "New Mexico Governor's Mansion"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04sqj",
              "EntityName": "Mexico City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05fjy",
              "EntityName": "New Mexico"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1766",
      "RawQuestion": "what club did aguero play for before man city?",
      "ProcessedQuestion": "what club did aguero play for before man city",
      "Parses": [
        {
          "ParseId": "WebQTrn-1766.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date comparison. Original comment: F cannot handle before question"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { filter(?x != wd:Q119562)  #Player wd:Q119562 wdt:P54 ?z . #Player ?z wdt:P54 wd:Q50602  . #team ?z wdt:P580 ?from . wd:Q119562 wdt:P54 ?y . #Player ?y wdt:P54 ?x . ?y  wdt:P582 ?to . FILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0) } ORDER BY Desc(xsd:datetime(?from)) LIMIT 1",
          "PotentialTopicEntityMention": "aguero",
          "TopicEntityName": "Sergio Agüero",
          "TopicEntityMid": "m.099vgz",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lg7v",
              "EntityName": "Atlético Madrid"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1770",
      "RawQuestion": "what is beyonce's daughters name?",
      "ProcessedQuestion": "what is beyonce 's daughters name",
      "Parses": [
        {
          "ParseId": "WebQTrn-1770.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36153) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36153 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "beyonce",
          "TopicEntityName": "Beyoncé Knowles",
          "TopicEntityMid": "m.01mpq7s",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvsrmc",
              "EntityName": "Blue Ivy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1778",
      "RawQuestion": "where did pope benedict xvi live?",
      "ProcessedQuestion": "where did pope benedict xvi live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1778.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2494) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2494 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "pope benedict xvi",
          "TopicEntityName": "Pope Benedict XVI",
          "TopicEntityMid": "m.09wpt",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.017v_",
              "EntityName": "Bavaria"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1781",
      "RawQuestion": "where is tommy emmanuel from?",
      "ProcessedQuestion": "where is tommy emmanuel from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1781.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q310298) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q310298 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tommy emmanuel",
          "TopicEntityName": "Tommy Emmanuel",
          "TopicEntityMid": "m.064t69",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04c1fr",
              "EntityName": "Muswellbrook"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1788",
      "RawQuestion": "which college did obama graduated?",
      "ProcessedQuestion": "which college did obama graduated",
      "Parses": [
        {
          "ParseId": "WebQTrn-1788.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1765120 . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.014mlp",
              "EntityName": "Bachelor of Arts",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1789",
      "RawQuestion": "who is henry david thoreau?",
      "ProcessedQuestion": "who is henry david thoreau",
      "Parses": [
        {
          "ParseId": "WebQTrn-1789.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131149) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131149 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "henry david thoreau",
          "TopicEntityName": "Henry David Thoreau",
          "TopicEntityMid": "m.0bwx3",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1790",
      "RawQuestion": "who are richard pryor children?",
      "ProcessedQuestion": "who are richard pryor children",
      "Parses": [
        {
          "ParseId": "WebQTrn-1790.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294912) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294912 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "richard pryor",
          "TopicEntityName": "Richard Pryor",
          "TopicEntityMid": "m.01hmk9",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2sbw",
              "EntityName": "Kelsey Pryor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2sc1",
              "EntityName": "Franklin Pryor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2scg",
              "EntityName": "Elizabeth Pryor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2scn",
              "EntityName": "Richard Pryor Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z2scv",
              "EntityName": "Steven Pryor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06xlb2",
              "EntityName": "Rain Pryor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1793",
      "RawQuestion": "what club did santi cazorla play for?",
      "ProcessedQuestion": "what club did santi cazorla play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1793.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q185225) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q185225 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "santi cazorla",
          "TopicEntityName": "Santi Cazorla",
          "TopicEntityMid": "m.0264yjz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w64f",
              "EntityName": "Spain national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03fnrc",
              "EntityName": "Málaga CF"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03tck1",
              "EntityName": "Villarreal CF"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f1glf",
              "EntityName": "Villarreal CF B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ksy_",
              "EntityName": "Recreativo de Huelva"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xbm",
              "EntityName": "Arsenal F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1795",
      "RawQuestion": "where does the atlanta braves play?",
      "ProcessedQuestion": "where does the atlanta braves play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1795.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q461595) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q461595 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "atlanta braves",
          "TopicEntityName": "Atlanta Braves",
          "TopicEntityMid": "m.0x2p",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020fp1",
              "EntityName": "Turner Field"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ctrnf",
              "EntityName": "State Mutual Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1805",
      "RawQuestion": "what religion is mary queen of scots?",
      "ProcessedQuestion": "what religion is mary queen of scots",
      "Parses": [
        {
          "ParseId": "WebQTrn-1805.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131412) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131412 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "mary queen of scots",
          "TopicEntityName": "Mary, Queen of Scots",
          "TopicEntityMid": "m.055l1",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1809",
      "RawQuestion": "where was the battle of shiloh?",
      "ProcessedQuestion": "where was the battle of shiloh",
      "Parses": [
        {
          "ParseId": "WebQTrn-1809.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q943277) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q943277 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "battle of shiloh",
          "TopicEntityName": "Battle of Shiloh",
          "TopicEntityMid": "m.0127mr",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07h34",
              "EntityName": "Tennessee"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mtch",
              "EntityName": "Hardin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1811",
      "RawQuestion": "where is kate spade from?",
      "ProcessedQuestion": "where is kate spade from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1811.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q275094) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q275094 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "kate spade",
          "TopicEntityName": "Kate Spade",
          "TopicEntityMid": "m.06bkdx",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04f_d",
              "EntityName": "Kansas City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1814",
      "RawQuestion": "when did the new york mets start playing baseball?",
      "ProcessedQuestion": "when did the new york mets start playing baseball",
      "Parses": [
        {
          "ParseId": "WebQTrn-1814.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692417 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "new york mets",
          "TopicEntityName": "New York Mets",
          "TopicEntityMid": "m.05g76",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1962",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1818",
      "RawQuestion": "what did ben hall do?",
      "ProcessedQuestion": "what did ben hall do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1818.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4885774) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4885774 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ben hall",
          "TopicEntityName": "Ben Hall",
          "TopicEntityMid": "m.08sx40",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fckr",
              "EntityName": "Bushranger"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1824",
      "RawQuestion": "who played cruella deville in 102 dalmatians?",
      "ProcessedQuestion": "who played cruella deville in 102 dalmatians",
      "Parses": [
        {
          "ParseId": "WebQTrn-1824.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165847 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q388605 . } ",
          "PotentialTopicEntityMention": "102 dalmatians",
          "TopicEntityName": "102 Dalmatians",
          "TopicEntityMid": "m.05n0ms",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.059fc6",
              "EntityName": "Cruella de Vil",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c3p7",
              "EntityName": "Glenn Close"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1824.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.059fc6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.059fc6 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.05n0ms .\n}\n",
          "PotentialTopicEntityMention": "cruella deville",
          "TopicEntityName": "Cruella de Vil",
          "TopicEntityMid": "m.059fc6",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05n0ms",
              "EntityName": "102 Dalmatians",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c3p7",
              "EntityName": "Glenn Close"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1826",
      "RawQuestion": "what year did us invaded iraq?",
      "ProcessedQuestion": "what year did us invaded iraq",
      "Parses": [
        {
          "ParseId": "WebQTrn-1826.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q545449) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q545449 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "us invaded iraq",
          "TopicEntityName": "Iraq War",
          "TopicEntityMid": "m.0d06vc",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2003-03-20",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1836",
      "RawQuestion": "what country did francis drake represent?",
      "ProcessedQuestion": "what country did francis drake represent",
      "Parses": [
        {
          "ParseId": "WebQTrn-1836.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36517) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36517 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "francis drake",
          "TopicEntityName": "Francis Drake",
          "TopicEntityMid": "m.031t2",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.024pcx",
              "EntityName": "Kingdom of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1837",
      "RawQuestion": "what timezone is indianapolis indiana in?",
      "ProcessedQuestion": "what timezone is indianapolis indiana in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1837.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6346) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6346 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "indianapolis indiana",
          "TopicEntityName": "Indianapolis",
          "TopicEntityMid": "m.0ftxw",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1848",
      "RawQuestion": "what position did john stockton play?",
      "ProcessedQuestion": "what position did john stockton play",
      "Parses": [
        {
          "ParseId": "WebQTrn-1848.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q213346) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q213346 wdt:P413 ?x . } ",
          "PotentialTopicEntityMention": "john stockton",
          "TopicEntityName": "John Stockton",
          "TopicEntityMid": "m.01r6lw",
          "InferentialChain": [
            "basketball.basketball_player.position_s"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sf_r",
              "EntityName": "Point guard"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1853",
      "RawQuestion": "who did troy aikman play for?",
      "ProcessedQuestion": "who did troy aikman play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1853.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q525002) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q525002 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "troy aikman",
          "TopicEntityName": "Troy Aikman",
          "TopicEntityMid": "m.0dr5g9",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02896",
              "EntityName": "Dallas Cowboys"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1857",
      "RawQuestion": "where the grimm brothers were born?",
      "ProcessedQuestion": "where the grimm brothers were born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1857.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? \"Where does the group 'Grimm brothers' start\" probably is the better intent of this question. I cannot find the \"origin\" relation so I start from one of the persons here."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6701) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6701 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "the grimm brothers",
          "TopicEntityName": "Jacob Grimm",
          "TopicEntityMid": "m.046nx",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.028_0l",
              "EntityName": "Hanau"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1860",
      "RawQuestion": "where does kirk cameron live now?",
      "ProcessedQuestion": "where does kirk cameron live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-1860.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q471858) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q471858 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kirk cameron",
          "TopicEntityName": "Kirk Cameron",
          "TopicEntityMid": "m.03106c",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1866",
      "RawQuestion": "who was the voice of nemo's dad?",
      "ProcessedQuestion": "who was the voice of nemo 's dad",
      "Parses": [
        {
          "ParseId": "WebQTrn-1866.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q132863) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q132863 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q3293112 . } ",
          "PotentialTopicEntityMention": "nemo",
          "TopicEntityName": "Finding Nemo",
          "TopicEntityMid": "m.01jrbb",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.09nx23w",
              "EntityName": "Marlin",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013cr",
              "EntityName": "Albert Brooks"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1867",
      "RawQuestion": "what 4 countries are part of the united kingdom?",
      "ProcessedQuestion": "what 4 countries are part of the united kingdom",
      "Parses": [
        {
          "ParseId": "WebQTrn-1867.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P150 ?x . } ",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1867.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.first_level_divisions ?x .\n}\n",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.country.first_level_divisions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1870",
      "RawQuestion": "who played michael myers in halloween 4?",
      "ProcessedQuestion": "who played michael myers in halloween 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-1870.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "note \"the shape\" has alias of \"Michael Myers\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q959853) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q959853 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q1426891 . } ",
          "PotentialTopicEntityMention": "halloween 4",
          "TopicEntityName": "Halloween 4: The Return of Michael Myers",
          "TopicEntityMid": "m.06d6ch",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03zj8n",
              "EntityName": "The Shape",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ccvdt",
              "EntityName": "George P. Wilbur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1879",
      "RawQuestion": "what country did jacques cartier came from?",
      "ProcessedQuestion": "what country did jacques cartier came from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1879.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7321) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7321 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "jacques cartier",
          "TopicEntityName": "Jacques Cartier",
          "TopicEntityMid": "m.0j8t3",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f8l9c",
              "EntityName": "France"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1889",
      "RawQuestion": "who does jr smith play for 2012?",
      "ProcessedQuestion": "who does jr smith play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-1889.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q669334) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q669334 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jr smith",
          "TopicEntityName": "J. R. Smith",
          "TopicEntityMid": "m.05qbmm",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1891",
      "RawQuestion": "where was toni braxton born and raised?",
      "ProcessedQuestion": "where was toni braxton born and raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-1891.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? born and raised"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q155412) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q155412 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "toni braxton",
          "TopicEntityName": "Toni Braxton",
          "TopicEntityMid": "m.02h9_l",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ttlb",
              "EntityName": "Severn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1894",
      "RawQuestion": "where is shoreview mn?",
      "ProcessedQuestion": "where is shoreview mn",
      "Parses": [
        {
          "ParseId": "WebQTrn-1894.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q989471) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q989471 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "shoreview mn",
          "TopicEntityName": "Shoreview",
          "TopicEntityMid": "m.0wfmh",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh57",
              "EntityName": "Ramsey County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1894.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0wfmh)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0wfmh ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "shoreview mn",
          "TopicEntityName": "Shoreview",
          "TopicEntityMid": "m.0wfmh",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ykg",
              "EntityName": "Minnesota"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0csfd7",
              "EntityName": "Mounds View Public Schools"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh57",
              "EntityName": "Ramsey County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1896",
      "RawQuestion": "what was jack london's education?",
      "ProcessedQuestion": "what was jack london 's education",
      "Parses": [
        {
          "ParseId": "WebQTrn-1896.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q45765) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q45765 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jack london",
          "TopicEntityName": "Jack London",
          "TopicEntityMid": "m.0bt23",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025ygr9",
              "EntityName": "Oakland High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02zd460",
              "EntityName": "University of California, Berkeley"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1897",
      "RawQuestion": "what club team does ronaldinho play for?",
      "ProcessedQuestion": "what club team does ronaldinho play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1897.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "filter to \"club\" teams"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39444 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xn5n_",
              "EntityName": "Querétaro F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1903",
      "RawQuestion": "what county is bradenton fl located in?",
      "ProcessedQuestion": "what county is bradenton fl located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1903.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q582121) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q582121 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "bradenton fl",
          "TopicEntityName": "Bradenton",
          "TopicEntityMid": "m.0rmwd",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrmq",
              "EntityName": "Manatee County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1903.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rmwd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rmwd ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "bradenton fl",
          "TopicEntityName": "Bradenton",
          "TopicEntityMid": "m.0rmwd",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrmq",
              "EntityName": "Manatee County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1908",
      "RawQuestion": "where does bradley cooper live now?",
      "ProcessedQuestion": "where does bradley cooper live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-1908.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205707) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205707 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "bradley cooper",
          "TopicEntityName": "Bradley Cooper",
          "TopicEntityMid": "m.01_xtx",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dclg",
              "EntityName": "Philadelphia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1910",
      "RawQuestion": "what country did vasco da gama come from?",
      "ProcessedQuestion": "what country did vasco da gama come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1910.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7328) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7328 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "da gama",
          "TopicEntityName": "Vasco da Gama",
          "TopicEntityMid": "m.0c8dk",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01hk04",
              "EntityName": "Portuguese Empire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1914",
      "RawQuestion": "what basketball team does kris humphrey play for?",
      "ProcessedQuestion": "what basketball team does kris humphrey play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1914.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q363421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q363421 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kris humphrey",
          "TopicEntityName": "Kris Humphries",
          "TopicEntityMid": "m.0730b4",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm5b",
              "EntityName": "Washington Wizards"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1915",
      "RawQuestion": "what is time zone in hawaii?",
      "ProcessedQuestion": "what is time zone in hawaii",
      "Parses": [
        {
          "ParseId": "WebQTrn-1915.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q782 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.03gh4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1915.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaiian Islands",
          "TopicEntityMid": "m.014wxc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1915.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.0jbt3",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1919",
      "RawQuestion": "what did doctor kevorkian do?",
      "ProcessedQuestion": "what did doctor kevorkian do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1919.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46636) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46636 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "doctor kevorkian",
          "TopicEntityName": "Jack Kevorkian",
          "TopicEntityMid": "m.01ctkj",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nxqmh",
              "EntityName": "Painter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gq2jw",
              "EntityName": "Pathologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1920",
      "RawQuestion": "where is chowchilla located?",
      "ProcessedQuestion": "where is chowchilla located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1920.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q985260) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q985260 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "chowchilla",
          "TopicEntityName": "Chowchilla",
          "TopicEntityMid": "m.0r186",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2gz",
              "EntityName": "Madera County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1920.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r186)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r186 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "chowchilla",
          "TopicEntityName": "Chowchilla",
          "TopicEntityMid": "m.0r186",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n7q",
              "EntityName": "California"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2gz",
              "EntityName": "Madera County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1921",
      "RawQuestion": "what country is vatican city in?",
      "ProcessedQuestion": "what country is vatican city in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1921.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q237) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q237 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "vatican city",
          "TopicEntityName": "Vatican City",
          "TopicEntityMid": "m.07ytt",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rjj",
              "EntityName": "Italy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1926",
      "RawQuestion": "what did john howard study at university?",
      "ProcessedQuestion": "what did john howard study at university",
      "Parses": [
        {
          "ParseId": "WebQTrn-1926.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? major would be better"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q51330) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q51330 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "john howard",
          "TopicEntityName": "John Howard",
          "TopicEntityMid": "m.0chh05",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rr_d",
              "EntityName": "Bachelor of Laws"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1927",
      "RawQuestion": "what did duke ellington do?",
      "ProcessedQuestion": "what did duke ellington do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1927.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4030) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4030 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "duke ellington",
          "TopicEntityName": "Duke Ellington",
          "TopicEntityMid": "m.0bdlj",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025352",
              "EntityName": "Lyricist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.029bkp",
              "EntityName": "Bandleader"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vyk",
              "EntityName": "Pianist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1928",
      "RawQuestion": "from which university did president obama receive his bachelor's degree?",
      "ProcessedQuestion": "from which university did president obama receive his bachelor 's degree",
      "Parses": [
        {
          "ParseId": "WebQTrn-1928.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q1765120 . } ",
          "PotentialTopicEntityMention": "president obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.014mlp",
              "EntityName": "Bachelor of Arts",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1934",
      "RawQuestion": "where was obama born?",
      "ProcessedQuestion": "where was obama born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1934.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh0_",
              "EntityName": "Honolulu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1935",
      "RawQuestion": "where was tommy emmanuel born?",
      "ProcessedQuestion": "where was tommy emmanuel born",
      "Parses": [
        {
          "ParseId": "WebQTrn-1935.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q310298) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q310298 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tommy emmanuel",
          "TopicEntityName": "Tommy Emmanuel",
          "TopicEntityMid": "m.064t69",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04c1fr",
              "EntityName": "Muswellbrook"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1939",
      "RawQuestion": "what political experience did abraham lincoln have?",
      "ProcessedQuestion": "what political experience did abraham lincoln have",
      "Parses": [
        {
          "ParseId": "WebQTrn-1939.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.052m6c2",
              "EntityName": "Member of Illinois House of Representatives"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060d2",
              "EntityName": "President of the United States"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1940",
      "RawQuestion": "where does brian williams live?",
      "ProcessedQuestion": "where does brian williams live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1940.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q459695) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q459695 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "brian williams",
          "TopicEntityName": "Brian Williams",
          "TopicEntityMid": "m.030p0z",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mb87",
              "EntityName": "Elmira"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1945",
      "RawQuestion": "where was toussaint charbonneau from?",
      "ProcessedQuestion": "where was toussaint charbonneau from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1945.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1356512) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1356512 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "toussaint charbonneau",
          "TopicEntityName": "Toussaint Charbonneau",
          "TopicEntityMid": "m.01wcc7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02p1lp",
              "EntityName": "Boucherville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1947",
      "RawQuestion": "what timezone is new mexico currently in?",
      "ProcessedQuestion": "what timezone is new mexico currently in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1947.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1522) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1522 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "new mexico",
          "TopicEntityName": "New Mexico",
          "TopicEntityMid": "m.05fjy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1954",
      "RawQuestion": "where was the battle of appomattox located?",
      "ProcessedQuestion": "where was the battle of appomattox located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1954.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1355391) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1355391 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "appomattox",
          "TopicEntityName": "Battle of Appomattox Court House",
          "TopicEntityMid": "m.054pn2",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01p_6k",
              "EntityName": "Appomattox Court House"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05c627j",
              "EntityName": "Appomattox Court House National Historical Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1957",
      "RawQuestion": "where did the name rome come from?",
      "ProcessedQuestion": "where did the name rome come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-1957.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q220) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q220 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "rome",
          "TopicEntityName": "Rome",
          "TopicEntityMid": "m.06c62",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ghqr",
              "EntityName": "Romulus and Remus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1958",
      "RawQuestion": "what time zone is fresno ca?",
      "ProcessedQuestion": "what time zone is fresno ca",
      "Parses": [
        {
          "ParseId": "WebQTrn-1958.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43301) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43301 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "fresno ca",
          "TopicEntityName": "Fresno",
          "TopicEntityMid": "m.0mzy7",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1960",
      "RawQuestion": "what was the cause of death for sage stallone?",
      "ProcessedQuestion": "what was the cause of death for sage stallone",
      "Parses": [
        {
          "ParseId": "WebQTrn-1960.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q440932) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q440932 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "sage stallone",
          "TopicEntityName": "Sage Stallone",
          "TopicEntityMid": "m.091f9c",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lp66",
              "EntityName": "Atherosclerosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1961",
      "RawQuestion": "where did queen isabella live?",
      "ProcessedQuestion": "where did queen isabella live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1961.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q45859) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q45859 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "queen isabella",
          "TopicEntityName": "Isabella I of Castile",
          "TopicEntityMid": "m.0jd6m",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z8x41",
              "EntityName": "Madrigal de las Altas Torres"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1962",
      "RawQuestion": "who played carl fredricksen in up?",
      "ProcessedQuestion": "who played carl fredricksen in up",
      "Parses": [
        {
          "ParseId": "WebQTrn-1962.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q174811) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q174811 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q3658760 . } ",
          "PotentialTopicEntityMention": "up",
          "TopicEntityName": "Up",
          "TopicEntityMid": "m.02rn00y",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0b6mg3l",
              "EntityName": "Carl Fredricksen",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02tkzn",
              "EntityName": "Ed Asner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09vv0cn",
              "EntityName": "Jeremy Leary"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1970",
      "RawQuestion": "what did samuel de champlain?",
      "ProcessedQuestion": "what did samuel de champlain",
      "Parses": [
        {
          "ParseId": "WebQTrn-1970.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q68529) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q68529 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "samuel de champlain",
          "TopicEntityName": "Samuel de Champlain",
          "TopicEntityMid": "m.09r57",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016wtf",
              "EntityName": "Sailor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023nrw",
              "EntityName": "Navigator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.099md",
              "EntityName": "Soldier"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1971",
      "RawQuestion": "what was william faulkner known for?",
      "ProcessedQuestion": "what was william faulkner known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1971.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38392) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38392 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "william faulkner",
          "TopicEntityName": "William Faulkner",
          "TopicEntityMid": "m.084w8",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1976",
      "RawQuestion": "what did robert koch do?",
      "ProcessedQuestion": "what did robert koch do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1976.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37193) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37193 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "robert koch",
          "TopicEntityName": "Robert Koch",
          "TopicEntityMid": "m.03kpt",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1977",
      "RawQuestion": "who does cristiano ronaldo play for?",
      "ProcessedQuestion": "who does cristiano ronaldo play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-1977.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1979",
      "RawQuestion": "who's betty white?",
      "ProcessedQuestion": "who 's betty white",
      "Parses": [
        {
          "ParseId": "WebQTrn-1979.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q373895) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q373895 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "betty white",
          "TopicEntityName": "Betty White",
          "TopicEntityMid": "m.025mb_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1981",
      "RawQuestion": "who is lleyton hewitt?",
      "ProcessedQuestion": "who is lleyton hewitt",
      "Parses": [
        {
          "ParseId": "WebQTrn-1981.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180104) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180104 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "lleyton hewitt",
          "TopicEntityName": "Lleyton Hewitt",
          "TopicEntityMid": "m.04k1p",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhr73",
              "EntityName": "Tennis player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1987",
      "RawQuestion": "what county is sacramento located in?",
      "ProcessedQuestion": "what county is sacramento located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-1987.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q18013) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q18013 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "sacramento",
          "TopicEntityName": "Sacramento",
          "TopicEntityMid": "m.07bcn",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bxqq",
              "EntityName": "Sacramento County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-1987.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07bcn)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07bcn ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "sacramento",
          "TopicEntityName": "Sacramento",
          "TopicEntityMid": "m.07bcn",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bxqq",
              "EntityName": "Sacramento County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1988",
      "RawQuestion": "what did audrey hepburn died of?",
      "ProcessedQuestion": "what did audrey hepburn died of",
      "Parses": [
        {
          "ParseId": "WebQTrn-1988.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42786) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42786 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "audrey hepburn",
          "TopicEntityName": "Audrey Hepburn",
          "TopicEntityMid": "m.0dqcm",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fb2z2",
              "EntityName": "Appendix cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1989",
      "RawQuestion": "what country was the treaty of versailles written?",
      "ProcessedQuestion": "what country was the treaty of versailles written",
      "Parses": [
        {
          "ParseId": "WebQTrn-1989.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8736) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8736 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "treaty of versailles",
          "TopicEntityName": "Treaty of Versailles",
          "TopicEntityMid": "m.07d4d",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qtj",
              "EntityName": "Paris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1991",
      "RawQuestion": "who was irving berlin and what did he do?",
      "ProcessedQuestion": "who was irving berlin and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTrn-1991.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128746) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128746 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "irving berlin",
          "TopicEntityName": "Irving Berlin",
          "TopicEntityMid": "m.0cyhq",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025352",
              "EntityName": "Lyricist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1994",
      "RawQuestion": "where is the denver broncos stadium located?",
      "ProcessedQuestion": "where is the denver broncos stadium located",
      "Parses": [
        {
          "ParseId": "WebQTrn-1994.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q223507) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q223507 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "the denver broncos",
          "TopicEntityName": "Denver Broncos",
          "TopicEntityMid": "m.0289q",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hxv8",
              "EntityName": "Sports Authority Field at Mile High"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1995",
      "RawQuestion": "where did sir ernest shackleton live?",
      "ProcessedQuestion": "where did sir ernest shackleton live",
      "Parses": [
        {
          "ParseId": "WebQTrn-1995.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q957543) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q957543 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "sir ernest shackleton",
          "TopicEntityName": "Sir Ernest Shackleton",
          "TopicEntityMid": "m.0gbcz",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ng8v",
              "EntityName": "County Kildare"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-1996",
      "RawQuestion": "what type of music is scott joplin?",
      "ProcessedQuestion": "what type of music is scott joplin",
      "Parses": [
        {
          "ParseId": "WebQTrn-1996.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q191499) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q191499 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "scott joplin",
          "TopicEntityName": "Scott Joplin",
          "TopicEntityMid": "m.07b69",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06m6j",
              "EntityName": "Ragtime"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cdr_y",
              "EntityName": "March"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2003",
      "RawQuestion": "what year were the cincinnati reds founded?",
      "ProcessedQuestion": "what year were the cincinnati reds founded",
      "Parses": [
        {
          "ParseId": "WebQTrn-2003.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q826751) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q826751 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "cincinnati reds",
          "TopicEntityName": "Cincinnati Reds",
          "TopicEntityMid": "m.01ypc",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1881",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2004",
      "RawQuestion": "where ulysses s grant go to school?",
      "ProcessedQuestion": "where ulysses s grant go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2004.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7880945) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7880945 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "ulysses s grant",
          "TopicEntityName": "Ulysses S. Grant",
          "TopicEntityMid": "m.07t2k",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07x4c",
              "EntityName": "United States Military Academy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2010",
      "RawQuestion": "what music did antonio vivaldi compose?",
      "ProcessedQuestion": "what music did antonio vivaldi compose",
      "Parses": [
        {
          "ParseId": "WebQTrn-2010.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1340) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1340 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "antonio vivaldi",
          "TopicEntityName": "Antonio Vivaldi",
          "TopicEntityMid": "m.0pth",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fsz",
              "EntityName": "Baroque music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2012",
      "RawQuestion": "what is the timezone in vancouver?",
      "ProcessedQuestion": "what is the timezone in vancouver",
      "Parses": [
        {
          "ParseId": "WebQTrn-2012.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q234053) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q234053 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "vancouver",
          "TopicEntityName": "Vancouver",
          "TopicEntityMid": "m.0ckhc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2012.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.080h2)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.080h2 ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "vancouver",
          "TopicEntityName": "Vancouver",
          "TopicEntityMid": "m.080h2",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2014",
      "RawQuestion": "what county is stockton ca located in?",
      "ProcessedQuestion": "what county is stockton ca located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2014.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49240) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49240 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "stockton ca",
          "TopicEntityName": "Stockton",
          "TopicEntityMid": "m.0pc56",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2sr",
              "EntityName": "San Joaquin County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2014.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0pc56)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0pc56 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "stockton ca",
          "TopicEntityName": "Stockton",
          "TopicEntityMid": "m.0pc56",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2sr",
              "EntityName": "San Joaquin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2015",
      "RawQuestion": "what did ronnie radke do?",
      "ProcessedQuestion": "what did ronnie radke do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2015.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2019307) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2019307 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ronnie radke",
          "TopicEntityName": "Ronnie Radke",
          "TopicEntityMid": "m.02ql6bk",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016z4k",
              "EntityName": "Singer-songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hpcdn2",
              "EntityName": "Rapper"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2016",
      "RawQuestion": "where does selena gomez live right now 2010?",
      "ProcessedQuestion": "where does selena gomez live right now 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-2016.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q83287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q83287 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2010-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2010-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "selena gomez",
          "TopicEntityName": "Selena Gomez",
          "TopicEntityMid": "m.0gs6vr",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2020",
      "RawQuestion": "what was eli whitney education?",
      "ProcessedQuestion": "what was eli whitney education",
      "Parses": [
        {
          "ParseId": "WebQTrn-2020.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q280930) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q280930 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "eli whitney",
          "TopicEntityName": "Eli Whitney",
          "TopicEntityMid": "m.02ncr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fpvz",
              "EntityName": "Yale College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zxrds",
              "EntityName": "Leicester Academy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2022",
      "RawQuestion": "what other writers influenced charles dickens?",
      "ProcessedQuestion": "what other writers influenced charles dickens",
      "Parses": [
        {
          "ParseId": "WebQTrn-2022.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5686) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5686 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "charles dickens",
          "TopicEntityName": "Charles Dickens",
          "TopicEntityMid": "m.01v9724",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gr2w",
              "EntityName": "Tobias Smollett"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vh096",
              "EntityName": "Victor Hugo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03j7p",
              "EntityName": "Henry Fielding"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kpk",
              "EntityName": "Laurence Sterne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xjp",
              "EntityName": "Miguel de Cervantes"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y8v",
              "EntityName": "Walter Scott"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072dv",
              "EntityName": "Sheridan Le Fanu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081k8",
              "EntityName": "William Shakespeare"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084y3",
              "EntityName": "Washington Irving"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.085wn",
              "EntityName": "William Wordsworth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bmjw",
              "EntityName": "Honoré de Balzac"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2023",
      "RawQuestion": "where jay z was raised?",
      "ProcessedQuestion": "where jay z was raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-2023.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q62766) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q62766 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jay z",
          "TopicEntityName": "Jay-Z",
          "TopicEntityMid": "m.01vw20h",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr3d",
              "EntityName": "Brooklyn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2029",
      "RawQuestion": "where was battle of verdun located?",
      "ProcessedQuestion": "where was battle of verdun located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2029.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q130847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q130847 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "verdun",
          "TopicEntityName": "Battle of Verdun",
          "TopicEntityMid": "m.0dl4g",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ny95",
              "EntityName": "Verdun"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2030",
      "RawQuestion": "where does avril lavigne live now?",
      "ProcessedQuestion": "where does avril lavigne live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2030.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q30449) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q30449 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "avril lavigne",
          "TopicEntityName": "Avril Lavigne",
          "TopicEntityMid": "m.0161c2",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018dhx",
              "EntityName": "Belleville"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01kydn",
              "EntityName": "Greater Napanee"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2039",
      "RawQuestion": "who plays jacob black in twilight?",
      "ProcessedQuestion": "who plays jacob black in twilight",
      "Parses": [
        {
          "ParseId": "WebQTrn-2039.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q160071) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q160071 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q716835 . } ",
          "PotentialTopicEntityMention": "twilight",
          "TopicEntityName": "Twilight",
          "TopicEntityMid": "m.03nm_fh",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02qd_td",
              "EntityName": "Jacob Black",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ldhs",
              "EntityName": "Taylor Lautner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2047",
      "RawQuestion": "where do the chicago cubs play?",
      "ProcessedQuestion": "where do the chicago cubs play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2047.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q246782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q246782 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "chicago cubs",
          "TopicEntityName": "Chicago Cubs",
          "TopicEntityMid": "m.01yjl",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066by2",
              "EntityName": "Hohokam Stadium"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b0sh",
              "EntityName": "Wrigley Field"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h975w3",
              "EntityName": "Sloan Park"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2048",
      "RawQuestion": "where did reagan die?",
      "ProcessedQuestion": "where did reagan die",
      "Parses": [
        {
          "ParseId": "WebQTrn-2048.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9960) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9960 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "reagan",
          "TopicEntityName": "Ronald Reagan",
          "TopicEntityMid": "m.06c0j",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026z1h",
              "EntityName": "Bel-Air"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2051",
      "RawQuestion": "what was irving langmuir famous for?",
      "ProcessedQuestion": "what was irving langmuir famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2051.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q184286) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q184286 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "irving langmuir",
          "TopicEntityName": "Irving Langmuir",
          "TopicEntityMid": "m.03yzb",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2064",
      "RawQuestion": "where is shakira from originally?",
      "ProcessedQuestion": "where is shakira from originally",
      "Parses": [
        {
          "ParseId": "WebQTrn-2064.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34424) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34424 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "shakira",
          "TopicEntityName": "Shakira",
          "TopicEntityMid": "m.01wj18h",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02b84b",
              "EntityName": "Barranquilla"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2066",
      "RawQuestion": "where was the gettysburg war located?",
      "ProcessedQuestion": "where was the gettysburg war located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2066.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q33132) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q33132 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "gettysburg",
          "TopicEntityName": "Battle of Gettysburg",
          "TopicEntityMid": "m.01jnm",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tbn",
              "EntityName": "Pennsylvania"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzs0",
              "EntityName": "Gettysburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0frlr",
              "EntityName": "Adams County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2074",
      "RawQuestion": "what team did john madden play football for?",
      "ProcessedQuestion": "what team did john madden play football for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2074.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? teams"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1345694) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1345694 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "john madden",
          "TopicEntityName": "John Madden",
          "TopicEntityMid": "m.0frmb1",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ztt6z",
              "EntityName": "Cal Poly Mustangs football"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fbq2n",
              "EntityName": "Oregon Ducks football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2075",
      "RawQuestion": "what does julian clary do?",
      "ProcessedQuestion": "what does julian clary do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2075.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6307060) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6307060 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "julian clary",
          "TopicEntityName": "Julian Clary",
          "TopicEntityMid": "m.01_rph",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018gz8",
              "EntityName": "Comedian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2076",
      "RawQuestion": "where does the potomac river flow into?",
      "ProcessedQuestion": "where does the potomac river flow into",
      "Parses": [
        {
          "ParseId": "WebQTrn-2076.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q179444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q179444 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "potomac river",
          "TopicEntityName": "Potomac River",
          "TopicEntityMid": "m.0g52g",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g66h",
              "EntityName": "Chesapeake Bay"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2084",
      "RawQuestion": "what time is in london heathrow?",
      "ProcessedQuestion": "what time is in london heathrow",
      "Parses": [
        {
          "ParseId": "WebQTrn-2084.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8691) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8691 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "london heathrow",
          "TopicEntityName": "London Heathrow Airport",
          "TopicEntityMid": "m.03jn4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2092",
      "RawQuestion": "what did captain scott die of?",
      "ProcessedQuestion": "what did captain scott die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-2092.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q102527) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q102527 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "captain scott",
          "TopicEntityName": "Robert Falcon Scott",
          "TopicEntityMid": "m.06dlh",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01flyj",
              "EntityName": "Starvation"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2094",
      "RawQuestion": "what city did elvis presley grew up in?",
      "ProcessedQuestion": "what city did elvis presley grew up in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2094.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q303 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "elvis presley",
          "TopicEntityName": "Elvis Presley",
          "TopicEntityMid": "m.02jq1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wqwj",
              "EntityName": "Tupelo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2098",
      "RawQuestion": "what 4 teams did wayne gretzky play for?",
      "ProcessedQuestion": "what 4 teams did wayne gretzky play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2098.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q209518) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q209518 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "wayne gretzky",
          "TopicEntityName": "Wayne Gretzky",
          "TopicEntityMid": "m.0839s",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jnmj",
              "EntityName": "Edmonton Oilers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2099",
      "RawQuestion": "who was philip randolph?",
      "ProcessedQuestion": "who was philip randolph",
      "Parses": [
        {
          "ParseId": "WebQTrn-2099.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q720153) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q720153 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "philip randolph",
          "TopicEntityName": "Asa Philip Randolph",
          "TopicEntityMid": "m.01lsst",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hx60",
              "EntityName": "Social activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vd69b",
              "EntityName": "Trade unionist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2104",
      "RawQuestion": "what is the zip code for clarksville tn?",
      "ProcessedQuestion": "what is the zip code for clarksville tn",
      "Parses": [
        {
          "ParseId": "WebQTrn-2104.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q328941) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q328941 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "clarksville",
          "TopicEntityName": "Clarksville",
          "TopicEntityMid": "m.0_w5_",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020w_kz",
              "EntityName": "37040"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dxjrj",
              "EntityName": "37042"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dxjry",
              "EntityName": "37043"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr01f",
              "EntityName": "37044"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr01n",
              "EntityName": "37041"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2112",
      "RawQuestion": "which country is gaza city located?",
      "ProcessedQuestion": "which country is gaza city located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2112.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39760) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39760 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "gaza",
          "TopicEntityName": "Gaza Strip",
          "TopicEntityMid": "m.0357_",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k0p4",
              "EntityName": "State of Palestine"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2114",
      "RawQuestion": "what country did james watt come from?",
      "ProcessedQuestion": "what country did james watt come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2114.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9041) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9041 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "james watt",
          "TopicEntityName": "James Watt",
          "TopicEntityMid": "m.043rm",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014tss",
              "EntityName": "Kingdom of Great Britain"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2115",
      "RawQuestion": "what instrument did louis armstrong like to play?",
      "ProcessedQuestion": "what instrument did louis armstrong like to play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2115.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1779) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1779 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "louis armstrong",
          "TopicEntityName": "Louis Armstrong",
          "TopicEntityMid": "m.04n32",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020w2",
              "EntityName": "Cornet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2122",
      "RawQuestion": "what team does ladainian tomlinson play 4?",
      "ProcessedQuestion": "what team does ladainian tomlinson play 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-2122.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q537463) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q537463 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ladainian tomlinson",
          "TopicEntityName": "LaDainian Tomlinson",
          "TopicEntityMid": "m.04m2px",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2124",
      "RawQuestion": "what did camille grammer do for a living?",
      "ProcessedQuestion": "what did camille grammer do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2124.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2034653) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2034653 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "camille grammer",
          "TopicEntityName": "Camille Grammer",
          "TopicEntityMid": "m.06x0s_",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2128",
      "RawQuestion": "who does brandon jacobs play for?",
      "ProcessedQuestion": "who does brandon jacobs play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2128.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q304532) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q304532 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "brandon jacobs",
          "TopicEntityName": "Brandon Jacobs",
          "TopicEntityMid": "m.07ynx2",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05gg4",
              "EntityName": "New York Giants"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2133",
      "RawQuestion": "who does obama look up to?",
      "ProcessedQuestion": "who does obama look up to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2133.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018q7p",
              "EntityName": "Saul Alinsky"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d1nj",
              "EntityName": "Reinhold Niebuhr"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ct6p",
              "EntityName": "Nipsey Russell"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2138",
      "RawQuestion": "what did edward jenner do for a living?",
      "ProcessedQuestion": "what did edward jenner do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2138.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40852) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40852 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "edward jenner",
          "TopicEntityName": "Edward Jenner",
          "TopicEntityMid": "m.02ljb",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2140",
      "RawQuestion": "what did brittany murphy died of?",
      "ProcessedQuestion": "what did brittany murphy died of",
      "Parses": [
        {
          "ParseId": "WebQTrn-2140.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q168847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q168847 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "brittany murphy",
          "TopicEntityName": "Brittany Murphy",
          "TopicEntityMid": "m.0168dy",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q7n0v",
              "EntityName": "Combined drug intoxication"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lcdk",
              "EntityName": "Anemia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2146",
      "RawQuestion": "where is amsterdam ohio?",
      "ProcessedQuestion": "where is amsterdam ohio",
      "Parses": [
        {
          "ParseId": "WebQTrn-2146.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2049529) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2049529 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "amsterdam",
          "TopicEntityName": "Amsterdam",
          "TopicEntityMid": "m.0yyzd",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n25q",
              "EntityName": "Jefferson County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2146.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0yyzd)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0yyzd ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "amsterdam",
          "TopicEntityName": "Amsterdam",
          "TopicEntityMid": "m.0yyzd",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02832yb",
              "EntityName": "Springfield Township"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kkh",
              "EntityName": "Ohio"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n25q",
              "EntityName": "Jefferson County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2154",
      "RawQuestion": "where does drogba play now?",
      "ProcessedQuestion": "where does drogba play now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2154.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? should have (none)"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q48892) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q48892 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "drogba",
          "TopicEntityName": "Didier Drogba",
          "TopicEntityMid": "m.03_y2f",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023fb",
              "EntityName": "Chelsea F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2155",
      "RawQuestion": "who owns chrysler corporation 2012?",
      "ProcessedQuestion": "who owns chrysler corporation 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-2155.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q181114) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q181114 wdt:P749 ?y . ?y wdt:P749 ?x . ?y wdt:P355 wd:Q181114 . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2012-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2012-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "chrysler corporation",
          "TopicEntityName": "Chrysler Group LLC",
          "TopicEntityMid": "m.01_bp",
          "InferentialChain": [
            "organization.organization.parent",
            "organization.organization_relationship.parent"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01_bp",
              "EntityName": "Chrysler Group LLC",
              "SourceNodeIndex": 0,
              "NodePredicate": "organization.organization_relationship.child",
              "ValueType": "String"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "organization.organization_relationship.to",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "organization.organization_relationship.from",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              1,
              2
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_gywj9",
              "EntityName": "Fiat Chrysler Automobiles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01bqks",
              "EntityName": "Federal government of the United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wz7x",
              "EntityName": "Government of Canada"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03c40gm",
              "EntityName": "Voluntary Employee Beneficiary Association"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c7mv",
              "EntityName": "Fiat S.p.A."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2156",
      "RawQuestion": "what are the name of mitt romney sons?",
      "ProcessedQuestion": "what are the name of mitt romney sons",
      "Parses": [
        {
          "ParseId": "WebQTrn-2156.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "mitt romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkl_",
              "EntityName": "Matt Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkmn",
              "EntityName": "Ben Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkmy",
              "EntityName": "Craig Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m5dk9",
              "EntityName": "Tagg Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qj3pv",
              "EntityName": "Josh Romney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2157",
      "RawQuestion": "what was the cause of death of larry hagman?",
      "ProcessedQuestion": "what was the cause of death of larry hagman",
      "Parses": [
        {
          "ParseId": "WebQTrn-2157.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q100440) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q100440 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "larry hagman",
          "TopicEntityName": "Larry Hagman",
          "TopicEntityMid": "m.01vyv9",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0369n2",
              "EntityName": "Head and neck cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04psf",
              "EntityName": "Leukemia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2159",
      "RawQuestion": "what school did sir isaac newton go to?",
      "ProcessedQuestion": "what school did sir isaac newton go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2159.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q935) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q935 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "sir isaac newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tk7",
              "EntityName": "Trinity College, Cambridge"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h37f2",
              "EntityName": "The King's School, Grantham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2166",
      "RawQuestion": "who is nick grimshaw?",
      "ProcessedQuestion": "who is nick grimshaw",
      "Parses": [
        {
          "ParseId": "WebQTrn-2166.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q547486) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q547486 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "nick grimshaw",
          "TopicEntityName": "Nick Grimshaw",
          "TopicEntityMid": "m.03cly4v",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dsz",
              "EntityName": "Disc jockey"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2167",
      "RawQuestion": "what did florence sabin do?",
      "ProcessedQuestion": "what did florence sabin do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2167.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q449487) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q449487 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "florence sabin",
          "TopicEntityName": "Florence R. Sabin",
          "TopicEntityMid": "m.033_w4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t4q",
              "EntityName": "Physician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2171",
      "RawQuestion": "where did audie murphy grow up?",
      "ProcessedQuestion": "where did audie murphy grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2171.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q337185) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q337185 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "audie murphy",
          "TopicEntityName": "Audie Murphy",
          "TopicEntityMid": "m.01_nh0",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04bwqsw",
              "EntityName": "Kingston"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2173",
      "RawQuestion": "where is mark sanchez now?",
      "ProcessedQuestion": "where is mark sanchez now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2173.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q946184) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q946184 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "mark sanchez",
          "TopicEntityName": "Mark Sanchez",
          "TopicEntityMid": "m.0ctxdn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2174",
      "RawQuestion": "where was the battle of verdun ww1?",
      "ProcessedQuestion": "where was the battle of verdun ww1",
      "Parses": [
        {
          "ParseId": "WebQTrn-2174.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q130847) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q130847 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "verdun",
          "TopicEntityName": "Battle of Verdun",
          "TopicEntityMid": "m.0dl4g",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ny95",
              "EntityName": "Verdun"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2176",
      "RawQuestion": "where is okemos michigan?",
      "ProcessedQuestion": "where is okemos michigan",
      "Parses": [
        {
          "ParseId": "WebQTrn-2176.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1870758) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1870758 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "okemos michigan",
          "TopicEntityName": "Okemos",
          "TopicEntityMid": "m.0v7_g",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0njlp",
              "EntityName": "Ingham County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2176.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0v7_g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0v7_g ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "okemos michigan",
          "TopicEntityName": "Okemos",
          "TopicEntityMid": "m.0v7_g",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04rrx",
              "EntityName": "Michigan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0njlp",
              "EntityName": "Ingham County"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v7_3",
              "EntityName": "Meridian Charter Township"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2177",
      "RawQuestion": "where did caroline kennedy go to school?",
      "ProcessedQuestion": "where did caroline kennedy go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2177.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230303 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "caroline kennedy",
          "TopicEntityName": "Caroline Kennedy",
          "TopicEntityMid": "m.01y603",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k7xz",
              "EntityName": "Radcliffe College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mpwj",
              "EntityName": "Harvard College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n951",
              "EntityName": "Columbia Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03ksy",
              "EntityName": "Harvard University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bf5w5",
              "EntityName": "Concord Academy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2183",
      "RawQuestion": "what team does allen iverson play for now?",
      "ProcessedQuestion": "what team does allen iverson play for now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2183.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190094) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190094 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "allen iverson",
          "TopicEntityName": "Allen Iverson",
          "TopicEntityMid": "m.01sg7_",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2190",
      "RawQuestion": "where does sam shepard live?",
      "ProcessedQuestion": "where does sam shepard live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2190.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? filter doesn't filter to single answer"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294583) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294583 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sam shepard",
          "TopicEntityName": "Sam Shepard",
          "TopicEntityMid": "m.016yzz",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xry",
              "EntityName": "Florida"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.034tl",
              "EntityName": "Guam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035r6b",
              "EntityName": "Fort Sheridan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mz5",
              "EntityName": "South Dakota"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07srw",
              "EntityName": "Utah"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc56",
              "EntityName": "Manhattan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r0_5",
              "EntityName": "South Pasadena"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r06n",
              "EntityName": "Duarte"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wmtg",
              "EntityName": "Stillwater"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2198",
      "RawQuestion": "what did fred goodwin do?",
      "ProcessedQuestion": "what did fred goodwin do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2198.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1885214) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1885214 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "fred goodwin",
          "TopicEntityName": "Fred Goodwin",
          "TopicEntityMid": "m.05cfvw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04p2dz",
              "EntityName": "Chartered Accountant"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2202",
      "RawQuestion": "who is marilyn monroe and why is she famous?",
      "ProcessedQuestion": "who is marilyn monroe and why is she famous",
      "Parses": [
        {
          "ParseId": "WebQTrn-2202.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4616) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4616 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "marilyn monroe",
          "TopicEntityName": "Marilyn Monroe",
          "TopicEntityMid": "m.04wqr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mwvd",
              "EntityName": "Showgirl"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2203",
      "RawQuestion": "where is port charlotte florida located?",
      "ProcessedQuestion": "where is port charlotte florida located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2203.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1022776) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1022776 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "port charlotte florida",
          "TopicEntityName": "Port Charlotte",
          "TopicEntityMid": "m.0rjvf",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jgk_",
              "EntityName": "Charlotte County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2203.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rjvf)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rjvf ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "port charlotte florida",
          "TopicEntityName": "Port Charlotte",
          "TopicEntityMid": "m.0rjvf",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xry",
              "EntityName": "Florida"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jgk_",
              "EntityName": "Charlotte County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2204",
      "RawQuestion": "what time zone is it in california?",
      "ProcessedQuestion": "what time zone is it in california",
      "Parses": [
        {
          "ParseId": "WebQTrn-2204.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q99) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q99 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "california",
          "TopicEntityName": "California",
          "TopicEntityMid": "m.01n7q",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2205",
      "RawQuestion": "who is reba mcentire's son?",
      "ProcessedQuestion": "who is reba mcentire 's son",
      "Parses": [
        {
          "ParseId": "WebQTrn-2205.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229430) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229430 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "reba mcentire",
          "TopicEntityName": "Reba McEntire",
          "TopicEntityMid": "m.01dpsv",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n7wd1p",
              "EntityName": "Shelby Blackstock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2206",
      "RawQuestion": "who helped form the american federation of labor?",
      "ProcessedQuestion": "who helped form the american federation of labor",
      "Parses": [
        {
          "ParseId": "WebQTrn-2206.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464242) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464242 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "american federation of labor",
          "TopicEntityName": "American Federation of Labor",
          "TopicEntityMid": "m.01z4fn",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w91b",
              "EntityName": "Samuel Gompers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2212",
      "RawQuestion": "what was elijah mccoy famous for?",
      "ProcessedQuestion": "what was elijah mccoy famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2212.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1329419) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1329419 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "elijah mccoy",
          "TopicEntityName": "Elijah McCoy",
          "TopicEntityMid": "m.0199mw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09j9h",
              "EntityName": "Engineer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2213",
      "RawQuestion": "who did john paul jones fight for?",
      "ProcessedQuestion": "who did john paul jones fight for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2213.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q314333) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q314333 wdt:P241 ?y . ?y wdt:P241 ?x . } ",
          "PotentialTopicEntityMention": "john paul jones",
          "TopicEntityName": "John Paul Jones",
          "TopicEntityMid": "m.045bz",
          "InferentialChain": [
            "military.military_person.service",
            "military.military_service.military_force"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021xtf",
              "EntityName": "Merchant Navy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0268nz",
              "EntityName": "Continental Navy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065y1n",
              "EntityName": "Imperial Russian Navy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2215",
      "RawQuestion": "where was brad paisley born and raised?",
      "ProcessedQuestion": "where was brad paisley born and raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-2215.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39639) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39639 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "brad paisley",
          "TopicEntityName": "Brad Paisley",
          "TopicEntityMid": "m.03gr7w",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010xmb",
              "EntityName": "Glen Dale"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2218",
      "RawQuestion": "what is george washington's hometown?",
      "ProcessedQuestion": "what is george washington 's hometown",
      "Parses": [
        {
          "ParseId": "WebQTrn-2218.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george washington",
          "TopicEntityName": "George Washington",
          "TopicEntityMid": "m.034rd",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mmyl",
              "EntityName": "Westmoreland County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2219",
      "RawQuestion": "what is arlington texas zip code?",
      "ProcessedQuestion": "what is arlington texas zip code",
      "Parses": [
        {
          "ParseId": "WebQTrn-2219.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17943) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17943 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "arlington texas",
          "TopicEntityName": "Arlington",
          "TopicEntityMid": "m.0nqph",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yf_6",
              "EntityName": "76011"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yfv7",
              "EntityName": "76017"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yfw2",
              "EntityName": "76012"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yfx2",
              "EntityName": "76010"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yg3f",
              "EntityName": "76006"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yg4f",
              "EntityName": "76018"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yg58",
              "EntityName": "76015"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yg73",
              "EntityName": "76013"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020ygcw",
              "EntityName": "76016"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020yhh7",
              "EntityName": "76014"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021df5f",
              "EntityName": "22202"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dxw18",
              "EntityName": "76001"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dxw1p",
              "EntityName": "76002"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdlq",
              "EntityName": "76096"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdm4",
              "EntityName": "76094"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdmt",
              "EntityName": "76019"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdn0",
              "EntityName": "76007"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdn7",
              "EntityName": "76005"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdng",
              "EntityName": "76004"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqdnp",
              "EntityName": "76003"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sh2kb",
              "EntityName": "22202-5000"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2230",
      "RawQuestion": "where does don king live?",
      "ProcessedQuestion": "where does don king live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2230.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q344977) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q344977 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "don king",
          "TopicEntityName": "Don King",
          "TopicEntityMid": "m.014wm_",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01sn3",
              "EntityName": "Cleveland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2238",
      "RawQuestion": "what team does reggie bush play for 2011?",
      "ProcessedQuestion": "what team does reggie bush play for 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-2238.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q555271) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q555271 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "reggie bush",
          "TopicEntityName": "Reggie Bush",
          "TopicEntityMid": "m.05cb70",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04vn5",
              "EntityName": "Miami Dolphins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g3v",
              "EntityName": "New Orleans Saints"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2239",
      "RawQuestion": "where did kate chopin grow up?",
      "ProcessedQuestion": "where did kate chopin grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2239.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230476) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230476 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "kate chopin",
          "TopicEntityName": "Kate Chopin",
          "TopicEntityMid": "m.0d8pw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06wxw",
              "EntityName": "St. Louis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2242",
      "RawQuestion": "who played obi wan kenobi in phantom menace?",
      "ProcessedQuestion": "who played obi wan kenobi in phantom menace",
      "Parses": [
        {
          "ParseId": "WebQTrn-2242.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q165713) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q165713 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51740 . } ",
          "PotentialTopicEntityMention": "phantom menace",
          "TopicEntityName": "Star Wars Episode I: The Phantom Menace",
          "TopicEntityMid": "m.0ddt_",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0fkm7",
              "EntityName": "Obi-Wan Kenobi",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k269",
              "EntityName": "Ewan McGregor"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2242.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0fkm7)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0fkm7 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0ddt_ .\n}\n",
          "PotentialTopicEntityMention": "obi wan kenobi",
          "TopicEntityName": "Obi-Wan Kenobi",
          "TopicEntityMid": "m.0fkm7",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0ddt_",
              "EntityName": "Star Wars Episode I: The Phantom Menace",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k269",
              "EntityName": "Ewan McGregor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2244",
      "RawQuestion": "where is luke bryan from?",
      "ProcessedQuestion": "where is luke bryan from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2244.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q166197) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q166197 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "luke bryan",
          "TopicEntityName": "Luke Bryan",
          "TopicEntityMid": "m.02vpng6",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rxrq",
              "EntityName": "Leesburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2245",
      "RawQuestion": "who invented facebook wikipedia?",
      "ProcessedQuestion": "who invented facebook wikipedia",
      "Parses": [
        {
          "ParseId": "WebQTrn-2245.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q380) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q380 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "facebook",
          "TopicEntityName": "Facebook, Inc.",
          "TopicEntityMid": "m.0hmyfsv",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.076zfg8",
              "EntityName": "Eduardo Saverin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.086dny",
              "EntityName": "Mark Zuckerberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cm9z65",
              "EntityName": "Andrew McCollum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8xb7",
              "EntityName": "Dustin Moskovitz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gh3lq",
              "EntityName": "Chris Hughes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2249",
      "RawQuestion": "where did captain james cook grow up?",
      "ProcessedQuestion": "where did captain james cook grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2249.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7324) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7324 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "captain james cook",
          "TopicEntityName": "James Cook",
          "TopicEntityMid": "m.03_j8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.045_cx",
              "EntityName": "Marton"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2251",
      "RawQuestion": "who wore the darth vader suit in revenge of the sith?",
      "ProcessedQuestion": "who wore the darth vader suit in revenge of the sith",
      "Parses": [
        {
          "ParseId": "WebQTrn-2251.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q42051) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q42051 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "revenge of the sith",
          "TopicEntityName": "Star Wars Episode III: Revenge of the Sith",
          "TopicEntityMid": "m.0fdv3",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f276",
              "EntityName": "Hayden Christensen"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2251.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0fdv3 .\n}\n",
          "PotentialTopicEntityMention": "darth vader",
          "TopicEntityName": "Darth Vader",
          "TopicEntityMid": "m.0f2y0",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0fdv3",
              "EntityName": "Star Wars Episode III: Revenge of the Sith",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f276",
              "EntityName": "Hayden Christensen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2253",
      "RawQuestion": "where is alex rodriguez from?",
      "ProcessedQuestion": "where is alex rodriguez from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2253.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q558664) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q558664 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "alex rodriguez",
          "TopicEntityName": "Alex Rodriguez",
          "TopicEntityMid": "m.01f492",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018z6h",
              "EntityName": "Washington Heights"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2256",
      "RawQuestion": "what happened to adolf hitler at the end of the war?",
      "ProcessedQuestion": "what happened to adolf hitler at the end of the war",
      "Parses": [
        {
          "ParseId": "WebQTrn-2256.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "adolf hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qnd1b",
              "EntityName": "Ballistic trauma"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06z5s",
              "EntityName": "Suicide"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2263",
      "RawQuestion": "what did sammy davis jr die of?",
      "ProcessedQuestion": "what did sammy davis jr die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-2263.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297816 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "sammy davis jr",
          "TopicEntityName": "Sammy Davis, Jr.",
          "TopicEntityMid": "m.01bmlb",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021plp",
              "EntityName": "Laryngeal cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.054rzc",
              "EntityName": "Complication"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2264",
      "RawQuestion": "what did anna nicole smith died from?",
      "ProcessedQuestion": "what did anna nicole smith died from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2264.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180710) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180710 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "anna nicole smith",
          "TopicEntityName": "Anna Nicole Smith",
          "TopicEntityMid": "m.0hwfl",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf_6",
              "EntityName": "Drug overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2265",
      "RawQuestion": "what country did francis drake explored for?",
      "ProcessedQuestion": "what country did francis drake explored for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2265.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? entailment"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36517) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36517 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "francis drake",
          "TopicEntityName": "Francis Drake",
          "TopicEntityMid": "m.031t2",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.024pcx",
              "EntityName": "Kingdom of England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2278",
      "RawQuestion": "where did ayn rand live?",
      "ProcessedQuestion": "where did ayn rand live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2278.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q132524) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q132524 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "ayn rand",
          "TopicEntityName": "Ayn Rand",
          "TopicEntityMid": "m.0h25",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06pr6",
              "EntityName": "Saint Petersburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2279",
      "RawQuestion": "when was the civil war in libya?",
      "ProcessedQuestion": "when was the civil war in libya",
      "Parses": [
        {
          "ParseId": "WebQTrn-2279.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81545) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81545 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "civil war in libya",
          "TopicEntityName": "Libyan Civil War",
          "TopicEntityMid": "m.0gfhg1y",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2011-02-15",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2282",
      "RawQuestion": "what influenced roy lichtenstein artwork?",
      "ProcessedQuestion": "what influenced roy lichtenstein artwork",
      "Parses": [
        {
          "ParseId": "WebQTrn-2282.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q151679) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q151679 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "roy lichtenstein",
          "TopicEntityName": "Roy Lichtenstein",
          "TopicEntityMid": "m.0gcgd",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01sj_s",
              "EntityName": "Robert Rauschenberg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04187y",
              "EntityName": "Allan Kaprow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gcjf",
              "EntityName": "Jasper Johns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2287",
      "RawQuestion": "where john tyler was born?",
      "ProcessedQuestion": "where john tyler was born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2287.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11881) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11881 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "john tyler",
          "TopicEntityName": "John Tyler",
          "TopicEntityMid": "m.042dk",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mp6c",
              "EntityName": "Charles City County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2289",
      "RawQuestion": "what place did thomas jefferson died?",
      "ProcessedQuestion": "what place did thomas jefferson died",
      "Parses": [
        {
          "ParseId": "WebQTrn-2289.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11812 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "thomas jefferson",
          "TopicEntityName": "Thomas Jefferson",
          "TopicEntityMid": "m.07cbs",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mp3l",
              "EntityName": "Charlottesville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2291",
      "RawQuestion": "what is the time zone in france?",
      "ProcessedQuestion": "what is the time zone in france",
      "Parses": [
        {
          "ParseId": "WebQTrn-2291.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q142) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q142 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "france",
          "TopicEntityName": "France",
          "TopicEntityMid": "m.0f8l9c",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02llzg",
              "EntityName": "Central European Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2293",
      "RawQuestion": "what county is lancaster ca located in?",
      "ProcessedQuestion": "what county is lancaster ca located in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2293.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q494711) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q494711 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "lancaster ca",
          "TopicEntityName": "Lancaster",
          "TopicEntityMid": "m.0r0jv",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kpys",
              "EntityName": "Los Angeles County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2293.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r0jv)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r0jv ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "lancaster ca",
          "TopicEntityName": "Lancaster",
          "TopicEntityMid": "m.0r0jv",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kpys",
              "EntityName": "Los Angeles County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2298",
      "RawQuestion": "what do michelle obama do for a living?",
      "ProcessedQuestion": "what do michelle obama do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2298.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q13133) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q13133 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "michelle obama",
          "TopicEntityName": "Michelle Obama",
          "TopicEntityMid": "m.025s5v9",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2303",
      "RawQuestion": "what is roshon fegan's heritage?",
      "ProcessedQuestion": "what is roshon fegan 's heritage",
      "Parses": [
        {
          "ParseId": "WebQTrn-2303.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q507999) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q507999 wdt:P172 ?x . } ",
          "PotentialTopicEntityMention": "roshon fegan",
          "TopicEntityName": "Roshon Fegan",
          "TopicEntityMid": "m.04jq2yz",
          "InferentialChain": [
            "people.person.ethnicity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x67",
              "EntityName": "African American"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2305",
      "RawQuestion": "what club does ronaldinho play for 2012?",
      "ProcessedQuestion": "what club does ronaldinho play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-2305.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q529207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q529207 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldo",
          "TopicEntityMid": "m.0hhqw",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2308",
      "RawQuestion": "who stars in the movie fred claus?",
      "ProcessedQuestion": "who stars in the movie fred claus",
      "Parses": [
        {
          "ParseId": "WebQTrn-2308.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1212854) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1212854 wdt:P161 ?y . ?y wdt:P161 ?x . } ",
          "PotentialTopicEntityMention": "fred claus",
          "TopicEntityName": "Fred Claus",
          "TopicEntityMid": "m.0kvf6s",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014x77",
              "EntityName": "Rachel Weisz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018yhr",
              "EntityName": "Stephen Baldwin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ppx3y",
              "EntityName": "Frank Stallone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vw37m",
              "EntityName": "Ludacris"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025_dd9",
              "EntityName": "Charlie Condou"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0272ndr",
              "EntityName": "Elizabeth Berrington"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kxwk",
              "EntityName": "Kathy Bates"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qh8t4",
              "EntityName": "Rusty Goffe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ws5y4",
              "EntityName": "Rio Hackford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0315q3",
              "EntityName": "Vince Vaughn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gh163",
              "EntityName": "William Dick"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gh16t",
              "EntityName": "Guy Massey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gh1q4",
              "EntityName": "Keith Kupferer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03xfbt",
              "EntityName": "Roger Clinton, Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03y9w53",
              "EntityName": "Jonathan Cullen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.048lv",
              "EntityName": "Kevin Spacey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051_j70",
              "EntityName": "Dylan Minnette"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0525b",
              "EntityName": "Miranda Richardson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063_8bk",
              "EntityName": "Liam James"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0716t2",
              "EntityName": "Elizabeth Banks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07kbjh6",
              "EntityName": "Ethan Cutkosky"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07y8l9",
              "EntityName": "John Michael Higgins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08w3r6",
              "EntityName": "Trevor Peacock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09gd973",
              "EntityName": "Jeremy Swift"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b1q7c",
              "EntityName": "Burn Gorman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bfm8zf",
              "EntityName": "Mike Bacarella"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bj704q",
              "EntityName": "Celia Henebury"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bj709x",
              "EntityName": "Angela Curran"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bv74_7",
              "EntityName": "Thomas Kosik"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bv74z0",
              "EntityName": "Suzy Brack"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bv74zd",
              "EntityName": "Joseph Mazurk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bv74zl",
              "EntityName": "Michelle Shields"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cz5jr",
              "EntityName": "Jeffrey Dean Morgan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dly00",
              "EntityName": "Danny McCarthy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f9pq6",
              "EntityName": "Allan Corduner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g3q_y",
              "EntityName": "Bobb'e J. Thompson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gbxgtc",
              "EntityName": "Gabriel Pimentel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gc007n",
              "EntityName": "Peter Bonner"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gc0pxm",
              "EntityName": "Jessica Cooper"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gc3743",
              "EntityName": "Nick Doetsch"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gcbf41",
              "EntityName": "Abi McKenzie"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gcjnj3",
              "EntityName": "Michael Cook"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gcjsml",
              "EntityName": "Tim Krueger"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gd2wd8",
              "EntityName": "Jean-Yves Thual"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gdkpjg",
              "EntityName": "Megan Renee Burgess"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gvqzsh",
              "EntityName": "Theo Stevenson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hh47jg",
              "EntityName": "Jay Disney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5d74k",
              "EntityName": "Craig J. Harris"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k22v_",
              "EntityName": "Orlando Seale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k3qlry",
              "EntityName": "Chad Meyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kdy2xn",
              "EntityName": "Leo McHugh Carroll"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n22hp9",
              "EntityName": "Bert Matias"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ngwnpv",
              "EntityName": "Evyenia Constantine"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pdswyx",
              "EntityName": "Vano Miranyan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r40qwl",
              "EntityName": "Patrick Zielinski"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0t_rc4s",
              "EntityName": "Tommy Bartlett"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tl2hpw",
              "EntityName": "Darlene Benigno"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tlcz16",
              "EntityName": "Joseph Lazicki"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tlhsth",
              "EntityName": "Amit Shah"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tlmpn5",
              "EntityName": "William Nero Jr."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v2dfl3",
              "EntityName": "Jason Abustan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v2gfpj",
              "EntityName": "Julia Copeland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v2hrt5",
              "EntityName": "Nick Ferrin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v4q56z",
              "EntityName": "Libby Pedersen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v4ql2k",
              "EntityName": "Marc Radz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0v4ynyp",
              "EntityName": "Peter McCabe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vt1_tf",
              "EntityName": "Claudia Michelle Wallace"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vtj3fw",
              "EntityName": "Tyler Kelley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vx15s6",
              "EntityName": "Joshua Zumhagen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vx433t",
              "EntityName": "Ernest Pierce"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vxdkkp",
              "EntityName": "Blayne Bennett"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vxxkyv",
              "EntityName": "Melody Hollis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0w2jkr9",
              "EntityName": "Adrian Turika"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y__b55",
              "EntityName": "Afiya Izmailova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y__tqn",
              "EntityName": "Anton Khardarkevich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_wytl",
              "EntityName": "Jorge Rodero"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_xlpl",
              "EntityName": "Michael Mbhele"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_yt24",
              "EntityName": "Tamara Aranovskaya"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_yynn",
              "EntityName": "Natalia Avraimova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_z2md",
              "EntityName": "Irina Cheplyshkina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y_z8q4",
              "EntityName": "Shamil Galeev"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y5545f",
              "EntityName": "Lynn Noelle"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y84k_g",
              "EntityName": "Ian Houghton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ynd6d4",
              "EntityName": "Isabella Murad"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ywk6h9",
              "EntityName": "Jordon Hull"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ywp0k2",
              "EntityName": "Allison Sparrow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ywpl5c",
              "EntityName": "Fred Zimmerman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yxc5r4",
              "EntityName": "Wesley Chu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yxd4_r",
              "EntityName": "Hassan Chikhaoui"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yz7bgn",
              "EntityName": "Vitalie Babara"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yz99jh",
              "EntityName": "Morgane Monjauze"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yzc0sy",
              "EntityName": "Justin Butler"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yzg7cn",
              "EntityName": "Justin McEwen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yzk10q",
              "EntityName": "Anne White"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z00ky1",
              "EntityName": "Zinaida Khardarkevich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z00yyd",
              "EntityName": "Viktor Kharur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z01f40",
              "EntityName": "Zinaida Kharuk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z020lf",
              "EntityName": "Tatyana Kutaleva"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z03lb6",
              "EntityName": "Tatiana Lakhmytkina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z04dmc",
              "EntityName": "Valentina Lipen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0517n",
              "EntityName": "Nadezda Miranova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z05dck",
              "EntityName": "Tetyana Moskalenko"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z06qxm",
              "EntityName": "Andriy Nagiyen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z085vz",
              "EntityName": "Firaya Nutfullina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0bk9n",
              "EntityName": "Alexander Pavlov"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0c0nh",
              "EntityName": "Tatiana Pavlova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0d8kn",
              "EntityName": "Antanina Satsura"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0dzk5",
              "EntityName": "Nadiia Shchava"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0f4xg",
              "EntityName": "Svetlana Shishkevich"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0fcbk",
              "EntityName": "Galina Shurygina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0ffly",
              "EntityName": "Irina Skripnichenko"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0fwhf",
              "EntityName": "Nina Sorokoletova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0g0rp",
              "EntityName": "Victor Sovpenets"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0g6h_",
              "EntityName": "Veronika Starostina"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0gmwy",
              "EntityName": "Inna Sushkova"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0h3m8",
              "EntityName": "Mykola Yevdokymov"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0hqqv",
              "EntityName": "Aleksey Zalatin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0jcf0",
              "EntityName": "Don Goodman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0jnc4",
              "EntityName": "Ramona Giambalvo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0jpvj",
              "EntityName": "Patrick Morris"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0kgzh",
              "EntityName": "Christ Kopoulos"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0kn8z",
              "EntityName": "Jeannette Francis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0lhrn",
              "EntityName": "Douglas Colber"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0lp7_",
              "EntityName": "Debra Congram"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0md82",
              "EntityName": "Robert H. Frenier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0mm5j",
              "EntityName": "Deanna Edgerson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0mz2y",
              "EntityName": "Johanna K. Hauki"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0nccl",
              "EntityName": "Beth Kondrat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0njfb",
              "EntityName": "Erich K. Kurschat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0np5c",
              "EntityName": "Anthony D. Potempa"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0nspt",
              "EntityName": "Paul E. Reineck"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0nxdk",
              "EntityName": "Julie Simms"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0p16k",
              "EntityName": "Tracy M. Snell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0p6jf",
              "EntityName": "Antinko Zanjelo Waddell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0p9cc",
              "EntityName": "Kiara Allyce Greene"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0qc4k",
              "EntityName": "Alexander Almaguer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0qnsm",
              "EntityName": "Lillian Almaguer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z0qv6h",
              "EntityName": "Amy Amir"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z22bwg",
              "EntityName": "John Biemeret"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0z7dgsw",
              "EntityName": "Steve Mikula"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zb1986",
              "EntityName": "Christopher James Casper"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zb1r36",
              "EntityName": "Shelby Howe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zb1t67",
              "EntityName": "Rob Lok"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zbdyz5",
              "EntityName": "Christopher Popio"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zbf0wf",
              "EntityName": "George Wood"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zbf1w7",
              "EntityName": "Max Zuppa"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zcbl",
              "EntityName": "Paul Giamatti"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2310",
      "RawQuestion": "where did madoff live?",
      "ProcessedQuestion": "where did madoff live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2310.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q14043) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q14043 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "madoff",
          "TopicEntityName": "Bernard Madoff",
          "TopicEntityMid": "m.051znky",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc56",
              "EntityName": "Manhattan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ccvx",
              "EntityName": "Queens"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f8l9c",
              "EntityName": "France"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rqf1",
              "EntityName": "Palm Beach"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y34j",
              "EntityName": "Roslyn"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y8vm",
              "EntityName": "Montauk"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2311",
      "RawQuestion": "what killed sammy davis jr?",
      "ProcessedQuestion": "what killed sammy davis jr",
      "Parses": [
        {
          "ParseId": "WebQTrn-2311.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297816 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "sammy davis jr",
          "TopicEntityName": "Sammy Davis, Jr.",
          "TopicEntityMid": "m.01bmlb",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021plp",
              "EntityName": "Laryngeal cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.054rzc",
              "EntityName": "Complication"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2316",
      "RawQuestion": "what influenced jackson pollock's work?",
      "ProcessedQuestion": "what influenced jackson pollock 's work",
      "Parses": [
        {
          "ParseId": "WebQTrn-2316.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37571 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "jackson pollock",
          "TopicEntityName": "Jackson Pollock",
          "TopicEntityMid": "m.04510",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ny1z",
              "EntityName": "Thomas Hart Benton"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gcyb",
              "EntityName": "Mark Tobey"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060_7",
              "EntityName": "Pablo Picasso"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bk5r",
              "EntityName": "Carl Jung"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bqb_",
              "EntityName": "Max Ernst"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c241_",
              "EntityName": "John D. Graham"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g_6k",
              "EntityName": "Joan Mir"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2324",
      "RawQuestion": "what team did joe hart play for before man city?",
      "ProcessedQuestion": "what team did joe hart play for before man city",
      "Parses": [
        {
          "ParseId": "WebQTrn-2324.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date comparison. Original comment: F before"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { filter(?x != wd:Q50602) wd:Q187184 wdt:P54 ?z . ?z wdt:P54 wd:Q50602 . #man city ?z wdt:P580 ?from . wd:Q187184 wdt:P54 ?y . ?y wdt:P54 ?x . ?y  wdt:P582 ?to . FILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0) } ORDER BY Desc(xsd:datetime(?from)) LIMIT 1",
          "PotentialTopicEntityMention": "joe hart",
          "TopicEntityName": "Joe Hart",
          "TopicEntityMid": "m.07kp8n",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02b1l_",
              "EntityName": "Shrewsbury Town F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2326",
      "RawQuestion": "what team did doug williams play for?",
      "ProcessedQuestion": "what team did doug williams play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2326.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q951164) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q951164 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "doug williams",
          "TopicEntityName": "Doug Williams",
          "TopicEntityMid": "m.0443ql",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n_xh",
              "EntityName": "Arizona Outlaws"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l24",
              "EntityName": "Tampa Bay Buccaneers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084l5",
              "EntityName": "Washington Redskins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gj8lsd",
              "EntityName": "Grambling State Tigers football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2330",
      "RawQuestion": "what degree did martin luther king get?",
      "ProcessedQuestion": "what degree did martin luther king get",
      "Parses": [
        {
          "ParseId": "WebQTrn-2330.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P512 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.degree"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014mlp",
              "EntityName": "Bachelor of Arts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04zx3q1",
              "EntityName": "PhD"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05vjnk",
              "EntityName": "Bachelor of Divinity"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.079h0",
              "EntityName": "Secondary education"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2331",
      "RawQuestion": "what type of music did vivaldi write?",
      "ProcessedQuestion": "what type of music did vivaldi write",
      "Parses": [
        {
          "ParseId": "WebQTrn-2331.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1340) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1340 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "vivaldi",
          "TopicEntityName": "Antonio Vivaldi",
          "TopicEntityMid": "m.0pth",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fsz",
              "EntityName": "Baroque music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggq0m",
              "EntityName": "Classical music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2334",
      "RawQuestion": "who is cameron crowe?",
      "ProcessedQuestion": "who is cameron crowe",
      "Parses": [
        {
          "ParseId": "WebQTrn-2334.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q318287) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q318287 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "cameron crowe",
          "TopicEntityName": "Cameron Crowe",
          "TopicEntityMid": "m.01vb6z",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6676",
              "EntityName": "Editor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2339",
      "RawQuestion": "what does tim gunn do for a living?",
      "ProcessedQuestion": "what does tim gunn do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2339.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q978646) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q978646 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "tim gunn",
          "TopicEntityName": "Tim Gunn",
          "TopicEntityMid": "m.0bslxh",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02n9jv",
              "EntityName": "Consultant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2340",
      "RawQuestion": "what was eli whitney job?",
      "ProcessedQuestion": "what was eli whitney job",
      "Parses": [
        {
          "ParseId": "WebQTrn-2340.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q280930) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q280930 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "eli whitney",
          "TopicEntityName": "Eli Whitney",
          "TopicEntityMid": "m.02ncr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09j9h",
              "EntityName": "Engineer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2351",
      "RawQuestion": "where was governor cuomo born?",
      "ProcessedQuestion": "where was governor cuomo born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2351.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11673) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11673 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "cuomo",
          "TopicEntityName": "Andrew Cuomo",
          "TopicEntityMid": "m.02pjpd",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ccvx",
              "EntityName": "Queens"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2351.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01pl7g)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01pl7g ns:people.person.place_of_birth ?x .\n}\n",
          "PotentialTopicEntityMention": "cuomo",
          "TopicEntityName": "Mario Cuomo",
          "TopicEntityMid": "m.01pl7g",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02sts9",
              "EntityName": "Briarwood"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2357",
      "RawQuestion": "who was leonardo da vinci teacher?",
      "ProcessedQuestion": "who was leonardo da vinci teacher",
      "Parses": [
        {
          "ParseId": "WebQTrn-2357.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q762) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q762 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "leonardo da vinci",
          "TopicEntityName": "Leonardo da Vinci",
          "TopicEntityMid": "m.04lg6",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01fgbq",
              "EntityName": "Andrea del Verrocchio"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04qj5",
              "EntityName": "Lorenzo de' Medici"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f87z0",
              "EntityName": "John Argyropoulos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2359",
      "RawQuestion": "where did thomas jefferson died?",
      "ProcessedQuestion": "where did thomas jefferson died",
      "Parses": [
        {
          "ParseId": "WebQTrn-2359.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11812 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "thomas jefferson",
          "TopicEntityName": "Thomas Jefferson",
          "TopicEntityMid": "m.07cbs",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mp3l",
              "EntityName": "Charlottesville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2360",
      "RawQuestion": "what football teams did emmitt smith play for?",
      "ProcessedQuestion": "what football teams did emmitt smith play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2360.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1338802) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1338802 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "emmitt smith",
          "TopicEntityName": "Emmitt Smith",
          "TopicEntityMid": "m.01480y",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02896",
              "EntityName": "Dallas Cowboys"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ftf0f",
              "EntityName": "Florida Gators football"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ws7",
              "EntityName": "Arizona Cardinals"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2367",
      "RawQuestion": "what did emily bronte died of?",
      "ProcessedQuestion": "what did emily bronte died of",
      "Parses": [
        {
          "ParseId": "WebQTrn-2367.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q80137) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q80137 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "emily bronte",
          "TopicEntityName": "Emily Brontë",
          "TopicEntityMid": "m.02nzw",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2369",
      "RawQuestion": "what country is george washington carver from?",
      "ProcessedQuestion": "what country is george washington carver from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2369.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296898) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296898 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "george washington carver",
          "TopicEntityName": "George Washington Carver",
          "TopicEntityMid": "m.03djm",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2375",
      "RawQuestion": "what time zone is birmingham england?",
      "ProcessedQuestion": "what time zone is birmingham england",
      "Parses": [
        {
          "ParseId": "WebQTrn-2375.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2256) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2256 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "birmingham",
          "TopicEntityName": "Birmingham",
          "TopicEntityMid": "m.0k33p",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04q01dj",
              "EntityName": "British Summer Time"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2376",
      "RawQuestion": "what does andy warhol do?",
      "ProcessedQuestion": "what does andy warhol do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2376.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5603) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5603 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "andy warhol",
          "TopicEntityName": "Andy Warhol",
          "TopicEntityMid": "m.0kc6",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020xn5",
              "EntityName": "Illustrator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nxqmh",
              "EntityName": "Painter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03hz6vv",
              "EntityName": "Visual Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qsdp2",
              "EntityName": "Printmaker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b7b55p",
              "EntityName": "Sculptor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dgd_",
              "EntityName": "Cinematographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lgw7",
              "EntityName": "Photographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2380",
      "RawQuestion": "where was karl marx buried?",
      "ProcessedQuestion": "where was karl marx buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-2380.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9061) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9061 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "karl marx",
          "TopicEntityName": "Karl Marx",
          "TopicEntityMid": "m.048cl",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j70p",
              "EntityName": "Highgate Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2382",
      "RawQuestion": "what timezone is nevada in right now?",
      "ProcessedQuestion": "what timezone is nevada in right now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2382.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1227) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1227 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "nevada",
          "TopicEntityName": "Nevada",
          "TopicEntityMid": "m.059_c",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2383",
      "RawQuestion": "what team did deion sanders play for in baseball?",
      "ProcessedQuestion": "what team did deion sanders play for in baseball",
      "Parses": [
        {
          "ParseId": "WebQTrn-2383.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q954184) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q954184 wdt:P54 ?y . ?y wdt:P54 ?x . ?x wdt:P641 wd:Q5369 . } ",
          "PotentialTopicEntityMention": "deion sanders",
          "TopicEntityName": "Deion Sanders",
          "TopicEntityMid": "m.03n69x",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.018jz",
              "EntityName": "Baseball",
              "SourceNodeIndex": 1,
              "NodePredicate": "sports.sports_team.sport",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ypc",
              "EntityName": "Cincinnati Reds"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047b4rl",
              "EntityName": "Florida State Seminoles baseball"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0713r",
              "EntityName": "San Francisco Giants"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cqt41",
              "EntityName": "New York Yankees"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0x2p",
              "EntityName": "Atlanta Braves"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2384",
      "RawQuestion": "what did dr carter g woodson do?",
      "ProcessedQuestion": "what did dr carter g woodson do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2384.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5047158) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5047158 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "carter g woodson",
          "TopicEntityName": "Carter G. Woodson",
          "TopicEntityMid": "m.042w00",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03jgz",
              "EntityName": "Historian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2385",
      "RawQuestion": "who invented the ford motor company?",
      "ProcessedQuestion": "who invented the ford motor company",
      "Parses": [
        {
          "ParseId": "WebQTrn-2385.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44294) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44294 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "ford motor company",
          "TopicEntityName": "Ford Motor Company",
          "TopicEntityMid": "m.02zs4",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gxm",
              "EntityName": "Henry Ford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2386",
      "RawQuestion": "what is ayrton senna?",
      "ProcessedQuestion": "what is ayrton senna",
      "Parses": [
        {
          "ParseId": "WebQTrn-2386.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q10490) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q10490 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ayrton senna",
          "TopicEntityName": "Ayrton Senna",
          "TopicEntityMid": "m.012pxw",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nn_",
              "EntityName": "Race car driver"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2387",
      "RawQuestion": "where was stephen g. breyer born?",
      "ProcessedQuestion": "where was stephen g. breyer born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2387.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11124) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11124 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "stephen g . breyer",
          "TopicEntityName": "Stephen Breyer",
          "TopicEntityMid": "m.016m0v",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6lp",
              "EntityName": "San Francisco"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2389",
      "RawQuestion": "what did charles dickens believe in?",
      "ProcessedQuestion": "what did charles dickens believe in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2389.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5686) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5686 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "charles dickens",
          "TopicEntityName": "Charles Dickens",
          "TopicEntityMid": "m.01v9724",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n2g",
              "EntityName": "Anglicanism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2391",
      "RawQuestion": "what religion is sammy davis jr?",
      "ProcessedQuestion": "what religion is sammy davis jr",
      "Parses": [
        {
          "ParseId": "WebQTrn-2391.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297816 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "sammy davis jr",
          "TopicEntityName": "Sammy Davis, Jr.",
          "TopicEntityMid": "m.01bmlb",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_gx",
              "EntityName": "Judaism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2394",
      "RawQuestion": "in what timezone is arizona?",
      "ProcessedQuestion": "in what timezone is arizona",
      "Parses": [
        {
          "ParseId": "WebQTrn-2394.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q816 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "arizona",
          "TopicEntityName": "Arizona",
          "TopicEntityMid": "m.0vmt",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2398",
      "RawQuestion": "where was jesus born and raised?",
      "ProcessedQuestion": "where was jesus born and raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-2398.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q302) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q302 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jesus",
          "TopicEntityName": "Jesus Christ",
          "TopicEntityMid": "m.045m1_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065sh7",
              "EntityName": "Judea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2400",
      "RawQuestion": "who portrayed indiana jones in raiders of the lost ark?",
      "ProcessedQuestion": "who portrayed indiana jones in raiders of the lost ark",
      "Parses": [
        {
          "ParseId": "WebQTrn-2400.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q174284) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q174284 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q148659 . } ",
          "PotentialTopicEntityMention": "indiana jones",
          "TopicEntityName": "Indiana Jones and the Raiders of the Lost Ark",
          "TopicEntityMid": "m.0f4yh",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03ttl",
              "EntityName": "Indiana Jones",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c0k1",
              "EntityName": "Harrison Ford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2409",
      "RawQuestion": "where did antoine laurent lavoisier die?",
      "ProcessedQuestion": "where did antoine laurent lavoisier die",
      "Parses": [
        {
          "ParseId": "WebQTrn-2409.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39607) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39607 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "antoine laurent lavoisier",
          "TopicEntityName": "Antoine Lavoisier",
          "TopicEntityMid": "m.0tfw",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kx9d",
              "EntityName": "Place de la Concorde"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2417",
      "RawQuestion": "who does northern ireland belong to?",
      "ProcessedQuestion": "who does northern ireland belong to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2417.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "northern ireland",
          "TopicEntityName": "Northern Ireland",
          "TopicEntityMid": "m.05bcl",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2417.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bcl ns:base.biblioness.bibs_location.country ?x .\n}\n",
          "PotentialTopicEntityMention": "northern ireland",
          "TopicEntityName": "Northern Ireland",
          "TopicEntityMid": "m.05bcl",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2417.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bcl ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "northern ireland",
          "TopicEntityName": "Northern Ireland",
          "TopicEntityMid": "m.05bcl",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2417.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.05bcl)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.05bcl ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "northern ireland",
          "TopicEntityName": "Northern Ireland",
          "TopicEntityMid": "m.05bcl",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2418",
      "RawQuestion": "who does allen iverson play for now 2010?",
      "ProcessedQuestion": "who does allen iverson play for now 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-2418.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190094) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190094 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "allen iverson",
          "TopicEntityName": "Allen Iverson",
          "TopicEntityMid": "m.01sg7_",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm4v",
              "EntityName": "Philadelphia 76ers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2428",
      "RawQuestion": "who is john garcia?",
      "ProcessedQuestion": "who is john garcia",
      "Parses": [
        {
          "ParseId": "WebQTrn-2428.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q918849) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q918849 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "john garcia",
          "TopicEntityName": "John Garcia",
          "TopicEntityMid": "m.03_lpf",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2432",
      "RawQuestion": "what did lbj die of?",
      "ProcessedQuestion": "what did lbj die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-2432.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9640) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9640 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "lbj",
          "TopicEntityName": "Lyndon B. Johnson",
          "TopicEntityMid": "m.0f7fy",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2435",
      "RawQuestion": "what does george soros believe?",
      "ProcessedQuestion": "what does george soros believe",
      "Parses": [
        {
          "ParseId": "WebQTrn-2435.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q12908) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q12908 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "george soros",
          "TopicEntityName": "George Soros",
          "TopicEntityMid": "m.0gyk6w",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_gx",
              "EntityName": "Judaism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kpl",
              "EntityName": "Atheism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2437",
      "RawQuestion": "who was sam houston answers?",
      "ProcessedQuestion": "who was sam houston answers",
      "Parses": [
        {
          "ParseId": "WebQTrn-2437.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q216547) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q216547 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "sam houston",
          "TopicEntityName": "Sam Houston",
          "TopicEntityMid": "m.0gbjz",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012qdp",
              "EntityName": "Military Officer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.099md",
              "EntityName": "Soldier"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2439",
      "RawQuestion": "who did kevin garnett play for before celtics?",
      "ProcessedQuestion": "who did kevin garnett play for before celtics",
      "Parses": [
        {
          "ParseId": "WebQTrn-2439.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F before. Original comment: F before"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { filter(?x != wd:Q131371) wd:Q189240 wdt:P54 ?z . ?z wdt:P54 wd:Q131371 . #Celtics ?z wdt:P580 ?from . wd:Q189240 wdt:P54 ?y . ?y wdt:P54 ?x . ?y  wdt:P582 ?to . FILTER (xsd:dateTime(?from) - xsd:dateTime(?to) >= 0) } ORDER BY Desc(xsd:datetime(?from)) LIMIT 1",
          "PotentialTopicEntityMention": "kevin garnett",
          "TopicEntityName": "Kevin Garnett",
          "TopicEntityMid": "m.02lm0t",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmgb",
              "EntityName": "Minnesota Timberwolves"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2444",
      "RawQuestion": "where is st louis cardinals stadium?",
      "ProcessedQuestion": "where is st louis cardinals stadium",
      "Parses": [
        {
          "ParseId": "WebQTrn-2444.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q504309) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q504309 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "st louis cardinals",
          "TopicEntityName": "St. Louis Cardinals",
          "TopicEntityMid": "m.06x68",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06k1v5",
              "EntityName": "Busch Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2446",
      "RawQuestion": "where does manny pacquiao live?",
      "ProcessedQuestion": "where does manny pacquiao live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2446.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q486359) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q486359 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "manny pacquiao",
          "TopicEntityName": "Manny Pacquiao",
          "TopicEntityMid": "m.03pmbb",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01rfwg",
              "EntityName": "South Cotabato"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03fyt0",
              "EntityName": "Kiamba"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2447",
      "RawQuestion": "when were the duggar kids born?",
      "ProcessedQuestion": "when were the duggar kids born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2447.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F linking hard. Original comment: F need one more hop to \"Date of Birth\""
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE { wd:Q6193704 wdt:P40 ?z . ?z wdt:P569 ?x . }",
          "PotentialTopicEntityMention": "duggar",
          "TopicEntityName": "Jim Bob Duggar",
          "TopicEntityMid": "m.089twl",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1988-03-03",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1990-01-12",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1991-05-17",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1992-11-04",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1993-12-21",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1995-01-20",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1996-08-28",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1997-10-28",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "1998-12-30",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2000-04-21",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2001-07-07",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2002-11-15",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2004-05-23",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2005-10-11",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2007-08-02",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2008-12-18",
              "EntityName": null
            },
            {
              "AnswerType": "Value",
              "AnswerArgument": "2009-12-10",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2448",
      "RawQuestion": "where did pharaoh hatshepsut live?",
      "ProcessedQuestion": "where did pharaoh hatshepsut live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2448.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? probably wants a city."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q129234) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q129234 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "pharaoh hatshepsut",
          "TopicEntityName": "Hatshepsut",
          "TopicEntityMid": "m.0gj3r",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k54",
              "EntityName": "Egypt"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2451",
      "RawQuestion": "who does sam bradford play for?",
      "ProcessedQuestion": "who does sam bradford play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2451.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q714292) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q714292 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sam bradford",
          "TopicEntityName": "Sam Bradford",
          "TopicEntityMid": "m.02qjht0",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06x76",
              "EntityName": "St. Louis Rams"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2453",
      "RawQuestion": "what county is plymouth ia in?",
      "ProcessedQuestion": "what county is plymouth ia in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2453.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1927378) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1927378 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "plymouth ia",
          "TopicEntityName": "Plymouth",
          "TopicEntityMid": "m.0sswj",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nsfl",
              "EntityName": "Cerro Gordo County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2455",
      "RawQuestion": "what school did kurt vonnegut go to?",
      "ProcessedQuestion": "what school did kurt vonnegut go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2455.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49074) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49074 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "kurt vonnegut",
          "TopicEntityName": "Kurt Vonnegut",
          "TopicEntityMid": "m.049gc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qgr3",
              "EntityName": "University of Tennessee"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w3v",
              "EntityName": "Cornell University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q2x61",
              "EntityName": "Shortridge High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bnd9",
              "EntityName": "Butler University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07wrz",
              "EntityName": "University of Chicago"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cwx_",
              "EntityName": "Carnegie Mellon University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2457",
      "RawQuestion": "where did henry hudson come from?",
      "ProcessedQuestion": "where did henry hudson come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2457.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q179167) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q179167 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "henry hudson",
          "TopicEntityName": "Henry Hudson",
          "TopicEntityMid": "m.0c065",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2464",
      "RawQuestion": "what school did michael jordan go to?",
      "ProcessedQuestion": "what school did michael jordan go to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2464.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41421) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41421 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "michael jordan",
          "TopicEntityName": "Michael Jordan",
          "TopicEntityMid": "m.054c1",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07qymj",
              "EntityName": "Emsley A. Laney High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bx8pn",
              "EntityName": "University of North Carolina at Chapel Hill"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2466",
      "RawQuestion": "where is reggie bush from?",
      "ProcessedQuestion": "where is reggie bush from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2466.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q555271) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q555271 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "reggie bush",
          "TopicEntityName": "Reggie Bush",
          "TopicEntityMid": "m.05cb70",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r57n",
              "EntityName": "Spring Valley"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2473",
      "RawQuestion": "what is mexico city time zone?",
      "ProcessedQuestion": "what is mexico city time zone",
      "Parses": [
        {
          "ParseId": "WebQTrn-2473.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1489) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1489 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "mexico city",
          "TopicEntityName": "Mexico City",
          "TopicEntityMid": "m.04sqj",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2475",
      "RawQuestion": "who plays jacob black in the twilight movies?",
      "ProcessedQuestion": "who plays jacob black in the twilight movies",
      "Parses": [
        {
          "ParseId": "WebQTrn-2475.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q160071) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q160071 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q716835 . } ",
          "PotentialTopicEntityMention": "twilight movies",
          "TopicEntityName": "Twilight",
          "TopicEntityMid": "m.03nm_fh",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02qd_td",
              "EntityName": "Jacob Black",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ldhs",
              "EntityName": "Taylor Lautner"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2479",
      "RawQuestion": "where does honda play soccer?",
      "ProcessedQuestion": "where does honda play soccer",
      "Parses": [
        {
          "ParseId": "WebQTrn-2479.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q202054) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q202054 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "honda",
          "TopicEntityName": "Keisuke Honda",
          "TopicEntityMid": "m.03gsj06",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011v3",
              "EntityName": "A.C. Milan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03xh50",
              "EntityName": "Japan national football team"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2480",
      "RawQuestion": "what time zone is ontario toronto?",
      "ProcessedQuestion": "what time zone is ontario toronto",
      "Parses": [
        {
          "ParseId": "WebQTrn-2480.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q172) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q172 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "toronto",
          "TopicEntityName": "Toronto",
          "TopicEntityMid": "m.0h7h6",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2483",
      "RawQuestion": "where does the shannon river end?",
      "ProcessedQuestion": "where does the shannon river end",
      "Parses": [
        {
          "ParseId": "WebQTrn-2483.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192820) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192820 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "shannon river",
          "TopicEntityName": "River Shannon",
          "TopicEntityMid": "m.0m_dt",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02py6xf",
              "EntityName": "Shannon Estuary"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2486",
      "RawQuestion": "what university did donald trump graduate from?",
      "ProcessedQuestion": "what university did donald trump graduate from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2486.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q22686) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q22686 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q787674 . } ",
          "PotentialTopicEntityMention": "donald trump",
          "TopicEntityName": "Donald Trump",
          "TopicEntityMid": "m.0cqt90",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02h4rq6",
              "EntityName": "Bachelor of Science",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jtp7",
              "EntityName": "Wharton School of the University of Pennsylvania"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2487",
      "RawQuestion": "what drug did mitch hedberg overdose on?",
      "ProcessedQuestion": "what drug did mitch hedberg overdose on",
      "Parses": [
        {
          "ParseId": "WebQTrn-2487.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2314865) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2314865 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "mitch hedberg",
          "TopicEntityName": "Mitch Hedberg",
          "TopicEntityMid": "m.02vzgl",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kp1qn",
              "EntityName": "Heroin overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2494",
      "RawQuestion": "where did roger moore live?",
      "ProcessedQuestion": "where did roger moore live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2494.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q134333) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q134333 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "roger moore",
          "TopicEntityName": "Roger Moore",
          "TopicEntityMid": "m.017lqp",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jpl",
              "EntityName": "London"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.062m9r",
              "EntityName": "Holsworthy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nc84",
              "EntityName": "Stockwell"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2499",
      "RawQuestion": "who did plaxico burress sign with 2012?",
      "ProcessedQuestion": "who did plaxico burress sign with 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-2499.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1379303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1379303 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "plaxico burress",
          "TopicEntityName": "Plaxico Burress",
          "TopicEntityMid": "m.047j_j",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tfm",
              "EntityName": "Pittsburgh Steelers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2504",
      "RawQuestion": "where did carmen electra grow up?",
      "ProcessedQuestion": "where did carmen electra grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2504.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q185122) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q185122 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "carmen electra",
          "TopicEntityName": "Carmen Electra",
          "TopicEntityMid": "m.01lbp",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013jdh",
              "EntityName": "Sharonville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2509",
      "RawQuestion": "where did robert hooke get his education?",
      "ProcessedQuestion": "where did robert hooke get his education",
      "Parses": [
        {
          "ParseId": "WebQTrn-2509.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q46830) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q46830 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "robert hooke",
          "TopicEntityName": "Robert Hooke",
          "TopicEntityMid": "m.0d6j4",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01722w",
              "EntityName": "Westminster School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tgn",
              "EntityName": "University of Oxford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yls9",
              "EntityName": "Christ Church, Oxford"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ymff",
              "EntityName": "Wadham College, Oxford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2514",
      "RawQuestion": "what time is kansas in?",
      "ProcessedQuestion": "what time is kansas in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2514.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1558) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1558 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "kansas",
          "TopicEntityName": "Kansas",
          "TopicEntityMid": "m.0488g",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2515",
      "RawQuestion": "what time is in san diego california?",
      "ProcessedQuestion": "what time is in san diego california",
      "Parses": [
        {
          "ParseId": "WebQTrn-2515.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16552) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16552 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "san diego california",
          "TopicEntityName": "San Diego",
          "TopicEntityMid": "m.071vr",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2520",
      "RawQuestion": "what was gregor mendel known for?",
      "ProcessedQuestion": "what was gregor mendel known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2520.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37970) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37970 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "gregor mendel",
          "TopicEntityName": "Gregor Mendel",
          "TopicEntityMid": "m.039c5",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0266rh",
              "EntityName": "Monk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p1f",
              "EntityName": "Botanist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2526",
      "RawQuestion": "what is the zip code for cordova tn?",
      "ProcessedQuestion": "what is the zip code for cordova tn",
      "Parses": [
        {
          "ParseId": "WebQTrn-2526.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5170040) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5170040 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "cordova tn",
          "TopicEntityName": "Cordova",
          "TopicEntityMid": "m.07j5_n",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dxntr",
              "EntityName": "38018"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq_8m",
              "EntityName": "38088"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq_c7",
              "EntityName": "38016"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2529",
      "RawQuestion": "when did tom brady join the patriots?",
      "ProcessedQuestion": "when did tom brady join the patriots",
      "Parses": [
        {
          "ParseId": "WebQTrn-2529.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313381) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313381 wdt:P54 ?y . ?y wdt:P580 ?x . ?y wdt:P54 wd:Q193390 . } ",
          "PotentialTopicEntityMention": "tom brady",
          "TopicEntityName": "Tom Brady",
          "TopicEntityMid": "m.01xyt7",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.from"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05g3b",
              "EntityName": "New England Patriots",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.team",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2000",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2530",
      "RawQuestion": "what is isaac newton famous for?",
      "ProcessedQuestion": "what is isaac newton famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2530.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q935) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q935 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "isaac newton",
          "TopicEntityName": "Isaac Newton",
          "TopicEntityMid": "m.03s9v",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01pxg",
              "EntityName": "Chemist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2533",
      "RawQuestion": "where did barack obama went to school?",
      "ProcessedQuestion": "where did barack obama went to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2533.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2539",
      "RawQuestion": "what team did albert pujols play for?",
      "ProcessedQuestion": "what team did albert pujols play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2539.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? assuming \"teams\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q148726) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q148726 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "albert pujols",
          "TopicEntityName": "Albert Pujols",
          "TopicEntityMid": "m.035gcb",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04wmvz",
              "EntityName": "Los Angeles Angels of Anaheim"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06x68",
              "EntityName": "St. Louis Cardinals"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f3wm2",
              "EntityName": "Scottsdale Scorpions"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2540",
      "RawQuestion": "what inspired monet?",
      "ProcessedQuestion": "what inspired monet",
      "Parses": [
        {
          "ParseId": "WebQTrn-2540.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "monet",
          "TopicEntityName": "Claude Monet",
          "TopicEntityMid": "m.01xnj",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016s03",
              "EntityName": "Eugène Delacroix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dqt1",
              "EntityName": "Gustave Courbet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0233w",
              "EntityName": "Camille Pissarro"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03fw00",
              "EntityName": "Eugène Boudin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06466",
              "EntityName": "Pierre-Auguste Renoir"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.074ck",
              "EntityName": "Stéphane Mallarmé"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kzxl",
              "EntityName": "Charles-François Daubigny"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2542",
      "RawQuestion": "where does kaka live?",
      "ProcessedQuestion": "where does kaka live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2542.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q531814) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q531814 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kaka",
          "TopicEntityName": "Kaká",
          "TopicEntityMid": "m.04qv66",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01hy_",
              "EntityName": "Brasília"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mxlfq",
              "EntityName": "Gama, Federal District"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2545",
      "RawQuestion": "where does the oklahoma city thunder practice?",
      "ProcessedQuestion": "where does the oklahoma city thunder practice",
      "Parses": [
        {
          "ParseId": "WebQTrn-2545.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q180950) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q180950 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "oklahoma city thunder",
          "TopicEntityName": "Oklahoma City Thunder",
          "TopicEntityMid": "m.04cxw5b",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05p8g6",
              "EntityName": "Chesapeake Energy Arena"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2550",
      "RawQuestion": "what nationality is jermaine paul?",
      "ProcessedQuestion": "what nationality is jermaine paul",
      "Parses": [
        {
          "ParseId": "WebQTrn-2550.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6182356) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6182356 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "jermaine paul",
          "TopicEntityName": "Jermaine Paul",
          "TopicEntityMid": "m.02rxpxn",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2560",
      "RawQuestion": "what is the actual current local time now in uk?",
      "ProcessedQuestion": "what is the actual current local time now in uk",
      "Parses": [
        {
          "ParseId": "WebQTrn-2560.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "uk",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2561",
      "RawQuestion": "what are some of the awards taylor swift has won?",
      "ProcessedQuestion": "what are some of the awards taylor swift has won",
      "Parses": [
        {
          "ParseId": "WebQTrn-2561.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26876) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26876 wdt:P166 ?y . ?y wdt:P166 ?x . } ",
          "PotentialTopicEntityMention": "taylor swift",
          "TopicEntityName": "Taylor Swift",
          "TopicEntityMid": "m.0dl567",
          "InferentialChain": [
            "award.award_winner.awards_won",
            "award.award_honor.award"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_vmfsz",
              "EntityName": "Radio Disney Music Award for Best Musical Collaboration"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011lffxx",
              "EntityName": "Teen Choice Award for Choice Music - Country Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01by1l",
              "EntityName": "Grammy Award for Album of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c9f2",
              "EntityName": "Grammy Award for Best Country Album"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dk00",
              "EntityName": "Grammy Award for Best Country Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025m8l",
              "EntityName": "Grammy Award for Best Song Written for Visual Media"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026m9w",
              "EntityName": "Grammy Award for Best Female Country Vocal Performance"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02f6ym",
              "EntityName": "MTV Video Music Award for Best Female Video"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dxjjz",
              "EntityName": "Billboard Music Award for Top Billboard 200 Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04dy0sf",
              "EntityName": "People's Choice Award for Favorite Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fnq6m",
              "EntityName": "Country Music Association Horizon Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fnq79",
              "EntityName": "Country Music Association Award for Female Vocalist of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kfv8x",
              "EntityName": "Academy of Country Music Award for Album of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kfvnc",
              "EntityName": "Academy of Country Music Award for Entertainer of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05kfvsx",
              "EntityName": "Academy of Country Music Award for New Female Vocalist of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07_506c",
              "EntityName": "MTV Europe Music Award for Best Female"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07_52dv",
              "EntityName": "MTV Europe Music Award for Best Live Act"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08clnvk",
              "EntityName": "Academy of Country Music Award for Video of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09qd02_",
              "EntityName": "Billboard Music Award for Top Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cjw69",
              "EntityName": "American Music Award for Favorite Pop/Rock Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ckh35",
              "EntityName": "American Music Award for Favorite Country Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ckh7c",
              "EntityName": "American Music Award for Favorite Adult Contemporary Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f4w04",
              "EntityName": "American Music Award for Favorite Country Album"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gj6x00",
              "EntityName": "Teen Choice Award for Choice Movie Breakout Star - Female"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gky9c6",
              "EntityName": "Grammy Award for Best Country Solo Performance"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hj9kq4",
              "EntityName": "People's Choice Award for Favorite Country Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8y__n",
              "EntityName": "Billboard Music Award for Top Country Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8ythh",
              "EntityName": "Billboard Music Award for Top Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8yxq6",
              "EntityName": "Billboard Music Award for Top Digital Songs Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8z2r3",
              "EntityName": "Billboard Music Award for Top Billboard 200 Album"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j8zcw2",
              "EntityName": "Billboard Music Award for Top Country Album"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j912gy",
              "EntityName": "Billboard Music Award for Top Country Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k0811w",
              "EntityName": "Country Music Association Award for Album of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k081n1",
              "EntityName": "Country Music Association Award for Musical Event of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0k081qv",
              "EntityName": "Country Music Association Award for Music Video of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n57zzs",
              "EntityName": "American Music Award for Artist of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n9z4f7",
              "EntityName": "Country Music Association Award for Entertainer of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh4rr_",
              "EntityName": "Kids' Choice Award for Favorite Female Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0sgkrty",
              "EntityName": "Kids' Choice Award for Favorite Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0sgkvz4",
              "EntityName": "Kids’ Choice Big Help Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0whp1hc",
              "EntityName": "Teen Choice Award for Choice Music - Female Country Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0whp2_z",
              "EntityName": "Teen Choice Award for Choice Music - Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0whp5hq",
              "EntityName": "Teen Choice Award for Choice Break-Up Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0whp9zh",
              "EntityName": "Teen Choice Award for Choice Single: Female Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wzyn4z",
              "EntityName": "MTV Europe Music Award for Best Look"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4ppv1",
              "EntityName": "Radio Disney Music Award for Best Breakup Song"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4r26d",
              "EntityName": "Radio Disney Music Award for Song of the Year"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y554rz",
              "EntityName": "Young Hollywood Award for Superstar of Tomorrow"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y87xxx",
              "EntityName": "YouTube Music Awards YouTube Phenomenon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yqdf3d",
              "EntityName": "Glamour Award for International Solo Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yszmsf",
              "EntityName": "Teen Choice Award for Choice Movie: Voice"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yszn3z",
              "EntityName": "Teen Choice Special Award — Ultimate Choice Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yt47m8",
              "EntityName": "Teen Choice Award for Choice Red Carpet Fashion Icon Female"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yt7tc6",
              "EntityName": "Teen Choice Award for Choice Music: Breakout Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ytbnfc",
              "EntityName": "Teen Choice Award for Choice Music: Album Country"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0yvqhv_",
              "EntityName": "Country Music Association Pinnacle Award"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0zmx3ly",
              "EntityName": "Billboard Music Award for Woman of the Year"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2563",
      "RawQuestion": "where did chris cuomo go?",
      "ProcessedQuestion": "where did chris cuomo go",
      "Parses": [
        {
          "ParseId": "WebQTrn-2563.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? I chose educational institution for the meaning of \"go\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11673) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11673 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "cuomo",
          "TopicEntityName": "Andrew Cuomo",
          "TopicEntityMid": "m.02pjpd",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027kp3",
              "EntityName": "Fordham University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.037sbn",
              "EntityName": "Archbishop Molloy High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08qs09",
              "EntityName": "Albany Law School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2564",
      "RawQuestion": "where did gary coleman live when he died?",
      "ProcessedQuestion": "where did gary coleman live when he died",
      "Parses": [
        {
          "ParseId": "WebQTrn-2564.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? PLACE of death rather than place he lived when he died."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313367) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313367 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "gary coleman",
          "TopicEntityName": "Gary Coleman",
          "TopicEntityMid": "m.036pg",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l39b",
              "EntityName": "Provo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2567",
      "RawQuestion": "where was ronald reagan born and raised?",
      "ProcessedQuestion": "where was ronald reagan born and raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-2567.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9960) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9960 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "ronald reagan",
          "TopicEntityName": "Ronald Reagan",
          "TopicEntityMid": "m.06c0j",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0sj7b",
              "EntityName": "Tampico"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2568",
      "RawQuestion": "what county is morristown tn in?",
      "ProcessedQuestion": "what county is morristown tn in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2568.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q962499) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q962499 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "morristown",
          "TopicEntityName": "Morristown",
          "TopicEntityMid": "m.0xr0t",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n5c9",
              "EntityName": "Morris County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2568.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0xr0t)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0xr0t ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "morristown",
          "TopicEntityName": "Morristown",
          "TopicEntityMid": "m.0xr0t",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n5c9",
              "EntityName": "Morris County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2569",
      "RawQuestion": "where do the houston rockets play basketball?",
      "ProcessedQuestion": "where do the houston rockets play basketball",
      "Parses": [
        {
          "ParseId": "WebQTrn-2569.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q161345) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q161345 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "houston rockets",
          "TopicEntityName": "Houston Rockets",
          "TopicEntityMid": "m.0jmfb",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tx3t",
              "EntityName": "Toyota Center"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01txlf",
              "EntityName": "Lakewood Church Central Campus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2570",
      "RawQuestion": "who was the president of the united states during ww2?",
      "ProcessedQuestion": "who was the president of the united states during ww2",
      "Parses": [
        {
          "ParseId": "WebQTrn-2570.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: F Date range join. Original comment: F Nested"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE {   wd:Q362 wdt:P580 ?start ;              wdt:P582 ?end .   ?x wdt:P39  ?y .   ?y wdt:P39 wd:Q11696 ; # President of the United States      wdt:P580  ?from ;      wdt:P582  ?to .   FILTER (?from < ?end)   FILTER (?to > ?start) }",
          "PotentialTopicEntityMention": "ww2",
          "TopicEntityName": "World War II",
          "TopicEntityMid": "m.081pw",
          "InferentialChain": null,
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yy8",
              "EntityName": "Franklin D. Roosevelt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09bg4l",
              "EntityName": "Harry S. Truman"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2579",
      "RawQuestion": "what did alvin smith died from?",
      "ProcessedQuestion": "what did alvin smith died from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2579.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4738229) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4738229 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "alvin smith",
          "TopicEntityName": "Alvin Smith",
          "TopicEntityMid": "m.0261tkp",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dh11",
              "EntityName": "Poison"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2581",
      "RawQuestion": "who has tim howard played for?",
      "ProcessedQuestion": "who has tim howard played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2581.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q200785) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q200785 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "tim howard",
          "TopicEntityName": "Tim Howard",
          "TopicEntityMid": "m.026s3n",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02s9vc",
              "EntityName": "United States men's national soccer team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04q30l",
              "EntityName": "North Jersey Imperials"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.050fh",
              "EntityName": "Manchester United F.C."
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bxjpy",
              "EntityName": "New York Red Bulls"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mmd6",
              "EntityName": "Everton F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2590",
      "RawQuestion": "what instrument does ringo starr play?",
      "ProcessedQuestion": "what instrument does ringo starr play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2590.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2632) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2632 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "ringo starr",
          "TopicEntityName": "Ringo Starr",
          "TopicEntityMid": "m.01vrnsk",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013y1f",
              "EntityName": "Organ"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wy6",
              "EntityName": "Clarinet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026t6",
              "EntityName": "Drums"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fsn",
              "EntityName": "Double bass"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hnl",
              "EntityName": "Drums"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qjg",
              "EntityName": "Harmonica"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04rzd",
              "EntityName": "Mandolin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05148p4",
              "EntityName": "Keyboard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ncr",
              "EntityName": "Saxophone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07m2y",
              "EntityName": "Tuba"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l14j_",
              "EntityName": "Flute"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l14md",
              "EntityName": "Percussion"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2596",
      "RawQuestion": "what happened to president james garfield?",
      "ProcessedQuestion": "what happened to president james garfield",
      "Parses": [
        {
          "ParseId": "WebQTrn-2596.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34597) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34597 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "james garfield",
          "TopicEntityName": "James A. Garfield",
          "TopicEntityMid": "m.0b22w",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014w_8",
              "EntityName": "Sepsis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gk4g",
              "EntityName": "heart attack"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2597",
      "RawQuestion": "what time zone am i in missouri?",
      "ProcessedQuestion": "what time zone am i in missouri",
      "Parses": [
        {
          "ParseId": "WebQTrn-2597.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1581) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1581 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "missouri",
          "TopicEntityName": "Missouri",
          "TopicEntityMid": "m.04ych",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2601",
      "RawQuestion": "who did warren moon play for?",
      "ProcessedQuestion": "who did warren moon play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2601.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q126710) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q126710 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "warren moon",
          "TopicEntityName": "Warren Moon",
          "TopicEntityMid": "m.01b0dl",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0487_",
              "EntityName": "Kansas City Chiefs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04nmxtk",
              "EntityName": "Houston Oilers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051q5",
              "EntityName": "Minnesota Vikings"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.070xg",
              "EntityName": "Seattle Seahawks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fgg8c",
              "EntityName": "Washington Huskies football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2605",
      "RawQuestion": "in what town did ned kelly and his family grow up?",
      "ProcessedQuestion": "in what town did ned kelly and his family grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2605.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? possibly union question."
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q301816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q301816 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "ned kelly",
          "TopicEntityName": "Ned Kelly",
          "TopicEntityMid": "m.014pyb",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08mh4_",
              "EntityName": "Beveridge"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2610",
      "RawQuestion": "who influenced arthur conan doyle?",
      "ProcessedQuestion": "who influenced arthur conan doyle",
      "Parses": [
        {
          "ParseId": "WebQTrn-2610.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35610) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35610 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "arthur conan doyle",
          "TopicEntityName": "Arthur Conan Doyle",
          "TopicEntityMid": "m.0ky1",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01bdvj",
              "EntityName": "Joseph Bell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lt8",
              "EntityName": "Edgar Allan Poe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04093",
              "EntityName": "Jules Verne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06lbp",
              "EntityName": "Robert Louis Stevenson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y8v",
              "EntityName": "Walter Scott"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06zjbx",
              "EntityName": "Ibn-e-Safi"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2611",
      "RawQuestion": "when was samuel pepys?",
      "ProcessedQuestion": "when was samuel pepys",
      "Parses": [
        {
          "ParseId": "WebQTrn-2611.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q106143) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q106143 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "samuel pepys",
          "TopicEntityName": "Samuel Pepys",
          "TopicEntityMid": "m.06xxc",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07ssc",
              "EntityName": "United Kingdom"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d05w3",
              "EntityName": "China"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2615",
      "RawQuestion": "what instrument does fela kuti play?",
      "ProcessedQuestion": "what instrument does fela kuti play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2615.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313868) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313868 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "fela kuti",
          "TopicEntityName": "Fela Kuti",
          "TopicEntityMid": "m.01tw0t",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hnl",
              "EntityName": "Drums"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05148p4",
              "EntityName": "Keyboard"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06ncr",
              "EntityName": "Saxophone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2618",
      "RawQuestion": "where did woodrow wilson go to school?",
      "ProcessedQuestion": "where did woodrow wilson go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2618.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34296) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34296 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "woodrow wilson",
          "TopicEntityName": "Woodrow Wilson",
          "TopicEntityMid": "m.083q7",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02pdhz",
              "EntityName": "Davidson College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qgd9",
              "EntityName": "University of Virginia School of Law"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zl0",
              "EntityName": "Princeton University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09kvv",
              "EntityName": "Johns Hopkins University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2626",
      "RawQuestion": "where did tennessee williams live?",
      "ProcessedQuestion": "where did tennessee williams live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2626.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q134262) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q134262 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "tennessee williams",
          "TopicEntityName": "Tennessee Williams",
          "TopicEntityMid": "m.0c4y8",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04tgp",
              "EntityName": "Mississippi"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06wxw",
              "EntityName": "St. Louis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2tj",
              "EntityName": "New Orleans"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wptj",
              "EntityName": "Clarksdale"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wqzb",
              "EntityName": "Columbus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2627",
      "RawQuestion": "what was king louis xiv religion?",
      "ProcessedQuestion": "what was king louis xiv religion",
      "Parses": [
        {
          "ParseId": "WebQTrn-2627.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7742) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7742 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "king louis xiv",
          "TopicEntityName": "Louis XIV of France",
          "TopicEntityMid": "m.04pwg",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c8wxp",
              "EntityName": "Catholicism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2633",
      "RawQuestion": "who juan ponce de leon?",
      "ProcessedQuestion": "who juan ponce de leon",
      "Parses": [
        {
          "ParseId": "WebQTrn-2633.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q185974) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q185974 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "juan ponce de leon",
          "TopicEntityName": "Juan Ponce de León",
          "TopicEntityMid": "m.0123f1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040vc4s",
              "EntityName": "Explorer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2637",
      "RawQuestion": "where did the loma prieta earthquake occur?",
      "ProcessedQuestion": "where did the loma prieta earthquake occur",
      "Parses": [
        {
          "ParseId": "WebQTrn-2637.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1053476) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1053476 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "loma prieta earthquake",
          "TopicEntityName": "1989 Loma Prieta earthquake",
          "TopicEntityMid": "m.01mv1y",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06pvr",
              "EntityName": "San Francisco Bay Area"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2639",
      "RawQuestion": "what is time zone in new orleans?",
      "ProcessedQuestion": "what is time zone in new orleans",
      "Parses": [
        {
          "ParseId": "WebQTrn-2639.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34404) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34404 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "new orleans",
          "TopicEntityName": "New Orleans",
          "TopicEntityMid": "m.0f2tj",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2641",
      "RawQuestion": "where did helen keller die?",
      "ProcessedQuestion": "where did helen keller die",
      "Parses": [
        {
          "ParseId": "WebQTrn-2641.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38203) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38203 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "helen keller",
          "TopicEntityName": "Helen Keller",
          "TopicEntityMid": "m.03ppx",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rd55",
              "EntityName": "Easton"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2646",
      "RawQuestion": "where did johann sebastian bach live?",
      "ProcessedQuestion": "where did johann sebastian bach live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2646.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1339) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1339 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "johann sebastian bach",
          "TopicEntityName": "Johann Sebastian Bach",
          "TopicEntityMid": "m.03_f0",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0135kl",
              "EntityName": "Lüneburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01scv0",
              "EntityName": "Köthen (Anhalt)"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047sq2",
              "EntityName": "Mühlhausen"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kf4",
              "EntityName": "Leipzig"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04pwrt",
              "EntityName": "Arnstadt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064_v2",
              "EntityName": "Ohrdruf"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cpyv",
              "EntityName": "Weimar"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g8gq",
              "EntityName": "Eisenach"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2648",
      "RawQuestion": "what timezone is malaysia?",
      "ProcessedQuestion": "what timezone is malaysia",
      "Parses": [
        {
          "ParseId": "WebQTrn-2648.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q833) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q833 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "malaysia",
          "TopicEntityName": "Malaysia",
          "TopicEntityMid": "m.09pmkv",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ch2v5",
              "EntityName": "Malaysia Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2649",
      "RawQuestion": "where is alex smith from?",
      "ProcessedQuestion": "where is alex smith from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2649.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q717897) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q717897 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "alex smith",
          "TopicEntityName": "Alex Smith",
          "TopicEntityMid": "m.05dfhp",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010rvx",
              "EntityName": "Bremerton"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2650",
      "RawQuestion": "where was alice walker born?",
      "ProcessedQuestion": "where was alice walker born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2650.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215868) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215868 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "alice walker",
          "TopicEntityName": "Alice Walker",
          "TopicEntityMid": "m.0bv70",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0frf_",
              "EntityName": "Putnam County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2661",
      "RawQuestion": "who created the character of sherlock holmes?",
      "ProcessedQuestion": "who created the character of sherlock holmes",
      "Parses": [
        {
          "ParseId": "WebQTrn-2661.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4653) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4653 wdt:P170 ?x . } ",
          "PotentialTopicEntityMention": "sherlock holmes",
          "TopicEntityName": "Sherlock Holmes",
          "TopicEntityMid": "m.06rkl",
          "InferentialChain": [
            "fictional_universe.fictional_character.character_created_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ky1",
              "EntityName": "Arthur Conan Doyle"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2675",
      "RawQuestion": "what country was william shakespeare born?",
      "ProcessedQuestion": "what country was william shakespeare born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2675.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "william shakespeare",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g251",
              "EntityName": "Stratford-upon-Avon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2679",
      "RawQuestion": "what is my timezone in california?",
      "ProcessedQuestion": "what is my timezone in california",
      "Parses": [
        {
          "ParseId": "WebQTrn-2679.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q99) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q99 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "california",
          "TopicEntityName": "California",
          "TopicEntityMid": "m.01n7q",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2680",
      "RawQuestion": "what is president abraham lincoln known for?",
      "ProcessedQuestion": "what is president abraham lincoln known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2680.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q91) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q91 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "abraham lincoln",
          "TopicEntityName": "Abraham Lincoln",
          "TopicEntityMid": "m.0gzh",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2683",
      "RawQuestion": "what year did the vietnam war happen?",
      "ProcessedQuestion": "what year did the vietnam war happen",
      "Parses": [
        {
          "ParseId": "WebQTrn-2683.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8740) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8740 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "vietnam war",
          "TopicEntityName": "Vietnam War",
          "TopicEntityMid": "m.07_nf",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1955-11-01",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2684",
      "RawQuestion": "where do the broncos play?",
      "ProcessedQuestion": "where do the broncos play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2684.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q223507) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q223507 wdt:P115 ?x . ?x wdt:P1619 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "broncos",
          "TopicEntityName": "Denver Broncos",
          "TopicEntityMid": "m.0289q",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "architecture.structure.opened",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hxv8",
              "EntityName": "Sports Authority Field at Mile High"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2689",
      "RawQuestion": "who started up mcdonalds?",
      "ProcessedQuestion": "who started up mcdonalds",
      "Parses": [
        {
          "ParseId": "WebQTrn-2689.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q38076) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q38076 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "mcdonalds",
          "TopicEntityName": "McDonald's",
          "TopicEntityMid": "m.07gyp7",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01n4dv",
              "EntityName": "Ray Kroc"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wf57dc",
              "EntityName": "Richard McDonald"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wf5829",
              "EntityName": "Maurice McDonald"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2703",
      "RawQuestion": "what did thoreau die from?",
      "ProcessedQuestion": "what did thoreau die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2703.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131149) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131149 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "thoreau",
          "TopicEntityName": "Henry David Thoreau",
          "TopicEntityMid": "m.0bwx3",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2719",
      "RawQuestion": "what did robin gibb died from?",
      "ProcessedQuestion": "what did robin gibb died from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2719.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188482) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188482 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "robin gibb",
          "TopicEntityName": "Robin Gibb",
          "TopicEntityMid": "m.0137hn",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01dcqj",
              "EntityName": "Colorectal cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m3vr6",
              "EntityName": "Liver cancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dq9p",
              "EntityName": "Pneumonia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2723",
      "RawQuestion": "what job does bill rancic have?",
      "ProcessedQuestion": "what job does bill rancic have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2723.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q339702) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q339702 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "bill rancic",
          "TopicEntityName": "Bill Rancic",
          "TopicEntityMid": "m.02skv6",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2731",
      "RawQuestion": "who won 2011 heisman trophy?",
      "ProcessedQuestion": "who won 2011 heisman trophy",
      "Parses": [
        {
          "ParseId": "WebQTrn-2731.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1035067) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1035067 wdt:P1346 ?y . ?y wdt:P1346 ?x . FILTER(NOT EXISTS {?y wdt:P585 ?sk0} ||  EXISTS {?y wdt:P585 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P585 ?sk2} ||  EXISTS {?y wdt:P585 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "heisman trophy",
          "TopicEntityName": "Heisman Trophy",
          "TopicEntityMid": "m.01q9mk",
          "InferentialChain": [
            "award.award_category.winners",
            "award.award_honor.award_winner"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051wcwn",
              "EntityName": "Robert Griffin III"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2751",
      "RawQuestion": "where was tupac born?",
      "ProcessedQuestion": "where was tupac born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2751.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6107) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6107 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tupac",
          "TopicEntityName": "Tupac Shakur",
          "TopicEntityMid": "m.07pzc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cx_2",
              "EntityName": "East Harlem"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2753",
      "RawQuestion": "what utc time zone is arizona?",
      "ProcessedQuestion": "what utc time zone is arizona",
      "Parses": [
        {
          "ParseId": "WebQTrn-2753.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q816 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "arizona",
          "TopicEntityName": "Arizona",
          "TopicEntityMid": "m.0vmt",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2759",
      "RawQuestion": "what times is it in texas?",
      "ProcessedQuestion": "what times is it in texas",
      "Parses": [
        {
          "ParseId": "WebQTrn-2759.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1439) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1439 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "texas",
          "TopicEntityName": "Texas",
          "TopicEntityMid": "m.07b_l",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2760",
      "RawQuestion": "where did the arizona diamondbacks play?",
      "ProcessedQuestion": "where did the arizona diamondbacks play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2760.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q670376) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q670376 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "arizona diamondbacks",
          "TopicEntityName": "Arizona Diamondbacks",
          "TopicEntityMid": "m.0x0d",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k879",
              "EntityName": "Chase Field"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2761",
      "RawQuestion": "what did fred davis do?",
      "ProcessedQuestion": "what did fred davis do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2761.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q584174) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q584174 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "fred davis",
          "TopicEntityName": "Fred Davis",
          "TopicEntityMid": "m.02rhm_l",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h665k",
              "EntityName": "American football player"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2762",
      "RawQuestion": "what country was theodor schwann born in?",
      "ProcessedQuestion": "what country was theodor schwann born in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2762.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76745) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76745 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "theodor schwann",
          "TopicEntityName": "Theodor Schwann",
          "TopicEntityMid": "m.040000",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025697",
              "EntityName": "Neuss"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2764",
      "RawQuestion": "what country was bin laden from?",
      "ProcessedQuestion": "what country was bin laden from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2764.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1317 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "bin laden",
          "TopicEntityName": "Osama bin Laden",
          "TopicEntityMid": "m.05mg9",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z215",
              "EntityName": "Saudi Arabia"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2766",
      "RawQuestion": "where did darfur happen?",
      "ProcessedQuestion": "where did darfur happen",
      "Parses": [
        {
          "ParseId": "WebQTrn-2766.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? \"Darfur\" -> \"War in Darfur\", the specific location where this even started"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190758) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190758 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "darfur",
          "TopicEntityName": "War in Darfur",
          "TopicEntityMid": "m.0d07gg",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vtml",
              "EntityName": "Darfur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2773",
      "RawQuestion": "what was henry ford best known for?",
      "ProcessedQuestion": "what was henry ford best known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2773.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8768) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8768 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "henry ford",
          "TopicEntityName": "Henry Ford",
          "TopicEntityMid": "m.03gxm",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025spv",
              "EntityName": "Business magnate"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nc9",
              "EntityName": "Industrialist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09j9h",
              "EntityName": "Engineer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2774",
      "RawQuestion": "what kind of music did michael jackson sing?",
      "ProcessedQuestion": "what kind of music did michael jackson sing",
      "Parses": [
        {
          "ParseId": "WebQTrn-2774.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021_z5",
              "EntityName": "New jack swing"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sc50",
              "EntityName": "Contemporary R&B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026z9",
              "EntityName": "Disco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bqnt",
              "EntityName": "Motown Sound"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lkt",
              "EntityName": "Electronic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lnbg",
              "EntityName": "Dance-pop"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vjzr",
              "EntityName": "Adult contemporary music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02x8m",
              "EntityName": "Funk"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03c34yl",
              "EntityName": "Post-disco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06j6l",
              "EntityName": "Rhythm and blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggx5q",
              "EntityName": "Dance music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gywn",
              "EntityName": "Soul music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2775",
      "RawQuestion": "what education does jeff corwin have?",
      "ProcessedQuestion": "what education does jeff corwin have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2775.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q770523) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q770523 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jeff corwin",
          "TopicEntityName": "Jeff Corwin",
          "TopicEntityMid": "m.03xsv3",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ky7c",
              "EntityName": "University of Massachusetts Amherst"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02r7zpz",
              "EntityName": "Norwell High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.035p0k",
              "EntityName": "Bridgewater State University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2777",
      "RawQuestion": "where the queen of denmark lives?",
      "ProcessedQuestion": "where the queen of denmark lives",
      "Parses": [
        {
          "ParseId": "WebQTrn-2777.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? do we assume this first hop being done by the entity linker is okay?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q102139) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q102139 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "the queen of denmark",
          "TopicEntityName": "Margrethe II of Denmark",
          "TopicEntityMid": "m.0g2kv",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lfy",
              "EntityName": "Copenhagen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2779",
      "RawQuestion": "who was the real erin brockovich?",
      "ProcessedQuestion": "who was the real erin brockovich",
      "Parses": [
        {
          "ParseId": "WebQTrn-2779.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q232019) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q232019 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "erin brockovich",
          "TopicEntityName": "Erin Brockovich",
          "TopicEntityMid": "m.02nxk",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jbr2",
              "EntityName": "Paralegal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02n9jv",
              "EntityName": "Consultant"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07s467s",
              "EntityName": "Environmentalist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2781",
      "RawQuestion": "what county is troy il in?",
      "ProcessedQuestion": "what county is troy il in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2781.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q575457) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q575457 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "troy il",
          "TopicEntityName": "Troy",
          "TopicEntityMid": "m.0sch1",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nv99",
              "EntityName": "Madison County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2782",
      "RawQuestion": "what position does mitt romney hold?",
      "ProcessedQuestion": "what position does mitt romney hold",
      "Parses": [
        {
          "ParseId": "WebQTrn-2782.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "mitt romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lk31",
              "EntityName": "Governor of Massachusetts"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2790",
      "RawQuestion": "what clubs has messi played for?",
      "ProcessedQuestion": "what clubs has messi played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2790.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q615) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q615 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "messi",
          "TopicEntityName": "Lionel Messi",
          "TopicEntityMid": "m.06qjgc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0276tq4",
              "EntityName": "FC Barcelona C"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02bh_v",
              "EntityName": "Argentina national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.096cw_",
              "EntityName": "FC Barcelona B"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hvgt",
              "EntityName": "FC Barcelona"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2796",
      "RawQuestion": "what is tim tebow's religion?",
      "ProcessedQuestion": "what is tim tebow 's religion",
      "Parses": [
        {
          "ParseId": "WebQTrn-2796.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q517467) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q517467 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "tim tebow",
          "TopicEntityName": "Tim Tebow",
          "TopicEntityMid": "m.0g7km1",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lp8",
              "EntityName": "Christianity"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2799",
      "RawQuestion": "what does anderson cooper do?",
      "ProcessedQuestion": "what does anderson cooper do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2799.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q316997) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q316997 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "anderson cooper",
          "TopicEntityName": "Anderson Cooper",
          "TopicEntityMid": "m.02z14n",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d8qb",
              "EntityName": "Journalist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2801",
      "RawQuestion": "who is ellen bernstein?",
      "ProcessedQuestion": "who is ellen bernstein",
      "Parses": [
        {
          "ParseId": "WebQTrn-2801.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q211144) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q211144 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ellen bernstein",
          "TopicEntityName": "Ellen Burstyn",
          "TopicEntityMid": "m.019f2f",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0377kt",
              "EntityName": "Minister"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2805",
      "RawQuestion": "what kind of education did barack obama have?",
      "ProcessedQuestion": "what kind of education did barack obama have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2805.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2807",
      "RawQuestion": "what did james k polk believe in?",
      "ProcessedQuestion": "what did james k polk believe in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2807.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11891) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11891 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "james k polk",
          "TopicEntityName": "James K. Polk",
          "TopicEntityMid": "m.042f1",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051kv",
              "EntityName": "Methodism"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0631_",
              "EntityName": "Presbyterianism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2809",
      "RawQuestion": "where did jerome david salinger died?",
      "ProcessedQuestion": "where did jerome david salinger died",
      "Parses": [
        {
          "ParseId": "WebQTrn-2809.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q79904) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q79904 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jerome david salinger",
          "TopicEntityName": "J. D. Salinger",
          "TopicEntityMid": "m.041_y",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0xk73",
              "EntityName": "Cornish"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2815",
      "RawQuestion": "where was john f kennedy raised?",
      "ProcessedQuestion": "where was john f kennedy raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-2815.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "john f kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0p9z5",
              "EntityName": "Brookline"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2820",
      "RawQuestion": "what did roger sherman do for a living?",
      "ProcessedQuestion": "what did roger sherman do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2820.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q354721) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q354721 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "roger sherman",
          "TopicEntityName": "Roger Sherman",
          "TopicEntityMid": "m.01mp_3",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04gc2",
              "EntityName": "Lawyer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2826",
      "RawQuestion": "where does eddie bravo teach?",
      "ProcessedQuestion": "where does eddie bravo teach",
      "Parses": [
        {
          "ParseId": "WebQTrn-2826.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? teaching place = living place?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5335870) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5335870 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "eddie bravo",
          "TopicEntityName": "Eddie Bravo",
          "TopicEntityMid": "m.08rm_x",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jbrr",
              "EntityName": "Santa Ana"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2828",
      "RawQuestion": "where does sally pearson live?",
      "ProcessedQuestion": "where does sally pearson live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2828.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6026) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6026 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "sally pearson",
          "TopicEntityName": "Sally Pearson",
          "TopicEntityMid": "m.0287hgn",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g4g7",
              "EntityName": "Gold Coast"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2830",
      "RawQuestion": "where is madeira?",
      "ProcessedQuestion": "where is madeira",
      "Parses": [
        {
          "ParseId": "WebQTrn-2830.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26253) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26253 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "madeira",
          "TopicEntityName": "Madeira",
          "TopicEntityMid": "m.04_z1",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r4w",
              "EntityName": "Portugal"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2830.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_z1 ns:location.administrative_division.country ?x .\n}\n",
          "PotentialTopicEntityMention": "madeira",
          "TopicEntityName": "Madeira",
          "TopicEntityMid": "m.04_z1",
          "InferentialChain": [
            "location.administrative_division.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r4w",
              "EntityName": "Portugal"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2830.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_z1 ns:location.administrative_division.first_level_division_of ?x .\n}\n",
          "PotentialTopicEntityMention": "madeira",
          "TopicEntityName": "Madeira",
          "TopicEntityMid": "m.04_z1",
          "InferentialChain": [
            "location.administrative_division.first_level_division_of"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r4w",
              "EntityName": "Portugal"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2830.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04_z1)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04_z1 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "madeira",
          "TopicEntityName": "Madeira",
          "TopicEntityMid": "m.04_z1",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04g96mg",
              "EntityName": "Azores Canaries Madeira"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r4w",
              "EntityName": "Portugal"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j_kh1k",
              "EntityName": "Madeira Islands archipelago"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j3b",
              "EntityName": "Atlantic Ocean"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2831",
      "RawQuestion": "what country is joseph prince from?",
      "ProcessedQuestion": "what country is joseph prince from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2831.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q531145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q531145 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "joseph prince",
          "TopicEntityName": "Joseph Prince",
          "TopicEntityMid": "m.02rjg1g",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06t2t",
              "EntityName": "Singapore"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2840",
      "RawQuestion": "where is christina aguilera from?",
      "ProcessedQuestion": "where is christina aguilera from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2840.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41594) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41594 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "christina aguilera",
          "TopicEntityName": "Christina Aguilera",
          "TopicEntityMid": "m.0127s7",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y62n",
              "EntityName": "Staten Island"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2842",
      "RawQuestion": "who does david carr play for?",
      "ProcessedQuestion": "who does david carr play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2842.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q669059) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q669059 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "david carr",
          "TopicEntityName": "David Carr",
          "TopicEntityMid": "m.03hs89",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2843",
      "RawQuestion": "where did jackie robinson go to school?",
      "ProcessedQuestion": "where did jackie robinson go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-2843.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221048) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221048 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "jackie robinson",
          "TopicEntityName": "Jackie Robinson",
          "TopicEntityMid": "m.0443c",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02gn8s",
              "EntityName": "Pasadena City College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0769_zc",
              "EntityName": "Washington Middle School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084wvj",
              "EntityName": "John Muir High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09f2j",
              "EntityName": "University of California, Los Angeles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2847",
      "RawQuestion": "when did sanchez leave usc?",
      "ProcessedQuestion": "when did sanchez leave usc",
      "Parses": [
        {
          "ParseId": "WebQTrn-2847.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q946184) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q946184 wdt:P54 ?y . ?y wdt:P582 ?x . ?y wdt:P54 wd:Q7866357 . } ",
          "PotentialTopicEntityMention": "sanchez",
          "TopicEntityName": "Mark Sanchez",
          "TopicEntityMid": "m.0ctxdn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.to"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.07k53y",
              "EntityName": "USC Trojans football",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.team",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2008",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2849",
      "RawQuestion": "where was f scott fitzgerald education?",
      "ProcessedQuestion": "where was f scott fitzgerald education",
      "Parses": [
        {
          "ParseId": "WebQTrn-2849.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q93354) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q93354 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "f scott fitzgerald",
          "TopicEntityName": "F. Scott Fitzgerald",
          "TopicEntityMid": "m.02zjd",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.023pj6",
              "EntityName": "St. Paul Academy and Summit School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zl0",
              "EntityName": "Princeton University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fh_my",
              "EntityName": "Nardin Academy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2859",
      "RawQuestion": "who is francis bacon and what did he do?",
      "ProcessedQuestion": "who is francis bacon and what did he do",
      "Parses": [
        {
          "ParseId": "WebQTrn-2859.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37388) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37388 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "francis bacon",
          "TopicEntityName": "Francis Bacon",
          "TopicEntityMid": "m.030dr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "g.125_hzb47",
              "EntityName": "Spy"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6fbs",
              "EntityName": "Philosopher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2862",
      "RawQuestion": "what is the postcode for seoul south korea?",
      "ProcessedQuestion": "what is the postcode for seoul south korea",
      "Parses": [
        {
          "ParseId": "WebQTrn-2862.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8684) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8684 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "seoul",
          "TopicEntityName": "Seoul",
          "TopicEntityMid": "m.0hsqf",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cvrg0c",
              "EntityName": "139-799"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2868",
      "RawQuestion": "what team did mike piazza retire with?",
      "ProcessedQuestion": "what team did mike piazza retire with",
      "Parses": [
        {
          "ParseId": "WebQTrn-2868.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q613319) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q613319 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P582 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "mike piazza",
          "TopicEntityName": "Mike Piazza",
          "TopicEntityMid": "m.018zm2",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04mjl",
              "EntityName": "Los Angeles Dodgers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2870",
      "RawQuestion": "where did robert boyle study?",
      "ProcessedQuestion": "where did robert boyle study",
      "Parses": [
        {
          "ParseId": "WebQTrn-2870.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q43393) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q43393 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "robert boyle",
          "TopicEntityName": "Robert Boyle",
          "TopicEntityMid": "m.0d98m",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzbl",
              "EntityName": "Eton College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ymf1",
              "EntityName": "University College, Oxford"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2873",
      "RawQuestion": "where does hector camacho live?",
      "ProcessedQuestion": "where does hector camacho live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2873.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q114355) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q114355 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "hector camacho",
          "TopicEntityName": "Héctor Camacho",
          "TopicEntityMid": "m.0lxcw",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cc56",
              "EntityName": "Manhattan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l_0q",
              "EntityName": "Bayamón"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2876",
      "RawQuestion": "where does fabio aurelio play?",
      "ProcessedQuestion": "where does fabio aurelio play",
      "Parses": [
        {
          "ParseId": "WebQTrn-2876.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q216910) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q216910 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "fabio aurelio",
          "TopicEntityName": "Fábio Aurélio",
          "TopicEntityMid": "m.0cpdl2",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019m51",
              "EntityName": "Grêmio Foot-Ball Porto Alegrense"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2878",
      "RawQuestion": "where does danny ainge live?",
      "ProcessedQuestion": "where does danny ainge live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2878.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q918347) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q918347 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "danny ainge",
          "TopicEntityName": "Danny Ainge",
          "TopicEntityMid": "m.0219kb",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01m2s0",
              "EntityName": "Wellesley"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02mf7",
              "EntityName": "Eugene"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2880",
      "RawQuestion": "where was anne frank born?",
      "ProcessedQuestion": "where was anne frank born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2880.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4583) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4583 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "anne frank",
          "TopicEntityName": "Anne Frank",
          "TopicEntityMid": "m.03d9rk",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02z0j",
              "EntityName": "Frankfurt"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2900",
      "RawQuestion": "what timezone is minnesota in?",
      "ProcessedQuestion": "what timezone is minnesota in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2900.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1527) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1527 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "minnesota",
          "TopicEntityName": "Minnesota",
          "TopicEntityMid": "m.04ykg",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2904",
      "RawQuestion": "where did lauren conrad live?",
      "ProcessedQuestion": "where did lauren conrad live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2904.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q230169) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q230169 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "lauren conrad",
          "TopicEntityName": "Lauren Conrad",
          "TopicEntityMid": "m.0dq9wx",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6lp",
              "EntityName": "San Francisco"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0r2gj",
              "EntityName": "Laguna Beach"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2912",
      "RawQuestion": "what is ryan seacrest famous for?",
      "ProcessedQuestion": "what is ryan seacrest famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2912.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q299266) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q299266 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ryan seacrest",
          "TopicEntityName": "Ryan Seacrest",
          "TopicEntityMid": "m.02b9g4",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08z956",
              "EntityName": "Radio personality"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2919",
      "RawQuestion": "what time zone is maryville tn?",
      "ProcessedQuestion": "what time zone is maryville tn",
      "Parses": [
        {
          "ParseId": "WebQTrn-2919.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1094500) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1094500 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "maryville tn",
          "TopicEntityName": "Maryville",
          "TopicEntityMid": "m.0_swz",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2920",
      "RawQuestion": "where does frida kahlo live now?",
      "ProcessedQuestion": "where does frida kahlo live now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2920.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5588) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5588 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "frida kahlo",
          "TopicEntityName": "Frida Kahlo",
          "TopicEntityMid": "m.015k04",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "now"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01t8n4",
              "EntityName": "Coyoacán"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04sqj",
              "EntityName": "Mexico City"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2921",
      "RawQuestion": "who started the federal reserve board?",
      "ProcessedQuestion": "who started the federal reserve board",
      "Parses": [
        {
          "ParseId": "WebQTrn-2921.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q53536) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q53536 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "federal reserve board",
          "TopicEntityName": "Federal Reserve System",
          "TopicEntityMid": "m.02xmb",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yy8",
              "EntityName": "Franklin D. Roosevelt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gfcd",
              "EntityName": "Carter Glass"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05n2sf",
              "EntityName": "Paul Warburg"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.083q7",
              "EntityName": "Woodrow Wilson"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2925",
      "RawQuestion": "where was emperor tiberius born?",
      "ProcessedQuestion": "where was emperor tiberius born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2925.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1407) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1407 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tiberius",
          "TopicEntityName": "Tiberius",
          "TopicEntityMid": "m.07hz1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06c62",
              "EntityName": "Rome"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2927",
      "RawQuestion": "what county is novato in?",
      "ProcessedQuestion": "what county is novato in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2927.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q851004) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q851004 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "novato",
          "TopicEntityName": "Novato",
          "TopicEntityMid": "m.0r1hb",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2hf",
              "EntityName": "Marin County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-2927.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0r1hb)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0r1hb ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "novato",
          "TopicEntityName": "Novato",
          "TopicEntityMid": "m.0r1hb",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0l2hf",
              "EntityName": "Marin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2933",
      "RawQuestion": "what does matt dallas do now?",
      "ProcessedQuestion": "what does matt dallas do now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2933.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313656) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313656 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "matt dallas",
          "TopicEntityName": "Matt Dallas",
          "TopicEntityMid": "m.0dfyw6",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2934",
      "RawQuestion": "where was abraham buried?",
      "ProcessedQuestion": "where was abraham buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-2934.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9181) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9181 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "abraham",
          "TopicEntityName": "Abraham",
          "TopicEntityMid": "m.0pwb",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jxp0",
              "EntityName": "Cave of the Patriarchs"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2940",
      "RawQuestion": "where does the jordan river end?",
      "ProcessedQuestion": "where does the jordan river end",
      "Parses": [
        {
          "ParseId": "WebQTrn-2940.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40059) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40059 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "jordan river",
          "TopicEntityName": "Jordan River",
          "TopicEntityMid": "m.0cvy5",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02cnp",
              "EntityName": "Dead Sea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2942",
      "RawQuestion": "what school did michael jackson attend?",
      "ProcessedQuestion": "what school did michael jackson attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-2942.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06lhpy",
              "EntityName": "Montclair College Preparatory School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2943",
      "RawQuestion": "what does kenya moore do for a living?",
      "ProcessedQuestion": "what does kenya moore do for a living",
      "Parses": [
        {
          "ParseId": "WebQTrn-2943.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q447710) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q447710 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "kenya moore",
          "TopicEntityName": "Kenya Moore",
          "TopicEntityMid": "m.08cpnf",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2944",
      "RawQuestion": "what country is barack obama from?",
      "ProcessedQuestion": "what country is barack obama from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2944.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2945",
      "RawQuestion": "who was wale signed to?",
      "ProcessedQuestion": "who was wale signed to",
      "Parses": [
        {
          "ParseId": "WebQTrn-2945.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q458519) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q458519 wdt:P264 ?x . } ",
          "PotentialTopicEntityMention": "wale",
          "TopicEntityName": "Wale",
          "TopicEntityMid": "m.049fb8r",
          "InferentialChain": [
            "music.artist.label"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01trtc",
              "EntityName": "Interscope Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rhqg",
              "EntityName": "Warner Bros. Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05zsdjw",
              "EntityName": "Roc Nation"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.073tm9",
              "EntityName": "Def Jam Recordings"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0892fn",
              "EntityName": "Allido Records"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dgnk3v",
              "EntityName": "Maybach Music Group"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g768",
              "EntityName": "Atlantic Records"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2946",
      "RawQuestion": "who did tyson chandler play for?",
      "ProcessedQuestion": "who did tyson chandler play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2946.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q297146) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q297146 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "tyson chandler",
          "TopicEntityName": "Tyson Chandler",
          "TopicEntityMid": "m.05j8c8",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2951",
      "RawQuestion": "where was saint joseph from?",
      "ProcessedQuestion": "where was saint joseph from",
      "Parses": [
        {
          "ParseId": "WebQTrn-2951.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128267) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128267 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "saint joseph",
          "TopicEntityName": "Saint Joseph",
          "TopicEntityMid": "m.0c08y",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cy_",
              "EntityName": "Bethlehem"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2954",
      "RawQuestion": "what job did george w bush have?",
      "ProcessedQuestion": "what job did george w bush have",
      "Parses": [
        {
          "ParseId": "WebQTrn-2954.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "george w bush",
          "TopicEntityName": "George W. Bush",
          "TopicEntityMid": "m.09b6zr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01qdsm",
              "EntityName": "Public speaker"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hltv",
              "EntityName": "Pilot"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2959",
      "RawQuestion": "what was howard carter's job?",
      "ProcessedQuestion": "what was howard carter 's job",
      "Parses": [
        {
          "ParseId": "WebQTrn-2959.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q133682) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q133682 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "howard carter",
          "TopicEntityName": "Howard Carter",
          "TopicEntityMid": "m.03jvx",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6pd1",
              "EntityName": "Archaeologist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kx6lf",
              "EntityName": "Egyptologist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2961",
      "RawQuestion": "what was the cause of death of michael jackson?",
      "ProcessedQuestion": "what was the cause of death of michael jackson",
      "Parses": [
        {
          "ParseId": "WebQTrn-2961.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gg4h",
              "EntityName": "Cardiac arrest"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2966",
      "RawQuestion": "what timezone is indianapolis in now?",
      "ProcessedQuestion": "what timezone is indianapolis in now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2966.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6346) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6346 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "indianapolis in",
          "TopicEntityName": "Indianapolis",
          "TopicEntityMid": "m.0ftxw",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2968",
      "RawQuestion": "what time zone is new england usa in?",
      "ProcessedQuestion": "what time zone is new england usa in",
      "Parses": [
        {
          "ParseId": "WebQTrn-2968.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q18389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q18389 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "new england",
          "TopicEntityName": "New England",
          "TopicEntityMid": "m.029jpy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2969",
      "RawQuestion": "where was the vietnam war located?",
      "ProcessedQuestion": "where was the vietnam war located",
      "Parses": [
        {
          "ParseId": "WebQTrn-2969.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8740) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8740 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "vietnam",
          "TopicEntityName": "Vietnam War",
          "TopicEntityMid": "m.07_nf",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01crd5",
              "EntityName": "Vietnam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xbgx",
              "EntityName": "Cambodia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04hhv",
              "EntityName": "Laos"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.073q1",
              "EntityName": "Southeast Asia"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g8bw",
              "EntityName": "South Vietnam"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g970",
              "EntityName": "North Vietnam"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2973",
      "RawQuestion": "where did giovanni da verrazano live?",
      "ProcessedQuestion": "where did giovanni da verrazano live",
      "Parses": [
        {
          "ParseId": "WebQTrn-2973.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q147676) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q147676 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "giovanni da verrazano",
          "TopicEntityName": "Giovanni da Verrazzano",
          "TopicEntityMid": "m.0k6d2",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01b3jn",
              "EntityName": "Dieppe"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2974",
      "RawQuestion": "what was antonio vivaldi known for?",
      "ProcessedQuestion": "what was antonio vivaldi known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2974.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1340) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1340 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "antonio vivaldi",
          "TopicEntityName": "Antonio Vivaldi",
          "TopicEntityMid": "m.0pth",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012vv0",
              "EntityName": "Violist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xjb",
              "EntityName": "Priest"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2984",
      "RawQuestion": "where was president chester arthur born?",
      "ProcessedQuestion": "where was president chester arthur born",
      "Parses": [
        {
          "ParseId": "WebQTrn-2984.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q35498) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q35498 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "chester arthur",
          "TopicEntityName": "Chester A. Arthur",
          "TopicEntityMid": "m.01vb2",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.010jjd",
              "EntityName": "Fairfield"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2986",
      "RawQuestion": "who has tom brady played for?",
      "ProcessedQuestion": "who has tom brady played for",
      "Parses": [
        {
          "ParseId": "WebQTrn-2986.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313381) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313381 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "tom brady",
          "TopicEntityName": "Tom Brady",
          "TopicEntityMid": "m.01xyt7",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g3b",
              "EntityName": "New England Patriots"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fsb_6",
              "EntityName": "Michigan Wolverines football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2989",
      "RawQuestion": "what time is it in lake havasu city arizona?",
      "ProcessedQuestion": "what time is it in lake havasu city arizona",
      "Parses": [
        {
          "ParseId": "WebQTrn-2989.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q79435) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q79435 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "lake havasu city arizona",
          "TopicEntityName": "Lake Havasu City",
          "TopicEntityMid": "m.0qpxs",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2992",
      "RawQuestion": "where did laura bush grow up?",
      "ProcessedQuestion": "where did laura bush grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-2992.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q152019) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q152019 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "laura bush",
          "TopicEntityName": "Laura Bush",
          "TopicEntityMid": "m.04g8d",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013n2h",
              "EntityName": "Midland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2996",
      "RawQuestion": "what did johannes kepler accomplish?",
      "ProcessedQuestion": "what did johannes kepler accomplish",
      "Parses": [
        {
          "ParseId": "WebQTrn-2996.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8963) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8963 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "johannes kepler",
          "TopicEntityName": "Johannes Kepler",
          "TopicEntityMid": "m.0403d",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rxky",
              "EntityName": "Astrologer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2998",
      "RawQuestion": "who is ellen albertini dow?",
      "ProcessedQuestion": "who is ellen albertini dow",
      "Parses": [
        {
          "ParseId": "WebQTrn-2998.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q458512) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q458512 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "ellen albertini dow",
          "TopicEntityName": "Ellen Dow",
          "TopicEntityMid": "m.03hzplf",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d30f",
              "EntityName": "Teacher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6n_q",
              "EntityName": "Choreographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-2999",
      "RawQuestion": "what time zone is london in right now?",
      "ProcessedQuestion": "what time zone is london in right now",
      "Parses": [
        {
          "ParseId": "WebQTrn-2999.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q84) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q84 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "london",
          "TopicEntityName": "London",
          "TopicEntityMid": "m.04jpl",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3008",
      "RawQuestion": "where does morrissey live 2010?",
      "ProcessedQuestion": "where does morrissey live 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-3008.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q202246) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q202246 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2010-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2010-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "morrissey",
          "TopicEntityName": "Morrissey",
          "TopicEntityMid": "m.01w524f",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.052bw",
              "EntityName": "Manchester"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3009",
      "RawQuestion": "what teams did jim harbaugh play for?",
      "ProcessedQuestion": "what teams did jim harbaugh play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3009.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2631300) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2631300 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "jim harbaugh",
          "TopicEntityName": "Jim Harbaugh",
          "TopicEntityMid": "m.04rmtv",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01ct6",
              "EntityName": "Baltimore Ravens"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01y3v",
              "EntityName": "Chicago Bears"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wnh",
              "EntityName": "Indianapolis Colts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rpd",
              "EntityName": "San Diego Chargers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fsb_6",
              "EntityName": "Michigan Wolverines football"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3011",
      "RawQuestion": "where did toussaint louverture live?",
      "ProcessedQuestion": "where did toussaint louverture live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3011.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q205783) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q205783 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "toussaint louverture",
          "TopicEntityName": "Toussaint Louverture",
          "TopicEntityMid": "m.011wgw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01f5d8",
              "EntityName": "Saint-Domingue"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3027",
      "RawQuestion": "who did jerry rice retire with?",
      "ProcessedQuestion": "who did jerry rice retire with",
      "Parses": [
        {
          "ParseId": "WebQTrn-3027.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505423) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505423 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P582 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "jerry rice",
          "TopicEntityName": "Jerry Rice",
          "TopicEntityMid": "m.0240vt",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06rny",
              "EntityName": "San Francisco 49ers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3031",
      "RawQuestion": "where was ted kennedy buried?",
      "ProcessedQuestion": "where was ted kennedy buried",
      "Parses": [
        {
          "ParseId": "WebQTrn-3031.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q134549) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q134549 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "ted kennedy",
          "TopicEntityName": "Ted Kennedy",
          "TopicEntityMid": "m.0194xc",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lbp_",
              "EntityName": "Arlington National Cemetery"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3034",
      "RawQuestion": "where did dr martin luther king get his doctorate?",
      "ProcessedQuestion": "where did dr martin luther king get his doctorate",
      "Parses": [
        {
          "ParseId": "WebQTrn-3034.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P69 ?x . ?y wdt:P512 wd:Q752297 . } ",
          "PotentialTopicEntityMention": "martin luther king",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04zx3q1",
              "EntityName": "PhD",
              "SourceNodeIndex": 0,
              "NodePredicate": "education.education.degree",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gl5_",
              "EntityName": "Boston University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3038",
      "RawQuestion": "where was benjamin franklin raised?",
      "ProcessedQuestion": "where was benjamin franklin raised",
      "Parses": [
        {
          "ParseId": "WebQTrn-3038.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? raised = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "benjamin franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cx_",
              "EntityName": "Boston"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3053",
      "RawQuestion": "what inspired m.c. escher to become an artist?",
      "ProcessedQuestion": "what inspired m.c. escher to become an artist",
      "Parses": [
        {
          "ParseId": "WebQTrn-3053.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1470) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1470 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "m . c . escher",
          "TopicEntityName": "M. C. Escher",
          "TopicEntityMid": "m.051mn",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015g76",
              "EntityName": "Giovanni Battista Piranesi"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3056",
      "RawQuestion": "what county is denver colorado in?",
      "ProcessedQuestion": "what county is denver colorado in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3056.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16554) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16554 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "denver colorado",
          "TopicEntityName": "Denver",
          "TopicEntityMid": "m.02cl1",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3067",
      "RawQuestion": "what was vasco nunez de balboa original purpose of his journey?",
      "ProcessedQuestion": "what was vasco nunez de balboa original purpose of his journey",
      "Parses": [
        {
          "ParseId": "WebQTrn-3067.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q19080) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q19080 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "vasco nunez de balboa",
          "TopicEntityName": "Vasco Núñez de Balboa",
          "TopicEntityMid": "m.0cl9qq",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.040vc4s",
              "EntityName": "Explorer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3068",
      "RawQuestion": "what team did kaka play for in 2009?",
      "ProcessedQuestion": "what team did kaka play for in 2009",
      "Parses": [
        {
          "ParseId": "WebQTrn-3068.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q531814) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q531814 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2009-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2009-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kaka",
          "TopicEntityName": "Kaká",
          "TopicEntityMid": "m.04qv66",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2009-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2009-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2009-01-01",
            "End": "2009-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2009"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.011v3",
              "EntityName": "A.C. Milan"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3079",
      "RawQuestion": "where does jeb bush live?",
      "ProcessedQuestion": "where does jeb bush live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3079.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q221997) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q221997 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jeb bush",
          "TopicEntityName": "Jeb Bush",
          "TopicEntityMid": "m.019x9z",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013n2h",
              "EntityName": "Midland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rn8q",
              "EntityName": "Coral Gables"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3080",
      "RawQuestion": "when did the arab israeli war start?",
      "ProcessedQuestion": "when did the arab israeli war start",
      "Parses": [
        {
          "ParseId": "WebQTrn-3080.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8669) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8669 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "arab israeli war",
          "TopicEntityName": "Arab–Israeli conflict",
          "TopicEntityMid": "m.012d8",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1948-05-15",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3081",
      "RawQuestion": "who influenced michael jackson?",
      "ProcessedQuestion": "who influenced michael jackson",
      "Parses": [
        {
          "ParseId": "WebQTrn-3081.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01b9db",
              "EntityName": "Redd Foxx"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lc5",
              "EntityName": "Charlie Chaplin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0407f",
              "EntityName": "James Brown"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04ct6p",
              "EntityName": "Nipsey Russell"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081nh",
              "EntityName": "Walt Disney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3088",
      "RawQuestion": "where is walton goggins from?",
      "ProcessedQuestion": "where is walton goggins from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3088.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q516690) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q516690 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "walton goggins",
          "TopicEntityName": "Walton Goggins",
          "TopicEntityMid": "m.07qyl3",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0lphb",
              "EntityName": "Birmingham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3094",
      "RawQuestion": "who is aidan quinn?",
      "ProcessedQuestion": "who is aidan quinn",
      "Parses": [
        {
          "ParseId": "WebQTrn-3094.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q403902) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q403902 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "aidan quinn",
          "TopicEntityName": "Aidan Quinn",
          "TopicEntityMid": "m.045c66",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3098",
      "RawQuestion": "where was ben franklin born?",
      "ProcessedQuestion": "where was ben franklin born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3098.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "ben franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cx_",
              "EntityName": "Boston"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3099",
      "RawQuestion": "what timezone is virginia in?",
      "ProcessedQuestion": "what timezone is virginia in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3099.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1370) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1370 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "virginia",
          "TopicEntityName": "Virginia",
          "TopicEntityMid": "m.07z1m",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3101",
      "RawQuestion": "where did jerry spinelli live as a kid?",
      "ProcessedQuestion": "where did jerry spinelli live as a kid",
      "Parses": [
        {
          "ParseId": "WebQTrn-3101.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q563118) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q563118 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "jerry spinelli",
          "TopicEntityName": "Jerry Spinelli",
          "TopicEntityMid": "m.05djw1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0_75d",
              "EntityName": "Norristown"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3104",
      "RawQuestion": "where does spencer pratt go to school?",
      "ProcessedQuestion": "where does spencer pratt go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3104.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2279463) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2279463 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "spencer pratt",
          "TopicEntityName": "Spencer Pratt",
          "TopicEntityMid": "m.02z3d24",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065y4w7",
              "EntityName": "University of Southern California"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3110",
      "RawQuestion": "what schools did barack obama attend?",
      "ProcessedQuestion": "what schools did barack obama attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-3110.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.014zws",
              "EntityName": "Harvard Law School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w5m",
              "EntityName": "Columbia University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0265r_n",
              "EntityName": "Noelani Elementary School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0280qps",
              "EntityName": "State Elementary School Menteng 01"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d9nr",
              "EntityName": "Punahou School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05q2c",
              "EntityName": "Occidental College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbyhz3",
              "EntityName": "St. Francis of Assisi Catholic School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3114",
      "RawQuestion": "what is the hawaii time zone?",
      "ProcessedQuestion": "what is the hawaii time zone",
      "Parses": [
        {
          "ParseId": "WebQTrn-3114.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q782) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q782 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.03gh4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3114.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.014wxc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.014wxc ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaiian Islands",
          "TopicEntityMid": "m.014wxc",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3114.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0jbt3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0jbt3 ns:location.location.time_zones ?x .\n}\n",
          "PotentialTopicEntityMention": "hawaii",
          "TopicEntityName": "Hawaii",
          "TopicEntityMid": "m.0jbt3",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lctm",
              "EntityName": "Hawaii-Aleutian Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3116",
      "RawQuestion": "what teams did manny ramirez play for?",
      "ProcessedQuestion": "what teams did manny ramirez play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3116.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q375648) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q375648 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "manny ramirez",
          "TopicEntityName": "Manny Ramirez",
          "TopicEntityMid": "m.06tjlc",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d5z",
              "EntityName": "Boston Red Sox"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01slc",
              "EntityName": "Chicago White Sox"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yhm",
              "EntityName": "Cleveland Indians"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yjl",
              "EntityName": "Chicago Cubs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04mjl",
              "EntityName": "Los Angeles Dodgers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05m_8",
              "EntityName": "Oakland Athletics"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l8f",
              "EntityName": "Tampa Bay Rays"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07l8x",
              "EntityName": "Texas Rangers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08tdk2",
              "EntityName": "EDA Rhinos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3118",
      "RawQuestion": "what other jobs did benjamin franklin have?",
      "ProcessedQuestion": "what other jobs did benjamin franklin have",
      "Parses": [
        {
          "ParseId": "WebQTrn-3118.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34969) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34969 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "benjamin franklin",
          "TopicEntityName": "Benjamin Franklin",
          "TopicEntityMid": "m.019fz",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01l5t6",
              "EntityName": "Librarian"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kv97_",
              "EntityName": "Satirist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r6c",
              "EntityName": "Printer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05svgpc",
              "EntityName": "Political activist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080ntlp",
              "EntityName": "Diplomat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3123",
      "RawQuestion": "what college did joe namath attend?",
      "ProcessedQuestion": "what college did joe namath attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-3123.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q720558) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q720558 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "joe namath",
          "TopicEntityName": "Joe Namath",
          "TopicEntityMid": "m.01p_3k",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wdl3",
              "EntityName": "University of Alabama"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3127",
      "RawQuestion": "what county is duluth minnesota in?",
      "ProcessedQuestion": "what county is duluth minnesota in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3127.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q485708) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q485708 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "duluth minnesota",
          "TopicEntityName": "Duluth",
          "TopicEntityMid": "m.0h1k6",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh1v",
              "EntityName": "St. Louis County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3127.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h1k6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h1k6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "duluth minnesota",
          "TopicEntityName": "Duluth",
          "TopicEntityMid": "m.0h1k6",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh1v",
              "EntityName": "St. Louis County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3128",
      "RawQuestion": "what zip code is chicago il?",
      "ProcessedQuestion": "what zip code is chicago il",
      "Parses": [
        {
          "ParseId": "WebQTrn-3128.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1297) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1297 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "chicago il",
          "TopicEntityName": "Chicago",
          "TopicEntityMid": "m.01_d4",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p_k",
              "EntityName": "60626"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p6k",
              "EntityName": "60618"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p8l",
              "EntityName": "60601"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6p9s",
              "EntityName": "60610"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pdj",
              "EntityName": "60602"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pgd",
              "EntityName": "60622"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6ph7",
              "EntityName": "60614"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pmb",
              "EntityName": "60607"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pnb",
              "EntityName": "60649"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pp5",
              "EntityName": "60660"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6ps8",
              "EntityName": "60611"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pvy",
              "EntityName": "60646"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6pxw",
              "EntityName": "60657"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q0k",
              "EntityName": "60613"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q1q",
              "EntityName": "60640"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q8p",
              "EntityName": "60619"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6q9q",
              "EntityName": "60605"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qcm",
              "EntityName": "60659"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qjr",
              "EntityName": "60616"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qp4",
              "EntityName": "60608"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qrp",
              "EntityName": "60661"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qsj",
              "EntityName": "60625"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6qz6",
              "EntityName": "60647"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r1z",
              "EntityName": "60630"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r78",
              "EntityName": "60603"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6r82",
              "EntityName": "60631"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6rf1",
              "EntityName": "60606"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6rfw",
              "EntityName": "60655"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6s_6",
              "EntityName": "60634"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6s0l",
              "EntityName": "60617"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6smy",
              "EntityName": "60609"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6sws",
              "EntityName": "60632"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t1b",
              "EntityName": "60623"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t43",
              "EntityName": "60629"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t4y",
              "EntityName": "60652"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t5r",
              "EntityName": "60638"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6t95",
              "EntityName": "60645"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6tgy",
              "EntityName": "60615"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6v4j",
              "EntityName": "60604"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6v6w",
              "EntityName": "60637"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6y3n",
              "EntityName": "60643"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_6zk1",
              "EntityName": "60624"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_7140",
              "EntityName": "60653"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_71cx",
              "EntityName": "60666"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_72xz",
              "EntityName": "60628"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_73_n",
              "EntityName": "60641"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_75zb",
              "EntityName": "60612"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_77qt",
              "EntityName": "60639"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_77x6",
              "EntityName": "60636"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78lh",
              "EntityName": "60651"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78nm",
              "EntityName": "60620"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_78wb",
              "EntityName": "60654"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_795b",
              "EntityName": "60644"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_7gfz",
              "EntityName": "60656"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dpqpb",
              "EntityName": "60621"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dpqrm",
              "EntityName": "60633"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.065rklh",
              "EntityName": "60642"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmf7",
              "EntityName": "60701"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfg",
              "EntityName": "60699"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfp",
              "EntityName": "60697"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmfx",
              "EntityName": "60696"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmg_",
              "EntityName": "60690"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmg3",
              "EntityName": "60695"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgb",
              "EntityName": "60694"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgk",
              "EntityName": "60693"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmgs",
              "EntityName": "60691"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmh6",
              "EntityName": "60689"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhf",
              "EntityName": "60688"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhn",
              "EntityName": "60687"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmhw",
              "EntityName": "60686"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmj2",
              "EntityName": "60685"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmj9",
              "EntityName": "60684"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjj",
              "EntityName": "60682"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjr",
              "EntityName": "60681"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmjz",
              "EntityName": "60680"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmk5",
              "EntityName": "60678"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkd",
              "EntityName": "60677"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkm",
              "EntityName": "60675"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmkv",
              "EntityName": "60674"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqml1",
              "EntityName": "60673"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqml8",
              "EntityName": "60670"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmlh",
              "EntityName": "60669"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmlq",
              "EntityName": "60668"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqmly",
              "EntityName": "60664"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqms5",
              "EntityName": "60290"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09sh942",
              "EntityName": "60657-3241"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gs227r",
              "EntityName": "60637-1424"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3130",
      "RawQuestion": "what did andrew johnson die from?",
      "ProcessedQuestion": "what did andrew johnson die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3130.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8612) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8612 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "andrew johnson",
          "TopicEntityName": "Andrew Johnson",
          "TopicEntityMid": "m.0rmg",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02y0js",
              "EntityName": "Stroke"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3133",
      "RawQuestion": "what is janelle monae famous for?",
      "ProcessedQuestion": "what is janelle monae famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3133.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q234356) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q234356 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "janelle monae",
          "TopicEntityName": "Janelle Monae",
          "TopicEntityMid": "m.0gktwr",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016z4k",
              "EntityName": "Singer-songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01c72t",
              "EntityName": "Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xr66",
              "EntityName": "Spokesperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09jwl",
              "EntityName": "Musician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d1pc",
              "EntityName": "Model"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz3r",
              "EntityName": "Record producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fq0t_c",
              "EntityName": "Music artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n1h",
              "EntityName": "Artist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3136",
      "RawQuestion": "what four regions make up the united kingdom?",
      "ProcessedQuestion": "what four regions make up the united kingdom",
      "Parses": [
        {
          "ParseId": "WebQTrn-3136.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q145 wdt:P150 ?x . } ",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "base.aareas.schema.administrative_area.administrative_children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3136.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.07ssc)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.07ssc ns:location.country.first_level_divisions ?x .\n}\n",
          "PotentialTopicEntityMention": "united kingdom",
          "TopicEntityName": "United Kingdom",
          "TopicEntityMid": "m.07ssc",
          "InferentialChain": [
            "location.country.first_level_divisions"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jx1",
              "EntityName": "England"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bcl",
              "EntityName": "Northern Ireland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q1r",
              "EntityName": "Scotland"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0j5g9",
              "EntityName": "Wales"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3141",
      "RawQuestion": "where was anne hathaway born?",
      "ProcessedQuestion": "where was anne hathaway born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3141.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36301) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36301 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "anne hathaway",
          "TopicEntityName": "Anne Hathaway",
          "TopicEntityMid": "m.02vntj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cr3d",
              "EntityName": "Brooklyn"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3143",
      "RawQuestion": "who owns audi 2011?",
      "ProcessedQuestion": "who owns audi 2011",
      "Parses": [
        {
          "ParseId": "WebQTrn-3143.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23317) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23317 wdt:P749 ?y . ?y wdt:P749 ?x . } ",
          "PotentialTopicEntityMention": "audi",
          "TopicEntityName": "Audi",
          "TopicEntityMid": "m.0k50",
          "InferentialChain": [
            "organization.organization.parent",
            "organization.organization_relationship.parent"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07_zt",
              "EntityName": "Volkswagen Group"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3145",
      "RawQuestion": "who started twa airlines?",
      "ProcessedQuestion": "who started twa airlines",
      "Parses": [
        {
          "ParseId": "WebQTrn-3145.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q527341) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q527341 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "twa airlines",
          "TopicEntityName": "Trans World Airlines",
          "TopicEntityMid": "m.013w80",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03n93",
              "EntityName": "Howard Hughes"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3149",
      "RawQuestion": "what county is duluth in?",
      "ProcessedQuestion": "what county is duluth in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3149.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q485708) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q485708 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "duluth",
          "TopicEntityName": "Duluth",
          "TopicEntityMid": "m.0h1k6",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh1v",
              "EntityName": "St. Louis County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3149.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0h1k6)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0h1k6 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "duluth",
          "TopicEntityName": "Duluth",
          "TopicEntityMid": "m.0h1k6",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nh1v",
              "EntityName": "St. Louis County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3152",
      "RawQuestion": "who wrote luke bryan's drunk on you?",
      "ProcessedQuestion": "who wrote luke bryan 's drunk on you",
      "Parses": [
        {
          "ParseId": "WebQTrn-3152.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3715559) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3715559 wdt:P86 ?x . } ",
          "PotentialTopicEntityMention": "drunk on you",
          "TopicEntityName": "Drunk on You",
          "TopicEntityMid": "m.0j625w_",
          "InferentialChain": [
            "music.composition.composer"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qk17r",
              "EntityName": "Josh Kear"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05chlcv",
              "EntityName": "Chris Tompkins"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cxfgy",
              "EntityName": "Rodney Clawson"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3153",
      "RawQuestion": "what time is it in japan 24 hour clock?",
      "ProcessedQuestion": "what time is it in japan 24 hour clock",
      "Parses": [
        {
          "ParseId": "WebQTrn-3153.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "japan",
          "TopicEntityName": "Japan",
          "TopicEntityMid": "m.03_3d",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.019rdm",
              "EntityName": "Japan Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3156",
      "RawQuestion": "what kinda music does john mayer sing?",
      "ProcessedQuestion": "what kinda music does john mayer sing",
      "Parses": [
        {
          "ParseId": "WebQTrn-3156.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215215) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215215 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "john mayer",
          "TopicEntityName": "John Mayer",
          "TopicEntityMid": "m.01s21dg",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01243b",
              "EntityName": "Indie rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016clz",
              "EntityName": "Alternative rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016jny",
              "EntityName": "Folk rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01lyv",
              "EntityName": "Country"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.027pgn0",
              "EntityName": "Soul rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_kn",
              "EntityName": "Soft rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qdgx",
              "EntityName": "Blue-eyed soul"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02w4v",
              "EntityName": "Folk music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02yv6b",
              "EntityName": "Blues rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06by7",
              "EntityName": "Rock music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09qxq7",
              "EntityName": "Acoustic music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gywn",
              "EntityName": "Soul music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mhfr",
              "EntityName": "Country rock"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3161",
      "RawQuestion": "where did sir john a macdonald die?",
      "ProcessedQuestion": "where did sir john a macdonald die",
      "Parses": [
        {
          "ParseId": "WebQTrn-3161.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q128702) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q128702 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "john a macdonald",
          "TopicEntityName": "John A. Macdonald",
          "TopicEntityMid": "m.041rh",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05ksh",
              "EntityName": "Ottawa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3164",
      "RawQuestion": "where did martin luther king jr get shot?",
      "ProcessedQuestion": "where did martin luther king jr get shot",
      "Parses": [
        {
          "ParseId": "WebQTrn-3164.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3170",
      "RawQuestion": "what does obama have a degree in?",
      "ProcessedQuestion": "what does obama have a degree in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3170.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P69 ?y . ?y wdt:P812 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.education",
            "education.education.major_field_of_study"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.062z7",
              "EntityName": "Political Science"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3172",
      "RawQuestion": "what country did giovanni da verrazano represent?",
      "ProcessedQuestion": "what country did giovanni da verrazano represent",
      "Parses": [
        {
          "ParseId": "WebQTrn-3172.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q147676) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q147676 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "giovanni da verrazano",
          "TopicEntityName": "Giovanni da Verrazzano",
          "TopicEntityMid": "m.0k6d2",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03rjj",
              "EntityName": "Italy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3173",
      "RawQuestion": "when was saint nicholas died?",
      "ProcessedQuestion": "when was saint nicholas died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3173.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44269) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44269 wdt:P570 ?x . } ",
          "PotentialTopicEntityMention": "saint nicholas",
          "TopicEntityName": "Saint Nicholas",
          "TopicEntityMid": "m.0f9q7",
          "InferentialChain": [
            "people.deceased_person.date_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "0343-12-06",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3177",
      "RawQuestion": "where is the time zone in florida?",
      "ProcessedQuestion": "where is the time zone in florida",
      "Parses": [
        {
          "ParseId": "WebQTrn-3177.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q812 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "florida",
          "TopicEntityName": "Florida",
          "TopicEntityMid": "m.02xry",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3179",
      "RawQuestion": "what county is clearwater fl in?",
      "ProcessedQuestion": "what county is clearwater fl in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3179.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q244146) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q244146 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "clearwater fl",
          "TopicEntityName": "Clearwater",
          "TopicEntityMid": "m.0rqyx",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jxgx",
              "EntityName": "Pinellas County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3179.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0rqyx)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0rqyx ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "clearwater fl",
          "TopicEntityName": "Clearwater",
          "TopicEntityMid": "m.0rqyx",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jxgx",
              "EntityName": "Pinellas County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3185",
      "RawQuestion": "what is thomas edison's most famous for?",
      "ProcessedQuestion": "what is thomas edison 's most famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3185.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8743) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8743 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "thomas edison",
          "TopicEntityName": "Thomas Edison",
          "TopicEntityMid": "m.07bty",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02jknp",
              "EntityName": "Film director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03sbb",
              "EntityName": "Inventor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3186",
      "RawQuestion": "what does jennifer lopez do?",
      "ProcessedQuestion": "what does jennifer lopez do",
      "Parses": [
        {
          "ParseId": "WebQTrn-3186.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q40715) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q40715 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jennifer lopez",
          "TopicEntityName": "Jennifer Lopez",
          "TopicEntityMid": "m.043zg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0164xg",
              "EntityName": "Philanthropist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6n_q",
              "EntityName": "Choreographer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6nmf",
              "EntityName": "Entertainer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p92",
              "EntityName": "Dancer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqyhw",
              "EntityName": "Fashion designer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.043tvhw",
              "EntityName": "Perfumer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04l1gwb",
              "EntityName": "Film Score Composer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064xm0",
              "EntityName": "Music Video Director"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09l65",
              "EntityName": "Singer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dz3r",
              "EntityName": "Record producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nbcg",
              "EntityName": "Songwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3194",
      "RawQuestion": "where does president barack obama live?",
      "ProcessedQuestion": "where does president barack obama live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3194.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "need \"to\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "barack obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_d4",
              "EntityName": "Chicago"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_286",
              "EntityName": "New York City"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh0_",
              "EntityName": "Honolulu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.044rv",
              "EntityName": "Jakarta"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081sq",
              "EntityName": "White House"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rh6k",
              "EntityName": "Washington, D.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3197",
      "RawQuestion": "what did whitney houston die of?",
      "ProcessedQuestion": "what did whitney houston die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-3197.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q34389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q34389 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "whitney houston",
          "TopicEntityName": "Whitney Houston",
          "TopicEntityMid": "m.086qd",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g27f",
              "EntityName": "Drowning"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01s1m",
              "EntityName": "Coronary artery disease"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02nx6jb",
              "EntityName": "Cocaine overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3200",
      "RawQuestion": "who is the 2011 heisman trophy winner?",
      "ProcessedQuestion": "who is the 2011 heisman trophy winner",
      "Parses": [
        {
          "ParseId": "WebQTrn-3200.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1035067) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1035067 wdt:P1346 ?y . ?y wdt:P1346 ?x . FILTER(NOT EXISTS {?y wdt:P585 ?sk0} ||  EXISTS {?y wdt:P585 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2011-01-01\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P585 ?sk2} ||  EXISTS {?y wdt:P585 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2011-12-31\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "heisman trophy",
          "TopicEntityName": "Heisman Trophy",
          "TopicEntityMid": "m.01q9mk",
          "InferentialChain": [
            "award.award_category.winners",
            "award.award_honor.award_winner"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "award.award_honor.year",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051wcwn",
              "EntityName": "Robert Griffin III"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3209",
      "RawQuestion": "where was george washington originally from?",
      "ProcessedQuestion": "where was george washington originally from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3209.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q23) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q23 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "george washington",
          "TopicEntityName": "George Washington",
          "TopicEntityMid": "m.034rd",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mmyl",
              "EntityName": "Westmoreland County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3210",
      "RawQuestion": "what country christopher columbus from?",
      "ProcessedQuestion": "what country christopher columbus from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3210.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7322) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7322 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "christopher columbus",
          "TopicEntityName": "Christopher Columbus",
          "TopicEntityMid": "m.01pwz",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02q14r",
              "EntityName": "Republic of Genoa"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3211",
      "RawQuestion": "who was michael j fox?",
      "ProcessedQuestion": "who was michael j fox",
      "Parses": [
        {
          "ParseId": "WebQTrn-3211.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q395274) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q395274 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "michael j fox",
          "TopicEntityName": "Michael J. Fox",
          "TopicEntityMid": "m.0hz_1",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01d_h8",
              "EntityName": "Film Producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gjzk",
              "EntityName": "Television producer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0np9r",
              "EntityName": "Voice Actor"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3215",
      "RawQuestion": "where is shawn johnson gymnast from?",
      "ProcessedQuestion": "where is shawn johnson gymnast from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3215.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229044) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229044 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "shawn johnson",
          "TopicEntityName": "Shawn Johnson",
          "TopicEntityMid": "m.026sgt0",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02j3w",
              "EntityName": "Des Moines"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3217",
      "RawQuestion": "what writers influenced charles dickens?",
      "ProcessedQuestion": "what writers influenced charles dickens",
      "Parses": [
        {
          "ParseId": "WebQTrn-3217.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5686) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5686 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "charles dickens",
          "TopicEntityName": "Charles Dickens",
          "TopicEntityMid": "m.01v9724",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01gr2w",
              "EntityName": "Tobias Smollett"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01vh096",
              "EntityName": "Victor Hugo"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03j7p",
              "EntityName": "Henry Fielding"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04kpk",
              "EntityName": "Laurence Sterne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xjp",
              "EntityName": "Miguel de Cervantes"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y8v",
              "EntityName": "Walter Scott"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.072dv",
              "EntityName": "Sheridan Le Fanu"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.081k8",
              "EntityName": "William Shakespeare"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.084y3",
              "EntityName": "Washington Irving"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.085wn",
              "EntityName": "William Wordsworth"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bmjw",
              "EntityName": "Honoré de Balzac"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3218",
      "RawQuestion": "where is roger federer from sui?",
      "ProcessedQuestion": "where is roger federer from sui",
      "Parses": [
        {
          "ParseId": "WebQTrn-3218.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1426) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1426 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "roger federer",
          "TopicEntityName": "Roger Federer",
          "TopicEntityMid": "m.01my95",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01k4f",
              "EntityName": "Basel"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3220",
      "RawQuestion": "what is michael buble's style of music?",
      "ProcessedQuestion": "what is michael buble 's style of music",
      "Parses": [
        {
          "ParseId": "WebQTrn-3220.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q153694) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q153694 wdt:P136 ?x . } ",
          "PotentialTopicEntityMention": "michael buble",
          "TopicEntityName": "Michael Bublé",
          "TopicEntityMid": "m.02xkkq",
          "InferentialChain": [
            "music.artist.genre"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0155w",
              "EntityName": "Blues"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015y_n",
              "EntityName": "Swing music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0161rf",
              "EntityName": "Easy listening"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02dsz1",
              "EntityName": "Lounge music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02k_kn",
              "EntityName": "Soft rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02qdgx",
              "EntityName": "Blue-eyed soul"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vjzr",
              "EntityName": "Adult contemporary music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_d0",
              "EntityName": "Jazz"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05bt6j",
              "EntityName": "Pop rock"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.064t9",
              "EntityName": "Pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h08p",
              "EntityName": "Big Band"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m40d",
              "EntityName": "Traditional pop music"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0y4f8",
              "EntityName": "Vocal music"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3227",
      "RawQuestion": "what did skinner believe?",
      "ProcessedQuestion": "what did skinner believe",
      "Parses": [
        {
          "ParseId": "WebQTrn-3227.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q213195) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q213195 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "skinner",
          "TopicEntityName": "B. F. Skinner",
          "TopicEntityMid": "m.01jv4",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kpl",
              "EntityName": "Atheism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3228",
      "RawQuestion": "when did babe ruth start playing baseball in the mlb?",
      "ProcessedQuestion": "when did babe ruth start playing baseball in the mlb",
      "Parses": [
        {
          "ParseId": "WebQTrn-3228.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q213812) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q213812 wdt:P54 ?y . ?y wdt:P580 ?x . ?y wdt:P582 ?sk0 . } ORDER BY xsd:datetime(?sk0) LIMIT 1 ",
          "PotentialTopicEntityMention": "babe ruth",
          "TopicEntityName": "Babe Ruth",
          "TopicEntityMid": "m.01bss",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.from"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Ascending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1914",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3231",
      "RawQuestion": "what is the zip code for inglewood california?",
      "ProcessedQuestion": "what is the zip code for inglewood california",
      "Parses": [
        {
          "ParseId": "WebQTrn-3231.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q621549) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q621549 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "inglewood california",
          "TopicEntityName": "Inglewood",
          "TopicEntityMid": "m.0r0f7",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg2_k",
              "EntityName": "90302"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg2t2",
              "EntityName": "90304"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg2ty",
              "EntityName": "90301"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg2vs",
              "EntityName": "90303"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg30c",
              "EntityName": "90305"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01zg5dc",
              "EntityName": "90311"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq3_6",
              "EntityName": "90308"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq3_f",
              "EntityName": "90306"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq3z_",
              "EntityName": "90309"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq3zk",
              "EntityName": "90312"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nq3zs",
              "EntityName": "90310"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07tn95v",
              "EntityName": "90307"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3235",
      "RawQuestion": "what made roald dahl famous?",
      "ProcessedQuestion": "what made roald dahl famous",
      "Parses": [
        {
          "ParseId": "WebQTrn-3235.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q25161) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q25161 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "roald dahl",
          "TopicEntityName": "Roald Dahl",
          "TopicEntityMid": "m.0ff2k",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dxtg",
              "EntityName": "Screenwriter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3236",
      "RawQuestion": "what school did martin luther king jr attend?",
      "ProcessedQuestion": "what school did martin luther king jr attend",
      "Parses": [
        {
          "ParseId": "WebQTrn-3236.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_r9k",
              "EntityName": "Morehouse College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0479w_2",
              "EntityName": "Washington High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06yr21",
              "EntityName": "Crozer Theological Seminary"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gl5_",
              "EntityName": "Boston University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3240",
      "RawQuestion": "what country did ponce de leon live in?",
      "ProcessedQuestion": "what country did ponce de leon live in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3240.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q185974) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q185974 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "de leon",
          "TopicEntityName": "Juan Ponce de León",
          "TopicEntityMid": "m.0123f1",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06mkj",
              "EntityName": "Spain"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3242",
      "RawQuestion": "what does the name austin stand for?",
      "ProcessedQuestion": "what does the name austin stand for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3242.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16559) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16559 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "austin",
          "TopicEntityName": "Austin",
          "TopicEntityMid": "m.0vzm",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hhsw",
              "EntityName": "Stephen F. Austin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3243",
      "RawQuestion": "who does hank baskett play for now nov 2010?",
      "ProcessedQuestion": "who does hank baskett play for now nov 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-3243.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1433425) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1433425 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "hank baskett",
          "TopicEntityName": "Hank Baskett",
          "TopicEntityMid": "m.0d81yf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wnh",
              "EntityName": "Indianapolis Colts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051q5",
              "EntityName": "Minnesota Vikings"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3245",
      "RawQuestion": "what team did ronaldo play for?",
      "ProcessedQuestion": "what team did ronaldo play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3245.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q529207) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q529207 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P582 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "ronaldo",
          "TopicEntityName": "Ronaldo",
          "TopicEntityMid": "m.0hhqw",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.to",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3252",
      "RawQuestion": "what countries does the niger river flow through?",
      "ProcessedQuestion": "what countries does the niger river flow through",
      "Parses": [
        {
          "ParseId": "WebQTrn-3252.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3542) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3542 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "niger river",
          "TopicEntityName": "Niger River",
          "TopicEntityMid": "m.05csx",
          "InferentialChain": [
            "geography.river.basin_countries"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0164v",
              "EntityName": "Benin"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03676",
              "EntityName": "Guinea"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04v09",
              "EntityName": "Mali"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cc1",
              "EntityName": "Niger"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05cgv",
              "EntityName": "Nigeria"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3257",
      "RawQuestion": "who does cristiano ronaldo play for 2012?",
      "ProcessedQuestion": "who does cristiano ronaldo play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-3257.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3272",
      "RawQuestion": "what were frederick douglass achievements?",
      "ProcessedQuestion": "what were frederick douglass achievements",
      "Parses": [
        {
          "ParseId": "WebQTrn-3272.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215562) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215562 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "frederick douglass",
          "TopicEntityName": "Frederick Douglass",
          "TopicEntityMid": "m.02zg0",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016fc2",
              "EntityName": "Statesman"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h668d",
              "EntityName": "Publisher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.080ntlp",
              "EntityName": "Diplomat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0hpjt",
              "EntityName": "Orator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3275",
      "RawQuestion": "what is zip code for davenport iowa?",
      "ProcessedQuestion": "what is zip code for davenport iowa",
      "Parses": [
        {
          "ParseId": "WebQTrn-3275.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q26887) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q26887 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "davenport iowa",
          "TopicEntityName": "Davenport",
          "TopicEntityMid": "m.02d6c",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrd_",
              "EntityName": "52801"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrfd",
              "EntityName": "52802"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrft",
              "EntityName": "52803"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrg6",
              "EntityName": "52804"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrgm",
              "EntityName": "52806"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dqrh0",
              "EntityName": "52807"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqqx8",
              "EntityName": "52809"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqqxh",
              "EntityName": "52808"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nqqxq",
              "EntityName": "52805"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3278",
      "RawQuestion": "what was the name of william shakespeare's children?",
      "ProcessedQuestion": "what was the name of william shakespeare 's children",
      "Parses": [
        {
          "ParseId": "WebQTrn-3278.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q692) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q692 wdt:P40 ?x . } ",
          "PotentialTopicEntityMention": "william shakespeare 's",
          "TopicEntityName": "William Shakespeare",
          "TopicEntityMid": "m.081k8",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026db4d",
              "EntityName": "Hamnet Shakespeare"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqr_w",
              "EntityName": "Judith Quiney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c0xwb",
              "EntityName": "Susanna Hall"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3285",
      "RawQuestion": "which team does ronaldinho play for?",
      "ProcessedQuestion": "which team does ronaldinho play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3285.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q39444) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q39444 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "ronaldinho",
          "TopicEntityName": "Ronaldinho",
          "TopicEntityMid": "m.02lfw5",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01352_",
              "EntityName": "Brazil national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xn5n_",
              "EntityName": "Querétaro F.C."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3286",
      "RawQuestion": "where is eric cantor from?",
      "ProcessedQuestion": "where is eric cantor from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3286.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q497271) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q497271 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "eric cantor",
          "TopicEntityName": "Eric Cantor",
          "TopicEntityMid": "m.027z_f",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dzt9",
              "EntityName": "Richmond"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3289",
      "RawQuestion": "where did tim mcgraw grew up?",
      "ProcessedQuestion": "where did tim mcgraw grew up",
      "Parses": [
        {
          "ParseId": "WebQTrn-3289.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q356487) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q356487 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tim mcgraw",
          "TopicEntityName": "Tim McGraw",
          "TopicEntityMid": "m.02lk95",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0tl_z",
              "EntityName": "Delhi"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3294",
      "RawQuestion": "who does sonny bill williams play for 2012?",
      "ProcessedQuestion": "who does sonny bill williams play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-3294.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "time period 2012"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2481789) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2481789 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "sonny bill williams",
          "TopicEntityName": "Sonny Bill Williams",
          "TopicEntityMid": "m.07_658",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_8_7",
              "EntityName": "Chiefs"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3297",
      "RawQuestion": "who did michael vick play for in 2008?",
      "ProcessedQuestion": "who did michael vick play for in 2008",
      "Parses": [
        {
          "ParseId": "WebQTrn-3297.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q505431) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q505431 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2008-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2008-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "michael vick",
          "TopicEntityName": "Michael Vick",
          "TopicEntityMid": "m.027f42",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2008-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2008-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2008-01-01",
            "End": "2008-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2008"
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3300",
      "RawQuestion": "where is rihanna from ethnically?",
      "ProcessedQuestion": "where is rihanna from ethnically",
      "Parses": [
        {
          "ParseId": "WebQTrn-3300.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36844) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36844 wdt:P172 ?x . } ",
          "PotentialTopicEntityMention": "rihanna",
          "TopicEntityName": "Rihanna",
          "TopicEntityMid": "m.06mt91",
          "InferentialChain": [
            "people.person.ethnicity"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c8kp",
              "EntityName": "Afro-Guyanese"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3302",
      "RawQuestion": "what did baron de montesquieu die from?",
      "ProcessedQuestion": "what did baron de montesquieu die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3302.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q15975) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q15975 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "montesquieu",
          "TopicEntityName": "Montesquieu",
          "TopicEntityMid": "m.0f9wd",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cjf0",
              "EntityName": "Fever"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3310",
      "RawQuestion": "what illness did huell howser died of?",
      "ProcessedQuestion": "what illness did huell howser died of",
      "Parses": [
        {
          "ParseId": "WebQTrn-3310.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2837916) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2837916 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "huell howser",
          "TopicEntityName": "Huell Howser",
          "TopicEntityMid": "m.02kddt",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0m32h",
              "EntityName": "Prostate cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3313",
      "RawQuestion": "what nationality is zack de la rocha?",
      "ProcessedQuestion": "what nationality is zack de la rocha",
      "Parses": [
        {
          "ParseId": "WebQTrn-3313.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q139933) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q139933 wdt:P27 ?x . } ",
          "PotentialTopicEntityMention": "zack de la rocha",
          "TopicEntityName": "Zack de la Rocha",
          "TopicEntityMid": "m.01gdlz",
          "InferentialChain": [
            "people.person.nationality"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3316",
      "RawQuestion": "what did doc holliday die from?",
      "ProcessedQuestion": "what did doc holliday die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3316.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q44987) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q44987 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "doc holliday",
          "TopicEntityName": "Doc Holliday",
          "TopicEntityMid": "m.01rl_m",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07jwr",
              "EntityName": "Tuberculosis"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3319",
      "RawQuestion": "who played dorothy in the film wizard of oz?",
      "ProcessedQuestion": "who played dorothy in the film wizard of oz",
      "Parses": [
        {
          "ParseId": "WebQTrn-3319.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q193695) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q193695 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q2583524 . } ",
          "PotentialTopicEntityMention": "wizard of oz",
          "TopicEntityName": "The Wizard of Oz",
          "TopicEntityMid": "m.02q52q",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.020hj1",
              "EntityName": "Dorothy Gale",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0g10g",
              "EntityName": "Judy Garland"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3320",
      "RawQuestion": "who was the owner of kfc?",
      "ProcessedQuestion": "who was the owner of kfc",
      "Parses": [
        {
          "ParseId": "WebQTrn-3320.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q524757) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q524757 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "kfc",
          "TopicEntityName": "KFC",
          "TopicEntityMid": "m.09b6t",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09b78",
              "EntityName": "Colonel Sanders"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3321",
      "RawQuestion": "where did robin gibb die?",
      "ProcessedQuestion": "where did robin gibb die",
      "Parses": [
        {
          "ParseId": "WebQTrn-3321.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q188482) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q188482 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "robin gibb",
          "TopicEntityName": "Robin Gibb",
          "TopicEntityMid": "m.0137hn",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jpl",
              "EntityName": "London"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3325",
      "RawQuestion": "when were the phillies founded?",
      "ProcessedQuestion": "when were the phillies founded",
      "Parses": [
        {
          "ParseId": "WebQTrn-3325.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q650840) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q650840 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "phillies",
          "TopicEntityName": "Philadelphia Phillies",
          "TopicEntityMid": "m.05xvj",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1883",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3329",
      "RawQuestion": "where does jamie chung live?",
      "ProcessedQuestion": "where does jamie chung live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3329.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q232642) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q232642 wdt:P551 ?y . ?y wdt:P551 ?x . FILTER(NOT EXISTS {?y wdt:P582 ?sk0} ||  EXISTS {?y wdt:P582 ?sk1 .  FILTER(xsd:datetime(?sk1) >= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P580 ?sk2} ||  EXISTS {?y wdt:P580 ?sk3 .  FILTER(xsd:datetime(?sk3) <= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "jamie chung",
          "TopicEntityName": "Jamie Chung",
          "TopicEntityMid": "m.03d9fsx",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.end_date",
              "ValueType": "DateTime"
            },
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.place_lived.start_date",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0d6lp",
              "EntityName": "San Francisco"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3331",
      "RawQuestion": "what is the zip code for wildwood?",
      "ProcessedQuestion": "what is the zip code for wildwood",
      "Parses": [
        {
          "ParseId": "WebQTrn-3331.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1087067) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1087067 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "wildwood",
          "TopicEntityName": "Wildwood",
          "TopicEntityMid": "m.0xm82",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.020796r",
              "EntityName": "08260"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3333",
      "RawQuestion": "where did bronx tale take place?",
      "ProcessedQuestion": "where did bronx tale take place",
      "Parses": [
        {
          "ParseId": "WebQTrn-3333.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? intent of the question is unclear"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1130705) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1130705 wdt:P495 ?x . } ",
          "PotentialTopicEntityMention": "bronx tale",
          "TopicEntityName": "A Bronx Tale",
          "TopicEntityMid": "m.02t4w7",
          "InferentialChain": [
            "film.film.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3344",
      "RawQuestion": "where did frank baum live?",
      "ProcessedQuestion": "where did frank baum live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3344.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q207544) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q207544 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "frank baum",
          "TopicEntityName": "L. Frank Baum",
          "TopicEntityMid": "m.04mby",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.071cn",
              "EntityName": "Syracuse"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3347",
      "RawQuestion": "where is johnny depp from?",
      "ProcessedQuestion": "where is johnny depp from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3347.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q37175) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q37175 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "johnny depp",
          "TopicEntityName": "Johnny Depp",
          "TopicEntityMid": "m.0jfx1",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pqz3",
              "EntityName": "Owensboro"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3353",
      "RawQuestion": "what was alice walker famous for?",
      "ProcessedQuestion": "what was alice walker famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3353.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q215868) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q215868 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "alice walker",
          "TopicEntityName": "Alice Walker",
          "TopicEntityMid": "m.0bv70",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3354",
      "RawQuestion": "where did michael jackson went to school?",
      "ProcessedQuestion": "where did michael jackson went to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3354.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2831) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2831 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "michael jackson",
          "TopicEntityName": "Michael Jackson",
          "TopicEntityMid": "m.09889g",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06lhpy",
              "EntityName": "Montclair College Preparatory School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3356",
      "RawQuestion": "where is the time zone in kentucky?",
      "ProcessedQuestion": "where is the time zone in kentucky",
      "Parses": [
        {
          "ParseId": "WebQTrn-3356.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1603) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1603 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "kentucky",
          "TopicEntityName": "Kentucky",
          "TopicEntityMid": "m.0498y",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_37z",
              "EntityName": "UTC−05:00"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02fqwt",
              "EntityName": "Central Time Zone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3358",
      "RawQuestion": "what influenced whitman's poetry?",
      "ProcessedQuestion": "what influenced whitman 's poetry",
      "Parses": [
        {
          "ParseId": "WebQTrn-3358.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q81438) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q81438 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "whitman",
          "TopicEntityName": "Walt Whitman",
          "TopicEntityMid": "m.085gk",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lt8",
              "EntityName": "Edgar Allan Poe"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039n1",
              "EntityName": "Georg Wilhelm Friedrich Hegel"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05np2",
              "EntityName": "Oscar Wilde"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06jkm",
              "EntityName": "Ralph Waldo Emerson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06y8v",
              "EntityName": "Walter Scott"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwx3",
              "EntityName": "Henry David Thoreau"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gzh",
              "EntityName": "Abraham Lincoln"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3361",
      "RawQuestion": "where did jimmy hoffa live?",
      "ProcessedQuestion": "where did jimmy hoffa live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3361.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q317638) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q317638 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "jimmy hoffa",
          "TopicEntityName": "Jimmy Hoffa",
          "TopicEntityMid": "m.01lx0r",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03v1s",
              "EntityName": "Indiana"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3365",
      "RawQuestion": "what state obama was born?",
      "ProcessedQuestion": "what state obama was born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3365.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh0_",
              "EntityName": "Honolulu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3366",
      "RawQuestion": "what is the zip code for morgantown in?",
      "ProcessedQuestion": "what is the zip code for morgantown in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3366.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q653636) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q653636 wdt:P281 ?x . } ",
          "PotentialTopicEntityMention": "morgantown",
          "TopicEntityName": "Morgantown",
          "TopicEntityMid": "m.010y34",
          "InferentialChain": [
            "location.citytown.postal_codes"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.021l1w6",
              "EntityName": "26505"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dz41r",
              "EntityName": "26501"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03dz42b",
              "EntityName": "26508"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9sw",
              "EntityName": "26507"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9t2",
              "EntityName": "26506"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9t9",
              "EntityName": "26504"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07nr9tj",
              "EntityName": "26502"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3368",
      "RawQuestion": "who plays bella on twilight?",
      "ProcessedQuestion": "who plays bella on twilight",
      "Parses": [
        {
          "ParseId": "WebQTrn-3368.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q160071) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q160071 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q223757 . } ",
          "PotentialTopicEntityMention": "twilight",
          "TopicEntityName": "Twilight",
          "TopicEntityMid": "m.03nm_fh",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.027b7y9",
              "EntityName": "Bella Swan",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07swvb",
              "EntityName": "Kristen Stewart"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08pfxwx",
              "EntityName": "Catherine Grimme"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3368.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027b7y9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027b7y9 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.03nm_fh .\n}\n",
          "PotentialTopicEntityMention": "bella",
          "TopicEntityName": "Bella Swan",
          "TopicEntityMid": "m.027b7y9",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.03nm_fh",
              "EntityName": "Twilight",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07swvb",
              "EntityName": "Kristen Stewart"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08pfxwx",
              "EntityName": "Catherine Grimme"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3368.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027b7y9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027b7y9 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.075wx89 .\n}\n",
          "PotentialTopicEntityMention": "bella",
          "TopicEntityName": "Bella Swan",
          "TopicEntityMid": "m.027b7y9",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.075wx89",
              "EntityName": "The Twilight Saga: Breaking Dawn - Part 1",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07swvb",
              "EntityName": "Kristen Stewart"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3368.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.027b7y9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.027b7y9 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0djz0rc .\n}\n",
          "PotentialTopicEntityMention": "bella",
          "TopicEntityName": "Bella Swan",
          "TopicEntityMid": "m.027b7y9",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0djz0rc",
              "EntityName": "The Twilight Saga: Breaking Dawn - Part 2",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07swvb",
              "EntityName": "Kristen Stewart"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3370",
      "RawQuestion": "who does cristiano ronaldo play for in 2010?",
      "ProcessedQuestion": "who does cristiano ronaldo play for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-3370.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11571) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11571 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "cristiano ronaldo",
          "TopicEntityName": "Cristiano Ronaldo",
          "TopicEntityMid": "m.02xt6q",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02rqxc",
              "EntityName": "Portugal national football team"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06l22",
              "EntityName": "Real Madrid C.F."
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3371",
      "RawQuestion": "where did elvis presley live before he died?",
      "ProcessedQuestion": "where did elvis presley live before he died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3371.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q303 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "elvis presley",
          "TopicEntityName": "Elvis Presley",
          "TopicEntityMid": "m.02jq1",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0c_m3",
              "EntityName": "Memphis"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0wqwj",
              "EntityName": "Tupelo"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3376",
      "RawQuestion": "where did kevin hart go to school?",
      "ProcessedQuestion": "where did kevin hart go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3376.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q618352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q618352 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "kevin hart",
          "TopicEntityName": "Kevin Hart",
          "TopicEntityMid": "m.0ggp1n",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01jt2w",
              "EntityName": "Temple University"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gy5x53",
              "EntityName": "Castlemont High School"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3379",
      "RawQuestion": "where does the name melbourne come from?",
      "ProcessedQuestion": "where does the name melbourne come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3379.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q3141) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q3141 wdt:P138 ?x . } ",
          "PotentialTopicEntityMention": "melbourne",
          "TopicEntityName": "Melbourne",
          "TopicEntityMid": "m.0chgzm",
          "InferentialChain": [
            "symbols.namesake.named_after"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bx7q",
              "EntityName": "William Lamb, 2nd Viscount Melbourne"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3385",
      "RawQuestion": "what did susan atkins die of?",
      "ProcessedQuestion": "what did susan atkins die of",
      "Parses": [
        {
          "ParseId": "WebQTrn-3385.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q238111) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q238111 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "susan atkins",
          "TopicEntityName": "Susan Atkins",
          "TopicEntityMid": "m.02h8k7",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09969",
              "EntityName": "Brain tumor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0qcr0",
              "EntityName": "Cancer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3389",
      "RawQuestion": "what country did marco polo come from?",
      "ProcessedQuestion": "what country did marco polo come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3389.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q6101) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q6101 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "marco polo",
          "TopicEntityName": "Marco Polo",
          "TopicEntityMid": "m.04wwh",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02wm6l",
              "EntityName": "Republic of Venice"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3394",
      "RawQuestion": "where did patrick henry live?",
      "ProcessedQuestion": "where did patrick henry live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3394.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q311885) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q311885 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "patrick henry",
          "TopicEntityName": "Patrick Henry",
          "TopicEntityMid": "m.0k5tb",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mns1",
              "EntityName": "Hanover County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3397",
      "RawQuestion": "where did jesse james die?",
      "ProcessedQuestion": "where did jesse james die",
      "Parses": [
        {
          "ParseId": "WebQTrn-3397.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q213626) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q213626 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "jesse james",
          "TopicEntityName": "Jesse James",
          "TopicEntityMid": "m.02khkd",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0135p7",
              "EntityName": "Saint Joseph"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3403",
      "RawQuestion": "what happened to sir thomas cromwell?",
      "ProcessedQuestion": "what happened to sir thomas cromwell",
      "Parses": [
        {
          "ParseId": "WebQTrn-3403.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q294435) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q294435 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "sir thomas cromwell",
          "TopicEntityName": "Thomas Cromwell",
          "TopicEntityMid": "m.0d05q",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jb19",
              "EntityName": "Decapitation"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3410",
      "RawQuestion": "what team does plaxico burress play for?",
      "ProcessedQuestion": "what team does plaxico burress play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3410.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1379303) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1379303 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "plaxico burress",
          "TopicEntityName": "Plaxico Burress",
          "TopicEntityMid": "m.047j_j",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tfm",
              "EntityName": "Pittsburgh Steelers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3412",
      "RawQuestion": "where is victoria beckham from?",
      "ProcessedQuestion": "where is victoria beckham from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3412.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q19810) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q19810 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "victoria beckham",
          "TopicEntityName": "Victoria Beckham",
          "TopicEntityMid": "m.0cgfb",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01z26v",
              "EntityName": "Harlow"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3413",
      "RawQuestion": "what office does paul ryan hold?",
      "ProcessedQuestion": "what office does paul ryan hold",
      "Parses": [
        {
          "ParseId": "WebQTrn-3413.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q203966) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q203966 wdt:P39 ?y . ?y wdt:P39 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "paul ryan",
          "TopicEntityName": "Paul Ryan",
          "TopicEntityMid": "m.024v2j",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "government.government_position_held.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3416",
      "RawQuestion": "who is daniel in the bible?",
      "ProcessedQuestion": "who is daniel in the bible",
      "Parses": [
        {
          "ParseId": "WebQTrn-3416.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q171724) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q171724 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "daniel",
          "TopicEntityName": "Daniel",
          "TopicEntityMid": "m.02cts",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.066dv",
              "EntityName": "Prophet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3423",
      "RawQuestion": "who plays john connor in terminator salvation?",
      "ProcessedQuestion": "who plays john connor in terminator salvation",
      "Parses": [
        {
          "ParseId": "WebQTrn-3423.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q191543) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q191543 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q376577 . } ",
          "PotentialTopicEntityMention": "terminator salvation",
          "TopicEntityName": "Terminator Salvation",
          "TopicEntityMid": "m.043tvp3",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.06nsv4",
              "EntityName": "John Connor",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wy5m",
              "EntityName": "Christian Bale"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3423.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.06nsv4)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.06nsv4 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.043tvp3 .\n}\n",
          "PotentialTopicEntityMention": "john connor",
          "TopicEntityName": "John Connor",
          "TopicEntityMid": "m.06nsv4",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.043tvp3",
              "EntityName": "Terminator Salvation",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wy5m",
              "EntityName": "Christian Bale"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3430",
      "RawQuestion": "who created the chinese communist party?",
      "ProcessedQuestion": "who created the chinese communist party",
      "Parses": [
        {
          "ParseId": "WebQTrn-3430.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q17427) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q17427 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "chinese communist party",
          "TopicEntityName": "Communist Party of China",
          "TopicEntityMid": "m.02189",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d42c",
              "EntityName": "Li Dazhao"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xzm",
              "EntityName": "Mao Zedong"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dbk8",
              "EntityName": "Zhou Enlai"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n10q",
              "EntityName": "Chen Duxiu"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3431",
      "RawQuestion": "what timezone is new england usa in?",
      "ProcessedQuestion": "what timezone is new england usa in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3431.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q18389) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q18389 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "new england",
          "TopicEntityName": "New England",
          "TopicEntityMid": "m.029jpy",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hcv8",
              "EntityName": "Eastern Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3441",
      "RawQuestion": "where james madison was born?",
      "ProcessedQuestion": "where james madison was born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3441.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11813) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11813 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "james madison",
          "TopicEntityName": "James Madison",
          "TopicEntityMid": "m.0424m",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dl52g",
              "EntityName": "Port Conway"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3444",
      "RawQuestion": "what team does kareem abdul jabbar play for?",
      "ProcessedQuestion": "what team does kareem abdul jabbar play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3444.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "missing \"none\" on to, because he doesn't play for any team now. I could return the last team he played for"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q179051) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q179051 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "kareem abdul jabbar",
          "TopicEntityName": "Kareem Abdul-Jabbar",
          "TopicEntityMid": "m.049sb",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": []
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3446",
      "RawQuestion": "where is tsonga born?",
      "ProcessedQuestion": "where is tsonga born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3446.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q192661) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q192661 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tsonga",
          "TopicEntityName": "Jo-Wilfried Tsonga",
          "TopicEntityMid": "m.027q1_3",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04r5c",
              "EntityName": "Le Mans"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3451",
      "RawQuestion": "what does shawn johnson do?",
      "ProcessedQuestion": "what does shawn johnson do",
      "Parses": [
        {
          "ParseId": "WebQTrn-3451.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q229044) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q229044 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "shawn johnson",
          "TopicEntityName": "Shawn Johnson",
          "TopicEntityMid": "m.026sgt0",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0385k",
              "EntityName": "Gymnast"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3453",
      "RawQuestion": "where did nadia boulanger live?",
      "ProcessedQuestion": "where did nadia boulanger live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3453.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q140619) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q140619 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "nadia boulanger",
          "TopicEntityName": "Nadia Boulanger",
          "TopicEntityMid": "m.02cx2m",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05qtj",
              "EntityName": "Paris"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3456",
      "RawQuestion": "who does mark sanchez play for?",
      "ProcessedQuestion": "who does mark sanchez play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3456.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q946184) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q946184 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "mark sanchez",
          "TopicEntityName": "Mark Sanchez",
          "TopicEntityMid": "m.0ctxdn",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3457",
      "RawQuestion": "what sea does the yangtze river empty into?",
      "ProcessedQuestion": "what sea does the yangtze river empty into",
      "Parses": [
        {
          "ParseId": "WebQTrn-3457.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5413) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5413 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "yangtze river",
          "TopicEntityName": "Yangtze",
          "TopicEntityMid": "m.01y4t",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018smn",
              "EntityName": "East China Sea"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3467",
      "RawQuestion": "where is martin cooper from?",
      "ProcessedQuestion": "where is martin cooper from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3467.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q319383) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q319383 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "martin cooper",
          "TopicEntityName": "Martin Cooper",
          "TopicEntityMid": "m.0bt6kc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_d4",
              "EntityName": "Chicago"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3470",
      "RawQuestion": "what office does boehner hold?",
      "ProcessedQuestion": "what office does boehner hold",
      "Parses": [
        {
          "ParseId": "WebQTrn-3470.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11702) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11702 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "boehner",
          "TopicEntityName": "John Boehner",
          "TopicEntityMid": "m.039rwf",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0499g1",
              "EntityName": "Minority leader"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04krrl",
              "EntityName": "Majority leader"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cgqx",
              "EntityName": "Speaker of the United States House of Representatives"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3471",
      "RawQuestion": "where do the baltimore ravens play?",
      "ProcessedQuestion": "where do the baltimore ravens play",
      "Parses": [
        {
          "ParseId": "WebQTrn-3471.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q276539) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q276539 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "baltimore ravens",
          "TopicEntityName": "Baltimore Ravens",
          "TopicEntityMid": "m.01ct6",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01yq7r",
              "EntityName": "M&T Bank Stadium"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3472",
      "RawQuestion": "what sport do the harlem globetrotters play?",
      "ProcessedQuestion": "what sport do the harlem globetrotters play",
      "Parses": [
        {
          "ParseId": "WebQTrn-3472.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q506754) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q506754 wdt:P641 ?x . } ",
          "PotentialTopicEntityMention": "harlem globetrotters",
          "TopicEntityName": "Harlem Globetrotters",
          "TopicEntityMid": "m.01lwc3",
          "InferentialChain": [
            "sports.sports_team.sport"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.018w8",
              "EntityName": "Basketball"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3474",
      "RawQuestion": "where is poe buried now?",
      "ProcessedQuestion": "where is poe buried now",
      "Parses": [
        {
          "ParseId": "WebQTrn-3474.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16867) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16867 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "poe",
          "TopicEntityName": "Edgar Allan Poe",
          "TopicEntityMid": "m.02lt8",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jlwk",
              "EntityName": "Westminster Hall and Burying Ground"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3477",
      "RawQuestion": "who plays mary jane in spiderman 2?",
      "ProcessedQuestion": "who plays mary jane in spiderman 2",
      "Parses": [
        {
          "ParseId": "WebQTrn-3477.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q190145) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q190145 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q27810 . } ",
          "PotentialTopicEntityMention": "spiderman 2",
          "TopicEntityName": "Spider-Man 2",
          "TopicEntityMid": "m.02wgk1",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.01ppxz",
              "EntityName": "Mary Jane Watson",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fzk",
              "EntityName": "Kirsten Dunst"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3477.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.01ppxz)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.01ppxz ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.02wgk1 .\n}\n",
          "PotentialTopicEntityMention": "mary jane",
          "TopicEntityName": "Mary Jane Watson",
          "TopicEntityMid": "m.01ppxz",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02wgk1",
              "EntityName": "Spider-Man 2",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04fzk",
              "EntityName": "Kirsten Dunst"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3480",
      "RawQuestion": "who started mary kay?",
      "ProcessedQuestion": "who started mary kay",
      "Parses": [
        {
          "ParseId": "WebQTrn-3480.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q470196) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q470196 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "mary kay",
          "TopicEntityName": "Mary Kay",
          "TopicEntityMid": "m.05d8vj",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02crtt",
              "EntityName": "Mary Kay Ash"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3487",
      "RawQuestion": "where did paul ryan live?",
      "ProcessedQuestion": "where did paul ryan live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3487.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q203966) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q203966 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "paul ryan",
          "TopicEntityName": "Paul Ryan",
          "TopicEntityMid": "m.024v2j",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01mm_c",
              "EntityName": "Janesville"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3488",
      "RawQuestion": "who is galileo galilei and what is he famous for?",
      "ProcessedQuestion": "who is galileo galilei and what is he famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3488.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q307) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q307 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "galileo galilei",
          "TopicEntityName": "Galileo Galilei",
          "TopicEntityMid": "m.034ks",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025rxky",
              "EntityName": "Astrologer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04s2z",
              "EntityName": "Mathematician"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05snw",
              "EntityName": "Physicist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06q2q",
              "EntityName": "Scientist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0h9c",
              "EntityName": "Astronomer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3507",
      "RawQuestion": "who plays saruman in lord of the rings?",
      "ProcessedQuestion": "who plays saruman in lord of the rings",
      "Parses": [
        {
          "ParseId": "WebQTrn-3507.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q127367) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q127367 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q216489 . } ",
          "PotentialTopicEntityMention": "lord of the rings",
          "TopicEntityName": "The Lord of the Rings: The Fellowship of the Ring",
          "TopicEntityMid": "m.017gl1",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0g3fs",
              "EntityName": "Saruman",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0kz",
              "EntityName": "Christopher Lee"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3507.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.017jd9)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.017jd9 ns:film.film.starring ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.character ns:m.0g3fs .\n}\n",
          "PotentialTopicEntityMention": "lord of the rings",
          "TopicEntityName": "The Lord of the Rings: The Return of the King",
          "TopicEntityMid": "m.017jd9",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0g3fs",
              "EntityName": "Saruman",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0kz",
              "EntityName": "Christopher Lee"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3507.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3fs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3fs ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.017gl1 .\n}\n",
          "PotentialTopicEntityMention": "saruman",
          "TopicEntityName": "Saruman",
          "TopicEntityMid": "m.0g3fs",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.017gl1",
              "EntityName": "The Lord of the Rings: The Fellowship of the Ring",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0kz",
              "EntityName": "Christopher Lee"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3507.P3",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3fs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3fs ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.017jd9 .\n}\n",
          "PotentialTopicEntityMention": "saruman",
          "TopicEntityName": "Saruman",
          "TopicEntityMid": "m.0g3fs",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.017jd9",
              "EntityName": "The Lord of the Rings: The Return of the King",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0kz",
              "EntityName": "Christopher Lee"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3507.P4",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0g3fs)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0g3fs ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.017gm7 .\n}\n",
          "PotentialTopicEntityMention": "saruman",
          "TopicEntityName": "Saruman",
          "TopicEntityMid": "m.0g3fs",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.017gm7",
              "EntityName": "The Lord of the Rings: The Two Towers",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f0kz",
              "EntityName": "Christopher Lee"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3510",
      "RawQuestion": "what teams did shaq play 4?",
      "ProcessedQuestion": "what teams did shaq play 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-3510.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q169452) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q169452 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "shaq",
          "TopicEntityName": "Shaquille O'Neal",
          "TopicEntityMid": "m.012xdf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.026dqjm",
              "EntityName": "LSU Tigers men's basketball"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwjj",
              "EntityName": "Boston Celtics"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm2v",
              "EntityName": "Miami Heat"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm4b",
              "EntityName": "Orlando Magic"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm7n",
              "EntityName": "Cleveland Cavaliers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jml5",
              "EntityName": "Phoenix Suns"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3514",
      "RawQuestion": "where did andreas vesalius die?",
      "ProcessedQuestion": "where did andreas vesalius die",
      "Parses": [
        {
          "ParseId": "WebQTrn-3514.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q170267) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q170267 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "andreas vesalius",
          "TopicEntityName": "Andreas Vesalius",
          "TopicEntityMid": "m.07zk5",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01t0n2",
              "EntityName": "Zakynthos Island"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3519",
      "RawQuestion": "where was emperor qin shi huang born?",
      "ProcessedQuestion": "where was emperor qin shi huang born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3519.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7192) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7192 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "qin shi huang",
          "TopicEntityName": "Qin Shi Huang",
          "TopicEntityMid": "m.0pf00",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04xtcd",
              "EntityName": "Handan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3525",
      "RawQuestion": "where did mendeleev died?",
      "ProcessedQuestion": "where did mendeleev died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3525.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9106) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9106 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "mendeleev",
          "TopicEntityName": "Dmitri Mendeleev",
          "TopicEntityMid": "m.0gglj",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06pr6",
              "EntityName": "Saint Petersburg"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3532",
      "RawQuestion": "what religion did jesus christ follow?",
      "ProcessedQuestion": "what religion did jesus christ follow",
      "Parses": [
        {
          "ParseId": "WebQTrn-3532.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q302) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q302 wdt:P140 ?x . } ",
          "PotentialTopicEntityMention": "jesus christ",
          "TopicEntityName": "Jesus Christ",
          "TopicEntityMid": "m.045m1_",
          "InferentialChain": [
            "people.person.religion"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03_gx",
              "EntityName": "Judaism"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3539",
      "RawQuestion": "where does t boone pickens live?",
      "ProcessedQuestion": "where does t boone pickens live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3539.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q370092) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q370092 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "t boone pickens",
          "TopicEntityName": "T. Boone Pickens",
          "TopicEntityMid": "m.05jyjn",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05mph",
              "EntityName": "Oklahoma"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3541",
      "RawQuestion": "where was saint paul from?",
      "ProcessedQuestion": "where was saint paul from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3541.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9200) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9200 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "saint paul",
          "TopicEntityName": "Paul the Apostle",
          "TopicEntityMid": "m.060nc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03kcs9",
              "EntityName": "Tarsus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3548",
      "RawQuestion": "where did charlton heston live?",
      "ProcessedQuestion": "where did charlton heston live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3548.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q80739) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q80739 wdt:P551 ?y . ?y wdt:P551 ?x . } ",
          "PotentialTopicEntityMention": "charlton heston",
          "TopicEntityName": "Charlton Heston",
          "TopicEntityMid": "m.0chsq",
          "InferentialChain": [
            "people.person.places_lived",
            "people.place_lived.location"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.030qb3t",
              "EntityName": "Los Angeles"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0psxp",
              "EntityName": "Evanston"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0s5tn",
              "EntityName": "Wilmette"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0vnvs",
              "EntityName": "St. Helen"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3568",
      "RawQuestion": "where did chef chuck hughes go to school?",
      "ProcessedQuestion": "where did chef chuck hughes go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3568.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q2967595) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q2967595 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "chuck hughes",
          "TopicEntityName": "Chuck Hughes",
          "TopicEntityMid": "m.06kj3z",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01s7pm",
              "EntityName": "University of Texas at El Paso"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3572",
      "RawQuestion": "where was tommy steele born?",
      "ProcessedQuestion": "where was tommy steele born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3572.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1284241) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1284241 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "tommy steele",
          "TopicEntityName": "Tommy Steele",
          "TopicEntityMid": "m.01np2lh",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0n8y8",
              "EntityName": "Bermondsey"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3574",
      "RawQuestion": "what team does derek fisher play for 2012?",
      "ProcessedQuestion": "what team does derek fisher play for 2012",
      "Parses": [
        {
          "ParseId": "WebQTrn-3574.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q314621) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q314621 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2012-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2012-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "derek fisher",
          "TopicEntityName": "Derek Fisher",
          "TopicEntityMid": "m.04lvwk",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2012-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2012-01-01",
            "End": "2012-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2012"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04cxw5b",
              "EntityName": "Oklahoma City Thunder"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmcv",
              "EntityName": "Dallas Mavericks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmk7",
              "EntityName": "Los Angeles Lakers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3577",
      "RawQuestion": "what date did the earthquake in christchurch happen?",
      "ProcessedQuestion": "what date did the earthquake in christchurch happen",
      "Parses": [
        {
          "ParseId": "WebQTrn-3577.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q151850) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q151850 wdt:P580 ?x . } ",
          "PotentialTopicEntityMention": "earthquake in christchurch",
          "TopicEntityName": "2011 Christchurch earthquake",
          "TopicEntityMid": "m.0gg9kfr",
          "InferentialChain": [
            "time.event.start_date"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "2011-02-22",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3579",
      "RawQuestion": "where are you if you're in khartoum?",
      "ProcessedQuestion": "where are you if you're in khartoum",
      "Parses": [
        {
          "ParseId": "WebQTrn-3579.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1963) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1963 wdt:P17 ?x . } ",
          "PotentialTopicEntityMention": "khartoum",
          "TopicEntityName": "Khartoum",
          "TopicEntityMid": "m.04d_m",
          "InferentialChain": [
            "base.biblioness.bibs_location.country"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06tw8",
              "EntityName": "Sudan"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3579.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.04d_m)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.04d_m ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "khartoum",
          "TopicEntityName": "Khartoum",
          "TopicEntityMid": "m.04d_m",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.039v8c",
              "EntityName": "Khartoum"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06tw8",
              "EntityName": "Sudan"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3580",
      "RawQuestion": "where did fred west work?",
      "ProcessedQuestion": "where did fred west work",
      "Parses": [
        {
          "ParseId": "WebQTrn-3580.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q577052) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q577052 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "fred west",
          "TopicEntityName": "Fred West",
          "TopicEntityMid": "m.01cjf6",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02vk771",
              "EntityName": "Laborer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3588",
      "RawQuestion": "where did the allied invasion of france take place?",
      "ProcessedQuestion": "where did the allied invasion of france take place",
      "Parses": [
        {
          "ParseId": "WebQTrn-3588.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q16471) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q16471 wdt:P276 ?x . } ",
          "PotentialTopicEntityMention": "allied invasion of france",
          "TopicEntityName": "Invasion of Normandy",
          "TopicEntityMid": "m.0chhs",
          "InferentialChain": [
            "time.event.locations"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05g56",
              "EntityName": "Normandy"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3592",
      "RawQuestion": "when does nasdaq start trading?",
      "ProcessedQuestion": "when does nasdaq start trading",
      "Parses": [
        {
          "ParseId": "WebQTrn-3592.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q82059) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q82059 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "nasdaq",
          "TopicEntityName": "NASDAQ",
          "TopicEntityMid": "m.05dq_",
          "InferentialChain": [
            "organization.organization.date_founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1971-02-04",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3593",
      "RawQuestion": "who plays kermit in the muppets movie?",
      "ProcessedQuestion": "who plays kermit in the muppets movie",
      "Parses": [
        {
          "ParseId": "WebQTrn-3593.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q550558) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q550558 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q1107971 . } ",
          "PotentialTopicEntityMention": "the muppets movie",
          "TopicEntityName": "The Muppets",
          "TopicEntityMid": "m.0ds5_72",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.04bsc",
              "EntityName": "Kermit the Frog",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03gsjv",
              "EntityName": "Steve Whitmire"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3598",
      "RawQuestion": "what year were the new york yankees established?",
      "ProcessedQuestion": "what year were the new york yankees established",
      "Parses": [
        {
          "ParseId": "WebQTrn-3598.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q213417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q213417 wdt:P571 ?x . } ",
          "PotentialTopicEntityMention": "new york yankees",
          "TopicEntityName": "New York Yankees",
          "TopicEntityMid": "m.0cqt41",
          "InferentialChain": [
            "sports.sports_team.founded"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Value",
              "AnswerArgument": "1901",
              "EntityName": null
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3603",
      "RawQuestion": "what did frankie lymon die from?",
      "ProcessedQuestion": "what did frankie lymon die from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3603.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q683420) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q683420 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "frankie lymon",
          "TopicEntityName": "Frankie Lymon",
          "TopicEntityMid": "m.01mlkv5",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kp1qn",
              "EntityName": "Heroin overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3606",
      "RawQuestion": "what was matthias schleiden known for?",
      "ProcessedQuestion": "what was matthias schleiden known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3606.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q76747) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q76747 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "matthias schleiden",
          "TopicEntityName": "Matthias Jakob Schleiden",
          "TopicEntityMid": "m.0dd3q",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02h6p1f",
              "EntityName": "Botanist"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3612",
      "RawQuestion": "what is kate spade?",
      "ProcessedQuestion": "what is kate spade",
      "Parses": [
        {
          "ParseId": "WebQTrn-3612.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q275094) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q275094 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "kate spade",
          "TopicEntityName": "Kate Spade",
          "TopicEntityMid": "m.06bkdx",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hqyhw",
              "EntityName": "Fashion designer"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3614",
      "RawQuestion": "what team does lamar odom play for 2013?",
      "ProcessedQuestion": "what team does lamar odom play for 2013",
      "Parses": [
        {
          "ParseId": "WebQTrn-3614.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q296403) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q296403 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2013-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2013-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "lamar odom",
          "TopicEntityName": "Lamar Odom",
          "TopicEntityMid": "m.02_nkp",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2013-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2013-01-01",
            "End": "2013-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2013"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmjr",
              "EntityName": "Los Angeles Clippers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3615",
      "RawQuestion": "who founded the american federation of labor afl in 1886?",
      "ProcessedQuestion": "who founded the american federation of labor afl in 1886",
      "Parses": [
        {
          "ParseId": "WebQTrn-3615.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q464242) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q464242 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "american federation of labor afl",
          "TopicEntityName": "American Federation of Labor",
          "TopicEntityMid": "m.01z4fn",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01w91b",
              "EntityName": "Samuel Gompers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3617",
      "RawQuestion": "where does missouri river end?",
      "ProcessedQuestion": "where does missouri river end",
      "Parses": [
        {
          "ParseId": "WebQTrn-3617.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5419) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5419 wdt:P403 ?x . } ",
          "PotentialTopicEntityMention": "missouri river",
          "TopicEntityName": "Missouri River",
          "TopicEntityMid": "m.04ykz",
          "InferentialChain": [
            "geography.river.mouth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04yf_",
              "EntityName": "Mississippi River"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3618",
      "RawQuestion": "what team is hank baskett playing for in 2010?",
      "ProcessedQuestion": "what team is hank baskett playing for in 2010",
      "Parses": [
        {
          "ParseId": "WebQTrn-3618.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1433425) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1433425 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2010-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2010-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "hank baskett",
          "TopicEntityName": "Hank Baskett",
          "TopicEntityMid": "m.0d81yf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2010-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2010-01-01",
            "End": "2010-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2010"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wnh",
              "EntityName": "Indianapolis Colts"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051q5",
              "EntityName": "Minnesota Vikings"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05tg3",
              "EntityName": "Philadelphia Eagles"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3628",
      "RawQuestion": "what is duncan bannatyne?",
      "ProcessedQuestion": "what is duncan bannatyne",
      "Parses": [
        {
          "ParseId": "WebQTrn-3628.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5314265) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5314265 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "duncan bannatyne",
          "TopicEntityName": "Duncan Bannatyne",
          "TopicEntityMid": "m.0bw7qg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.012t_z",
              "EntityName": "Businessperson"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.015cjr",
              "EntityName": "Presenter"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.025sppp",
              "EntityName": "Investor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hrh1q",
              "EntityName": "Actor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09x_r",
              "EntityName": "Entrepreneur"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0dypbr",
              "EntityName": "TV Personality"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3629",
      "RawQuestion": "what was caesar augustus known for?",
      "ProcessedQuestion": "what was caesar augustus known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3629.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1405) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1405 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "caesar augustus",
          "TopicEntityName": "Augustus",
          "TopicEntityMid": "m.0ngg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g14w",
              "EntityName": "Roman emperor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3634",
      "RawQuestion": "who does christine gregoire represent?",
      "ProcessedQuestion": "who does christine gregoire represent",
      "Parses": [
        {
          "ParseId": "WebQTrn-3634.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? Assume that Governor of Washington means that she represents people of Washington state"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q239366) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q239366 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "christine gregoire",
          "TopicEntityName": "Christine Gregoire",
          "TopicEntityMid": "m.03mfmb",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04jtgly",
              "EntityName": "Governor of Washington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3641",
      "RawQuestion": "where did president andrew jackson grew up?",
      "ProcessedQuestion": "where did president andrew jackson grew up",
      "Parses": [
        {
          "ParseId": "WebQTrn-3641.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? grew up = birthplace"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11817) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11817 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "president andrew jackson",
          "TopicEntityName": "Andrew Jackson",
          "TopicEntityMid": "m.0rlz",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.054qtk",
              "EntityName": "Waxhaws"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3647",
      "RawQuestion": "where was adolf hitler died?",
      "ProcessedQuestion": "where was adolf hitler died",
      "Parses": [
        {
          "ParseId": "WebQTrn-3647.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q352) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q352 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "adolf hitler",
          "TopicEntityName": "Adolf Hitler",
          "TopicEntityMid": "m.07_m9_",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0156q",
              "EntityName": "Berlin"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3658",
      "RawQuestion": "what did john williams play?",
      "ProcessedQuestion": "what did john williams play",
      "Parses": [
        {
          "ParseId": "WebQTrn-3658.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q370293) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q370293 wdt:P1303 ?x . } ",
          "PotentialTopicEntityMention": "john williams",
          "TopicEntityName": "John Williams",
          "TopicEntityMid": "m.0146pz",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0342h",
              "EntityName": "Guitar"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3658.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0146pg)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0146pg ns:music.group_member.instruments_played ?x .\n}\n",
          "PotentialTopicEntityMention": "john williams",
          "TopicEntityName": "John Williams",
          "TopicEntityMid": "m.0146pg",
          "InferentialChain": [
            "music.group_member.instruments_played"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wy6",
              "EntityName": "Clarinet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05r5c",
              "EntityName": "Piano"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07c6l",
              "EntityName": "Trombone"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07gql",
              "EntityName": "Trumpet"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3660",
      "RawQuestion": "who started southwest airlines?",
      "ProcessedQuestion": "who started southwest airlines",
      "Parses": [
        {
          "ParseId": "WebQTrn-3660.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q503308) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q503308 wdt:P112 ?x . } ",
          "PotentialTopicEntityMention": "southwest airlines",
          "TopicEntityName": "Southwest Airlines",
          "TopicEntityMid": "m.0gztl",
          "InferentialChain": [
            "organization.organization.founders"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03wk_6",
              "EntityName": "Herb Kelleher"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.047pxff",
              "EntityName": "Rollin King"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3667",
      "RawQuestion": "what was james madison's job?",
      "ProcessedQuestion": "what was james madison 's job",
      "Parses": [
        {
          "ParseId": "WebQTrn-3667.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q11813) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q11813 wdt:P39 ?y . ?y wdt:P39 ?x . } ",
          "PotentialTopicEntityMention": "james madison",
          "TopicEntityName": "James Madison",
          "TopicEntityMid": "m.0424m",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_bcst",
              "EntityName": "United States Representative"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.060d2",
              "EntityName": "President of the United States"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07y07",
              "EntityName": "United States Secretary of State"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3670",
      "RawQuestion": "where did hammurabi come from?",
      "ProcessedQuestion": "where did hammurabi come from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3670.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q36359) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q36359 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "hammurabi",
          "TopicEntityName": "Hammurabi",
          "TopicEntityMid": "m.03qlj",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01cyh",
              "EntityName": "Babylon"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3673",
      "RawQuestion": "what timezone is colorado in?",
      "ProcessedQuestion": "what timezone is colorado in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3673.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1261) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1261 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "colorado",
          "TopicEntityName": "Colorado",
          "TopicEntityMid": "m.01n4w",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02hczc",
              "EntityName": "Mountain Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3676",
      "RawQuestion": "who killed david ruffin?",
      "ProcessedQuestion": "who killed david ruffin",
      "Parses": [
        {
          "ParseId": "WebQTrn-3676.P0",
          "AnnotatorId": 4,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? cause of death is \"what\", not \"who\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1176417) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1176417 wdt:P509 ?x . } ",
          "PotentialTopicEntityMention": "david ruffin",
          "TopicEntityName": "David Ruffin",
          "TopicEntityMid": "m.04qh81",
          "InferentialChain": [
            "people.deceased_person.cause_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01tf_6",
              "EntityName": "Drug overdose"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3683",
      "RawQuestion": "what city was kennedy shot?",
      "ProcessedQuestion": "what city was kennedy shot",
      "Parses": [
        {
          "ParseId": "WebQTrn-3683.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "??"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9696) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9696 wdt:P20 ?x . } ",
          "PotentialTopicEntityMention": "kennedy",
          "TopicEntityName": "John F. Kennedy",
          "TopicEntityMid": "m.0d3k14",
          "InferentialChain": [
            "people.deceased_person.place_of_death"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0f2rq",
              "EntityName": "Dallas"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3688",
      "RawQuestion": "where did apostle paul grow up?",
      "ProcessedQuestion": "where did apostle paul grow up",
      "Parses": [
        {
          "ParseId": "WebQTrn-3688.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q9200) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q9200 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "apostle paul",
          "TopicEntityName": "Paul the Apostle",
          "TopicEntityMid": "m.060nc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03kcs9",
              "EntityName": "Tarsus"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3704",
      "RawQuestion": "who voices anakin in the clone wars?",
      "ProcessedQuestion": "who voices anakin in the clone wars",
      "Parses": [
        {
          "ParseId": "WebQTrn-3704.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q382289) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q382289 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q51752 . } ",
          "PotentialTopicEntityMention": "the clone wars",
          "TopicEntityName": "Star Wars: The Clone Wars",
          "TopicEntityMid": "m.0cpllql",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b2l8f",
              "EntityName": "Matt Lanter"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3704.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0f2y0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0f2y0 ns:film.film_character.portrayed_in_films ?y .\n?y ns:film.performance.actor ?x .\n?y ns:film.performance.film ns:m.0cpllql .\n}\n",
          "PotentialTopicEntityMention": "anakin",
          "TopicEntityName": "Darth Vader",
          "TopicEntityMid": "m.0f2y0",
          "InferentialChain": [
            "film.film_character.portrayed_in_films",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0cpllql",
              "EntityName": "Star Wars: The Clone Wars",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.film",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b2l8f",
              "EntityName": "Matt Lanter"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3704.P2",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.02q70n3)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.02q70n3 ns:tv.tv_program.regular_cast ?y .\n?y ns:tv.regular_tv_appearance.actor ?x .\n?y ns:tv.regular_tv_appearance.character ns:m.0f2y0 .\n}\n",
          "PotentialTopicEntityMention": "the clone wars",
          "TopicEntityName": "Star Wars: The Clone Wars",
          "TopicEntityMid": "m.02q70n3",
          "InferentialChain": [
            "tv.tv_program.regular_cast",
            "tv.regular_tv_appearance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0f2y0",
              "EntityName": "Darth Vader",
              "SourceNodeIndex": 0,
              "NodePredicate": "tv.regular_tv_appearance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0b2l8f",
              "EntityName": "Matt Lanter"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3706",
      "RawQuestion": "who plays faramir in lord of the rings?",
      "ProcessedQuestion": "who plays faramir in lord of the rings",
      "Parses": [
        {
          "ParseId": "WebQTrn-3706.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q131074) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q131074 wdt:P161 ?y . ?y wdt:P161 ?x . ?y wdt:P453 wd:Q223468 . } ",
          "PotentialTopicEntityMention": "lord of the rings",
          "TopicEntityName": "The Lord of the Rings: The Return of the King",
          "TopicEntityMid": "m.017jd9",
          "InferentialChain": [
            "film.film.starring",
            "film.performance.actor"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.02_6z",
              "EntityName": "Faramir",
              "SourceNodeIndex": 0,
              "NodePredicate": "film.performance.character",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02ck7w",
              "EntityName": "David Wenham"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3708",
      "RawQuestion": "what is jonathan swift famous for?",
      "ProcessedQuestion": "what is jonathan swift famous for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3708.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q41166) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q41166 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "jonathan swift",
          "TopicEntityName": "Jonathan Swift",
          "TopicEntityMid": "m.03_dj",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02449y",
              "EntityName": "Pamphleteer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02xhgwq",
              "EntityName": "Novelist"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05xjb",
              "EntityName": "Priest"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05z96",
              "EntityName": "Poet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0cbd2",
              "EntityName": "Writer"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0kyk",
              "EntityName": "Author"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3710",
      "RawQuestion": "where was dr luther king jr born?",
      "ProcessedQuestion": "where was dr luther king jr born",
      "Parses": [
        {
          "ParseId": "WebQTrn-3710.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "luther king jr",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.013yq",
              "EntityName": "Atlanta"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3712",
      "RawQuestion": "who does peyton manning play 4?",
      "ProcessedQuestion": "who does peyton manning play 4",
      "Parses": [
        {
          "ParseId": "WebQTrn-3712.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q7539) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q7539 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2015-08-10\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2015-08-10\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "peyton manning",
          "TopicEntityName": "Peyton Manning",
          "TopicEntityMid": "m.027jv8",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2015-08-10",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": true,
            "Start": "0000-00-00",
            "End": "0000-00-00",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": null
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0289q",
              "EntityName": "Denver Broncos"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3715",
      "RawQuestion": "where is bob marley grave?",
      "ProcessedQuestion": "where is bob marley grave",
      "Parses": [
        {
          "ParseId": "WebQTrn-3715.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q409) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q409 wdt:P119 ?x . } ",
          "PotentialTopicEntityMention": "bob marley",
          "TopicEntityName": "Bob Marley",
          "TopicEntityMid": "m.0bkf4",
          "InferentialChain": [
            "people.deceased_person.place_of_burial"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0ggh7j1",
              "EntityName": "Bob Marley Mausoleum"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3717",
      "RawQuestion": "where is murray kentucky?",
      "ProcessedQuestion": "where is murray kentucky",
      "Parses": [
        {
          "ParseId": "WebQTrn-3717.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q984364) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q984364 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "murray kentucky",
          "TopicEntityName": "Murray",
          "TopicEntityMid": "m.0td1z",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnqt",
              "EntityName": "Calloway County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3717.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0td1z)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0td1z ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "murray kentucky",
          "TopicEntityName": "Murray",
          "TopicEntityMid": "m.0td1z",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0498y",
              "EntityName": "Kentucky"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.09c7w0",
              "EntityName": "United States of America"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0nnqt",
              "EntityName": "Calloway County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3718",
      "RawQuestion": "what time zone is anaheim ca?",
      "ProcessedQuestion": "what time zone is anaheim ca",
      "Parses": [
        {
          "ParseId": "WebQTrn-3718.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49247) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49247 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "anaheim ca",
          "TopicEntityName": "Anaheim",
          "TopicEntityMid": "m.0k9p4",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02lcqs",
              "EntityName": "Pacific Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3719",
      "RawQuestion": "where is mount vernon texas?",
      "ProcessedQuestion": "where is mount vernon texas",
      "Parses": [
        {
          "ParseId": "WebQTrn-3719.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q982527) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q982527 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "mount vernon",
          "TopicEntityName": "Mount Vernon",
          "TopicEntityMid": "m.0101gj",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mrrn",
              "EntityName": "Franklin County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3719.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0101gj)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0101gj ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "mount vernon",
          "TopicEntityName": "Mount Vernon",
          "TopicEntityMid": "m.0101gj",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07b_l",
              "EntityName": "Texas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mrrn",
              "EntityName": "Franklin County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3721",
      "RawQuestion": "what is caesar augustus known for?",
      "ProcessedQuestion": "what is caesar augustus known for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3721.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "VeryLow",
            "FreeFormComment": "?? "
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1405) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1405 wdt:P106 ?x . } ",
          "PotentialTopicEntityMention": "caesar augustus",
          "TopicEntityName": "Augustus",
          "TopicEntityMid": "m.0ngg",
          "InferentialChain": [
            "people.person.profession"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01g14w",
              "EntityName": "Roman emperor"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fj9f",
              "EntityName": "Politician"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3728",
      "RawQuestion": "what team does hank baskett play for 2011 season?",
      "ProcessedQuestion": "what team does hank baskett play for 2011 season",
      "Parses": [
        {
          "ParseId": "WebQTrn-3728.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q1433425) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q1433425 wdt:P54 ?y . ?y wdt:P54 ?x . FILTER(NOT EXISTS {?y wdt:P580 ?sk0} ||  EXISTS {?y wdt:P580 ?sk1 .  FILTER(xsd:datetime(?sk1) <= \"2011-12-31\"^^xsd:dateTime) }) FILTER(NOT EXISTS {?y wdt:P582 ?sk2} ||  EXISTS {?y wdt:P582 ?sk3 .  FILTER(xsd:datetime(?sk3) >= \"2011-01-01\"^^xsd:dateTime) }) } ",
          "PotentialTopicEntityMention": "hank baskett",
          "TopicEntityName": "Hank Baskett",
          "TopicEntityMid": "m.0d81yf",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [
            {
              "Operator": "LessOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-12-31",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.from",
              "ValueType": "DateTime"
            },
            {
              "Operator": "GreaterOrEqual",
              "ArgumentType": "Value",
              "Argument": "2011-01-01",
              "EntityName": "",
              "SourceNodeIndex": 0,
              "NodePredicate": "sports.sports_team_roster.to",
              "ValueType": "DateTime"
            }
          ],
          "Time": {
            "IsRelativeToNow": false,
            "Start": "2011-01-01",
            "End": "2011-12-31",
            "AssociatedConstraints": [
              0,
              1
            ],
            "PotentialTimeMention": "2011"
          },
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.051q5",
              "EntityName": "Minnesota Vikings"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3731",
      "RawQuestion": "where did dr. martin luther king jr. go to school?",
      "ProcessedQuestion": "where did dr. martin luther king jr. go to school",
      "Parses": [
        {
          "ParseId": "WebQTrn-3731.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q8027) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q8027 wdt:P69 ?y . ?y wdt:P69 ?x . } ",
          "PotentialTopicEntityMention": "martin luther king jr .",
          "TopicEntityName": "Martin Luther King, Jr.",
          "TopicEntityMid": "m.051cc",
          "InferentialChain": [
            "people.person.education",
            "education.education.institution"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01_r9k",
              "EntityName": "Morehouse College"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0479w_2",
              "EntityName": "Washington High School"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.06yr21",
              "EntityName": "Crozer Theological Seminary"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0gl5_",
              "EntityName": "Boston University"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3736",
      "RawQuestion": "what are romney's sons names?",
      "ProcessedQuestion": "what are romney 's sons names",
      "Parses": [
        {
          "ParseId": "WebQTrn-3736.P0",
          "AnnotatorId": 5,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? romney = \"Mitt Romney\""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4496) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4496 wdt:P40 ?x . ?x wdt:P21 wd:Q44148 . } ",
          "PotentialTopicEntityMention": "romney",
          "TopicEntityName": "Mitt Romney",
          "TopicEntityMid": "m.0271_s",
          "InferentialChain": [
            "people.person.children"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.05zppz",
              "EntityName": "Male",
              "SourceNodeIndex": 0,
              "NodePredicate": "people.person.gender",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkl_",
              "EntityName": "Matt Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkmn",
              "EntityName": "Ben Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02kvkmy",
              "EntityName": "Craig Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03m5dk9",
              "EntityName": "Tagg Romney"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03qj3pv",
              "EntityName": "Josh Romney"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3737",
      "RawQuestion": "where is art smith from?",
      "ProcessedQuestion": "where is art smith from",
      "Parses": [
        {
          "ParseId": "WebQTrn-3737.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q4797077) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q4797077 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "art smith",
          "TopicEntityName": "Art Smith",
          "TopicEntityMid": "m.027560_",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0rkvq",
              "EntityName": "Jasper"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3741",
      "RawQuestion": "what other political offices has obama been in?",
      "ProcessedQuestion": "what other political offices has obama been in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3741.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "!Manual Sparql. Comment: Done. -> Not \"current\" position.. Original comment: F missing not"
          },
          "Sparql": "#MANUAL SPARQL SELECT DISTINCT ?xLabel WHERE {   FILTER (?x != wd:Q76)   wd:Q76 wdt:P39 ?y .   ?y wdt:P39 ?x ;      wdt:P582 ?d .  # the position has ended; not the current position }",
          "PotentialTopicEntityMention": "obama",
          "TopicEntityName": "Barack Obama",
          "TopicEntityMid": "m.02mjmr",
          "InferentialChain": [
            "government.politician.government_positions_held",
            "government.government_position_held.office_position_or_title"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_7l8y",
              "EntityName": "United States Senator"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02_w_sv",
              "EntityName": "Illinois State Senator"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3745",
      "RawQuestion": "what inspired van gogh work?",
      "ProcessedQuestion": "what inspired van gogh work",
      "Parses": [
        {
          "ParseId": "WebQTrn-3745.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q5582) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q5582 wdt:P737 ?x . } ",
          "PotentialTopicEntityMention": "van gogh",
          "TopicEntityName": "Vincent van Gogh",
          "TopicEntityMid": "m.07_m2",
          "InferentialChain": [
            "influence.influence_node.influenced_by"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.016s03",
              "EntityName": "Eugène Delacroix"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01xnj",
              "EntityName": "Claude Monet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0452w",
              "EntityName": "Jean-François Millet"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.056100",
              "EntityName": "Jozef Israëls"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.05t6y5",
              "EntityName": "Anton Mauve"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.063mx",
              "EntityName": "Paul Cézanne"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.08hrl7",
              "EntityName": "Fernand Cormon"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bskv2",
              "EntityName": "Rembrandt"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0fmjym",
              "EntityName": "Willem Roelofs"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0pwnh",
              "EntityName": "Peter Paul Rubens"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3746",
      "RawQuestion": "where is fresno texas located?",
      "ProcessedQuestion": "where is fresno texas located",
      "Parses": [
        {
          "ParseId": "WebQTrn-3746.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q74394) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q74394 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "fresno texas",
          "TopicEntityName": "Fresno",
          "TopicEntityMid": "m.010190",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mrs1",
              "EntityName": "Fort Bend County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3746.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.010190)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.010190 ns:location.location.containedby ?x .\n}\n",
          "PotentialTopicEntityMention": "fresno texas",
          "TopicEntityName": "Fresno",
          "TopicEntityMid": "m.010190",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.07b_l",
              "EntityName": "Texas"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0mrs1",
              "EntityName": "Fort Bend County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3750",
      "RawQuestion": "what team rasheed wallace?",
      "ProcessedQuestion": "what team rasheed wallace",
      "Parses": [
        {
          "ParseId": "WebQTrn-3750.P0",
          "AnnotatorId": 2,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": ""
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q270975) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q270975 wdt:P54 ?y . ?y wdt:P54 ?x . } ",
          "PotentialTopicEntityMention": "rasheed wallace",
          "TopicEntityName": "Rasheed Wallace",
          "TopicEntityMid": "m.02hdjz",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0bwjj",
              "EntityName": "Boston Celtics"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm3v",
              "EntityName": "New York Knicks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm5b",
              "EntityName": "Washington Wizards"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm64",
              "EntityName": "Atlanta Hawks"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jm8l",
              "EntityName": "Detroit Pistons"
            },
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jmm4",
              "EntityName": "Portland Trail Blazers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3751",
      "RawQuestion": "what is the timezone in england called?",
      "ProcessedQuestion": "what is the timezone in england called",
      "Parses": [
        {
          "ParseId": "WebQTrn-3751.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q21) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q21 wdt:P421 ?x . } ",
          "PotentialTopicEntityMention": "england",
          "TopicEntityName": "England",
          "TopicEntityMid": "m.02jx1",
          "InferentialChain": [
            "location.location.time_zones"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.03bdv",
              "EntityName": "Greenwich Mean Time Zone"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3754",
      "RawQuestion": "what team does pudge rodriguez play for?",
      "ProcessedQuestion": "what team does pudge rodriguez play for",
      "Parses": [
        {
          "ParseId": "WebQTrn-3754.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "? filter not quite right"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q706908) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q706908 wdt:P54 ?y . ?y wdt:P54 ?x . ?y wdt:P580 ?sk0 . } ORDER BY DESC(xsd:datetime(?sk0)) LIMIT 1 ",
          "PotentialTopicEntityMention": "pudge rodriguez",
          "TopicEntityName": "Iván Rodríguez",
          "TopicEntityMid": "m.02p6g7",
          "InferentialChain": [
            "sports.pro_athlete.teams",
            "sports.sports_team_roster.team"
          ],
          "Constraints": [],
          "Time": null,
          "Order": {
            "SortOrder": "Descending",
            "Start": 0,
            "Count": 1,
            "SourceNodeIndex": 0,
            "NodePredicate": "sports.sports_team_roster.from",
            "ValueType": "DateTime"
          },
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.02d02",
              "EntityName": "Detroit Tigers"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3759",
      "RawQuestion": "where is texas rangers home stadium?",
      "ProcessedQuestion": "where is texas rangers home stadium",
      "Parses": [
        {
          "ParseId": "WebQTrn-3759.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q329816) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q329816 wdt:P115 ?x . } ",
          "PotentialTopicEntityMention": "texas rangers",
          "TopicEntityName": "Texas Rangers",
          "TopicEntityMid": "m.07l8x",
          "InferentialChain": [
            "sports.sports_team.arena_stadium"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.01wmlm",
              "EntityName": "Rangers Ballpark in Arlington"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3769",
      "RawQuestion": "what county is orlando fl in?",
      "ProcessedQuestion": "what county is orlando fl in",
      "Parses": [
        {
          "ParseId": "WebQTrn-3769.P0",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q49233) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q49233 wdt:P131 ?x . } ",
          "PotentialTopicEntityMention": "orlando fl",
          "TopicEntityName": "Orlando",
          "TopicEntityMid": "m.0ply0",
          "InferentialChain": [
            "location.hud_county_place.county"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrtv",
              "EntityName": "Orange County"
            }
          ]
        },
        {
          "ParseId": "WebQTrn-3769.P1",
          "AnnotatorId": 1,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Normal",
            "FreeFormComment": "First-round parse verification"
          },
          "Sparql": "PREFIX ns: <http://rdf.freebase.com/ns/>\nSELECT DISTINCT ?x\nWHERE {\nFILTER (?x != ns:m.0ply0)\nFILTER (!isLiteral(?x) OR lang(?x) = '' OR langMatches(lang(?x), 'en'))\nns:m.0ply0 ns:location.location.containedby ?x .\n?x ns:common.topic.notable_types ns:m.0kpym_ .\n}\n",
          "PotentialTopicEntityMention": "orlando fl",
          "TopicEntityName": "Orlando",
          "TopicEntityMid": "m.0ply0",
          "InferentialChain": [
            "location.location.containedby"
          ],
          "Constraints": [
            {
              "Operator": "Equal",
              "ArgumentType": "Entity",
              "Argument": "m.0kpym_",
              "EntityName": "US County",
              "SourceNodeIndex": 0,
              "NodePredicate": "common.topic.notable_types",
              "ValueType": "String"
            }
          ],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.0jrtv",
              "EntityName": "Orange County"
            }
          ]
        }
      ]
    },
    {
      "QuestionId": "WebQTrn-3773",
      "RawQuestion": "where did sir donald bradman live?",
      "ProcessedQuestion": "where did sir donald bradman live",
      "Parses": [
        {
          "ParseId": "WebQTrn-3773.P0",
          "AnnotatorId": 3,
          "AnnotatorComment": {
            "ParseQuality": "Complete",
            "QuestionQuality": "Good",
            "Confidence": "Low",
            "FreeFormComment": "?"
          },
          "Sparql": "SELECT DISTINCT ?xLabel WHERE { FILTER (?x != wd:Q313591) ?x rdfs:label ?xLabel filter (lang(?xLabel) = 'en'). wd:Q313591 wdt:P19 ?x . } ",
          "PotentialTopicEntityMention": "sir donald bradman",
          "TopicEntityName": "Don Bradman",
          "TopicEntityMid": "m.0lylw",
          "InferentialChain": [
            "people.person.place_of_birth"
          ],
          "Constraints": [],
          "Time": null,
          "Order": null,
          "Answers": [
            {
              "AnswerType": "Entity",
              "AnswerArgument": "m.04_356",
              "EntityName": "Cootamundra"
            }
          ]
        }
      ]
    }
  ]
}